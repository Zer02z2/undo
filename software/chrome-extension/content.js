function Ng(n,e){for(var t=0;t<e.length;t++){const r=e[t];if(typeof r!="string"&&!Array.isArray(r)){for(const s in r)if(s!=="default"&&!(s in n)){const o=Object.getOwnPropertyDescriptor(r,s);o&&Object.defineProperty(n,s,o.get?o:{enumerable:!0,get:()=>r[s]})}}}return Object.freeze(Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}))}var Ic=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function Eg(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n}function Ig(n){if(n.__esModule)return n;var e=n.default;if(typeof e=="function"){var t=function r(){return this instanceof r?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};t.prototype=e.prototype}else t={};return Object.defineProperty(t,"__esModule",{value:!0}),Object.keys(n).forEach(function(r){var s=Object.getOwnPropertyDescriptor(n,r);Object.defineProperty(t,r,s.get?s:{enumerable:!0,get:function(){return n[r]}})}),t}var Ci={},kc;function kg(){return kc||(kc=1,(function(){var n;function e(g){var v=0;return function(){return v<g.length?{done:!1,value:g[v++]}:{done:!0}}}var t=typeof Object.defineProperties=="function"?Object.defineProperty:function(g,v,C){return g==Array.prototype||g==Object.prototype||(g[v]=C.value),g};function r(g){g=[typeof globalThis=="object"&&globalThis,g,typeof window=="object"&&window,typeof self=="object"&&self,typeof Ic=="object"&&Ic];for(var v=0;v<g.length;++v){var C=g[v];if(C&&C.Math==Math)return C}throw Error("Cannot find global object")}var s=r(this);function o(g,v){if(v)e:{var C=s;g=g.split(".");for(var D=0;D<g.length-1;D++){var z=g[D];if(!(z in C))break e;C=C[z]}g=g[g.length-1],D=C[g],v=v(D),v!=D&&v!=null&&t(C,g,{configurable:!0,writable:!0,value:v})}}o("Symbol",function(g){function v(Y){if(this instanceof v)throw new TypeError("Symbol is not a constructor");return new C(D+(Y||"")+"_"+z++,Y)}function C(Y,K){this.g=Y,t(this,"description",{configurable:!0,writable:!0,value:K})}if(g)return g;C.prototype.toString=function(){return this.g};var D="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",z=0;return v}),o("Symbol.iterator",function(g){if(g)return g;g=Symbol("Symbol.iterator");for(var v="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),C=0;C<v.length;C++){var D=s[v[C]];typeof D=="function"&&typeof D.prototype[g]!="function"&&t(D.prototype,g,{configurable:!0,writable:!0,value:function(){return a(e(this))}})}return g});function a(g){return g={next:g},g[Symbol.iterator]=function(){return this},g}function i(g){var v=typeof Symbol<"u"&&Symbol.iterator&&g[Symbol.iterator];return v?v.call(g):{next:e(g)}}function u(g){if(!(g instanceof Array)){g=i(g);for(var v,C=[];!(v=g.next()).done;)C.push(v.value);g=C}return g}var c=typeof Object.create=="function"?Object.create:function(g){function v(){}return v.prototype=g,new v},l;if(typeof Object.setPrototypeOf=="function")l=Object.setPrototypeOf;else{var h;e:{var d={a:!0},p={};try{p.__proto__=d,h=p.a;break e}catch{}h=!1}l=h?function(g,v){if(g.__proto__=v,g.__proto__!==v)throw new TypeError(g+" is not extensible");return g}:null}var f=l;function x(g,v){if(g.prototype=c(v.prototype),g.prototype.constructor=g,f)f(g,v);else for(var C in v)if(C!="prototype")if(Object.defineProperties){var D=Object.getOwnPropertyDescriptor(v,C);D&&Object.defineProperty(g,C,D)}else g[C]=v[C];g.ea=v.prototype}function y(){this.l=!1,this.i=null,this.h=void 0,this.g=1,this.s=this.m=0,this.j=null}function b(g){if(g.l)throw new TypeError("Generator is already running");g.l=!0}y.prototype.o=function(g){this.h=g};function S(g,v){g.j={U:v,V:!0},g.g=g.m||g.s}y.prototype.return=function(g){this.j={return:g},this.g=this.s};function I(g,v,C){return g.g=C,{value:v}}function k(g){this.g=new y,this.h=g}function P(g,v){b(g.g);var C=g.g.i;return C?W(g,"return"in C?C.return:function(D){return{value:D,done:!0}},v,g.g.return):(g.g.return(v),H(g))}function W(g,v,C,D){try{var z=v.call(g.g.i,C);if(!(z instanceof Object))throw new TypeError("Iterator result "+z+" is not an object");if(!z.done)return g.g.l=!1,z;var Y=z.value}catch(K){return g.g.i=null,S(g.g,K),H(g)}return g.g.i=null,D.call(g.g,Y),H(g)}function H(g){for(;g.g.g;)try{var v=g.h(g.g);if(v)return g.g.l=!1,{value:v.value,done:!1}}catch(C){g.g.h=void 0,S(g.g,C)}if(g.g.l=!1,g.g.j){if(v=g.g.j,g.g.j=null,v.V)throw v.U;return{value:v.return,done:!0}}return{value:void 0,done:!0}}function G(g){this.next=function(v){return b(g.g),g.g.i?v=W(g,g.g.i.next,v,g.g.o):(g.g.o(v),v=H(g)),v},this.throw=function(v){return b(g.g),g.g.i?v=W(g,g.g.i.throw,v,g.g.o):(S(g.g,v),v=H(g)),v},this.return=function(v){return P(g,v)},this[Symbol.iterator]=function(){return this}}function B(g,v){return v=new G(new k(v)),f&&g.prototype&&f(v,g.prototype),v}function V(g,v){g instanceof String&&(g+="");var C=0,D=!1,z={next:function(){if(!D&&C<g.length){var Y=C++;return{value:v(Y,g[Y]),done:!1}}return D=!0,{done:!0,value:void 0}}};return z[Symbol.iterator]=function(){return z},z}var R=typeof Object.assign=="function"?Object.assign:function(g,v){for(var C=1;C<arguments.length;C++){var D=arguments[C];if(D)for(var z in D)Object.prototype.hasOwnProperty.call(D,z)&&(g[z]=D[z])}return g};o("Object.assign",function(g){return g||R}),o("Promise",function(g){function v(K){this.h=0,this.i=void 0,this.g=[],this.o=!1;var J=this.j();try{K(J.resolve,J.reject)}catch(re){J.reject(re)}}function C(){this.g=null}function D(K){return K instanceof v?K:new v(function(J){J(K)})}if(g)return g;C.prototype.h=function(K){if(this.g==null){this.g=[];var J=this;this.i(function(){J.l()})}this.g.push(K)};var z=s.setTimeout;C.prototype.i=function(K){z(K,0)},C.prototype.l=function(){for(;this.g&&this.g.length;){var K=this.g;this.g=[];for(var J=0;J<K.length;++J){var re=K[J];K[J]=null;try{re()}catch(le){this.j(le)}}}this.g=null},C.prototype.j=function(K){this.i(function(){throw K})},v.prototype.j=function(){function K(le){return function(ye){re||(re=!0,le.call(J,ye))}}var J=this,re=!1;return{resolve:K(this.C),reject:K(this.l)}},v.prototype.C=function(K){if(K===this)this.l(new TypeError("A Promise cannot resolve to itself"));else if(K instanceof v)this.F(K);else{e:switch(typeof K){case"object":var J=K!=null;break e;case"function":J=!0;break e;default:J=!1}J?this.u(K):this.m(K)}},v.prototype.u=function(K){var J=void 0;try{J=K.then}catch(re){this.l(re);return}typeof J=="function"?this.G(J,K):this.m(K)},v.prototype.l=function(K){this.s(2,K)},v.prototype.m=function(K){this.s(1,K)},v.prototype.s=function(K,J){if(this.h!=0)throw Error("Cannot settle("+K+", "+J+"): Promise already settled in state"+this.h);this.h=K,this.i=J,this.h===2&&this.D(),this.A()},v.prototype.D=function(){var K=this;z(function(){if(K.B()){var J=s.console;typeof J<"u"&&J.error(K.i)}},1)},v.prototype.B=function(){if(this.o)return!1;var K=s.CustomEvent,J=s.Event,re=s.dispatchEvent;return typeof re>"u"?!0:(typeof K=="function"?K=new K("unhandledrejection",{cancelable:!0}):typeof J=="function"?K=new J("unhandledrejection",{cancelable:!0}):(K=s.document.createEvent("CustomEvent"),K.initCustomEvent("unhandledrejection",!1,!0,K)),K.promise=this,K.reason=this.i,re(K))},v.prototype.A=function(){if(this.g!=null){for(var K=0;K<this.g.length;++K)Y.h(this.g[K]);this.g=null}};var Y=new C;return v.prototype.F=function(K){var J=this.j();K.J(J.resolve,J.reject)},v.prototype.G=function(K,J){var re=this.j();try{K.call(J,re.resolve,re.reject)}catch(le){re.reject(le)}},v.prototype.then=function(K,J){function re(Ne,we){return typeof Ne=="function"?function(fe){try{le(Ne(fe))}catch(m){ye(m)}}:we}var le,ye,Ae=new v(function(Ne,we){le=Ne,ye=we});return this.J(re(K,le),re(J,ye)),Ae},v.prototype.catch=function(K){return this.then(void 0,K)},v.prototype.J=function(K,J){function re(){switch(le.h){case 1:K(le.i);break;case 2:J(le.i);break;default:throw Error("Unexpected state: "+le.h)}}var le=this;this.g==null?Y.h(re):this.g.push(re),this.o=!0},v.resolve=D,v.reject=function(K){return new v(function(J,re){re(K)})},v.race=function(K){return new v(function(J,re){for(var le=i(K),ye=le.next();!ye.done;ye=le.next())D(ye.value).J(J,re)})},v.all=function(K){var J=i(K),re=J.next();return re.done?D([]):new v(function(le,ye){function Ae(fe){return function(m){Ne[fe]=m,we--,we==0&&le(Ne)}}var Ne=[],we=0;do Ne.push(void 0),we++,D(re.value).J(Ae(Ne.length-1),ye),re=J.next();while(!re.done)})},v}),o("Object.is",function(g){return g||function(v,C){return v===C?v!==0||1/v===1/C:v!==v&&C!==C}}),o("Array.prototype.includes",function(g){return g||function(v,C){var D=this;D instanceof String&&(D=String(D));var z=D.length;for(C=C||0,0>C&&(C=Math.max(C+z,0));C<z;C++){var Y=D[C];if(Y===v||Object.is(Y,v))return!0}return!1}}),o("String.prototype.includes",function(g){return g||function(v,C){if(this==null)throw new TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(v instanceof RegExp)throw new TypeError("First argument to String.prototype.includes must not be a regular expression");return this.indexOf(v,C||0)!==-1}}),o("Array.prototype.keys",function(g){return g||function(){return V(this,function(v){return v})}});var q=this||self;function te(g,v){g=g.split(".");var C=q;g[0]in C||typeof C.execScript>"u"||C.execScript("var "+g[0]);for(var D;g.length&&(D=g.shift());)g.length||v===void 0?C[D]&&C[D]!==Object.prototype[D]?C=C[D]:C=C[D]={}:C[D]=v}function he(g,v){return v=String.fromCharCode.apply(null,v),g==null?v:g+v}var de,ge=typeof TextDecoder<"u",be,$e=typeof TextEncoder<"u";function Ie(g){if($e)g=(be||(be=new TextEncoder)).encode(g);else{var v=void 0;v=v===void 0?!1:v;for(var C=0,D=new Uint8Array(3*g.length),z=0;z<g.length;z++){var Y=g.charCodeAt(z);if(128>Y)D[C++]=Y;else{if(2048>Y)D[C++]=Y>>6|192;else{if(55296<=Y&&57343>=Y){if(56319>=Y&&z<g.length){var K=g.charCodeAt(++z);if(56320<=K&&57343>=K){Y=1024*(Y-55296)+K-56320+65536,D[C++]=Y>>18|240,D[C++]=Y>>12&63|128,D[C++]=Y>>6&63|128,D[C++]=Y&63|128;continue}else z--}if(v)throw Error("Found an unpaired surrogate");Y=65533}D[C++]=Y>>12|224,D[C++]=Y>>6&63|128}D[C++]=Y&63|128}}g=D.subarray(0,C)}return g}var _e={},Pe=null;function Ve(g,v){v===void 0&&(v=0),Xn(),v=_e[v];for(var C=Array(Math.floor(g.length/3)),D=v[64]||"",z=0,Y=0;z<g.length-2;z+=3){var K=g[z],J=g[z+1],re=g[z+2],le=v[K>>2];K=v[(K&3)<<4|J>>4],J=v[(J&15)<<2|re>>6],re=v[re&63],C[Y++]=le+K+J+re}switch(le=0,re=D,g.length-z){case 2:le=g[z+1],re=v[(le&15)<<2]||D;case 1:g=g[z],C[Y]=v[g>>2]+v[(g&3)<<4|le>>4]+re+D}return C.join("")}function Ye(g){var v=g.length,C=3*v/4;C%3?C=Math.floor(C):"=.".indexOf(g[v-1])!=-1&&(C="=.".indexOf(g[v-2])!=-1?C-2:C-1);var D=new Uint8Array(C),z=0;return cn(g,function(Y){D[z++]=Y}),D.subarray(0,z)}function cn(g,v){function C(re){for(;D<g.length;){var le=g.charAt(D++),ye=Pe[le];if(ye!=null)return ye;if(!/^[\s\xa0]*$/.test(le))throw Error("Unknown base64 encoding at char: "+le)}return re}Xn();for(var D=0;;){var z=C(-1),Y=C(0),K=C(64),J=C(64);if(J===64&&z===-1)break;v(z<<2|Y>>4),K!=64&&(v(Y<<4&240|K>>2),J!=64&&v(K<<6&192|J))}}function Xn(){if(!Pe){Pe={};for(var g="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),v=["+/=","+/","-_=","-_.","-_"],C=0;5>C;C++){var D=g.concat(v[C].split(""));_e[C]=D;for(var z=0;z<D.length;z++){var Y=D[z];Pe[Y]===void 0&&(Pe[Y]=z)}}}}var Lt=typeof Uint8Array.prototype.slice=="function",zs;function as(g,v,C){return v===C?zs||(zs=new Uint8Array(0)):Lt?g.slice(v,C):new Uint8Array(g.subarray(v,C))}var Xt=0,qt=0;function Je(g,v){v=v===void 0?{}:v,v=v.v===void 0?!1:v.v,this.h=null,this.g=this.j=this.l=0,this.m=!1,this.v=v,g&&qn(this,g)}function qn(g,v){v=v.constructor===Uint8Array?v:v.constructor===ArrayBuffer?new Uint8Array(v):v.constructor===Array?new Uint8Array(v):v.constructor===String?Ye(v):v instanceof Uint8Array?new Uint8Array(v.buffer,v.byteOffset,v.byteLength):new Uint8Array(0),g.h=v,g.l=0,g.j=g.h.length,g.g=g.l}Je.prototype.reset=function(){this.g=this.l};function br(g){for(var v=128,C=0,D=0,z=0;4>z&&128<=v;z++)v=g.h[g.g++],C|=(v&127)<<7*z;if(128<=v&&(v=g.h[g.g++],C|=(v&127)<<28,D|=(v&127)>>4),128<=v)for(z=0;5>z&&128<=v;z++)v=g.h[g.g++],D|=(v&127)<<7*z+3;if(128>v)return g=C>>>0,v=D>>>0,(D=v&2147483648)&&(g=~g+1>>>0,v=~v>>>0,g==0&&(v=v+1>>>0)),g=4294967296*v+(g>>>0),D?-g:g;g.m=!0}Je.prototype.i=function(){var g=this.h,v=g[this.g],C=v&127;return 128>v?(this.g+=1,C):(v=g[this.g+1],C|=(v&127)<<7,128>v?(this.g+=2,C):(v=g[this.g+2],C|=(v&127)<<14,128>v?(this.g+=3,C):(v=g[this.g+3],C|=(v&127)<<21,128>v?(this.g+=4,C):(v=g[this.g+4],C|=(v&15)<<28,128>v?(this.g+=5,C>>>0):(this.g+=5,128<=g[this.g++]&&128<=g[this.g++]&&128<=g[this.g++]&&128<=g[this.g++]&&this.g++,C)))))},Je.prototype.o=function(){var g=this.h[this.g],v=this.h[this.g+1],C=this.h[this.g+2],D=this.h[this.g+3];return this.g+=4,C=(g<<0|v<<8|C<<16|D<<24)>>>0,g=2*(C>>31)+1,v=C>>>23&255,C&=8388607,v==255?C?NaN:1/0*g:v==0?g*Math.pow(2,-149)*C:g*Math.pow(2,v-150)*(C+Math.pow(2,23))};var is=[];function Yt(){this.g=new Uint8Array(64),this.h=0}Yt.prototype.push=function(g){if(!(this.h+1<this.g.length)){var v=this.g;this.g=new Uint8Array(Math.ceil(1+2*this.g.length)),this.g.set(v)}this.g[this.h++]=g},Yt.prototype.length=function(){return this.h},Yt.prototype.end=function(){var g=this.g,v=this.h;return this.h=0,as(g,0,v)};function ln(g,v){for(;127<v;)g.push(v&127|128),v>>>=7;g.push(v)}function Yn(g){var v={},C=v.N===void 0?!1:v.N;this.o={v:v.v===void 0?!1:v.v},this.N=C,v=this.o,is.length?(C=is.pop(),v&&(C.v=v.v),g&&qn(C,g),g=C):g=new Je(g,v),this.g=g,this.m=this.g.g,this.h=this.i=this.l=-1,this.j=!1}Yn.prototype.reset=function(){this.g.reset(),this.h=this.l=-1};function It(g){var v=g.g;if((v=v.g==v.j)||(v=g.j)||(v=g.g,v=v.m||0>v.g||v.g>v.j),v)return!1;g.m=g.g.g,v=g.g.i();var C=v&7;return C!=0&&C!=5&&C!=1&&C!=2&&C!=3&&C!=4?(g.j=!0,!1):(g.i=v,g.l=v>>>3,g.h=C,!0)}function hn(g){switch(g.h){case 0:if(g.h!=0)hn(g);else{for(g=g.g;g.h[g.g]&128;)g.g++;g.g++}break;case 1:g.h!=1?hn(g):(g=g.g,g.g+=8);break;case 2:if(g.h!=2)hn(g);else{var v=g.g.i();g=g.g,g.g+=v}break;case 5:g.h!=5?hn(g):(g=g.g,g.g+=4);break;case 3:v=g.l;do{if(!It(g)){g.j=!0;break}if(g.h==4){g.l!=v&&(g.j=!0);break}hn(g)}while(!0);break;default:g.j=!0}}function us(g,v,C){var D=g.g.j,z=g.g.i(),Y=g.g.g+z;if(g.g.j=Y,C(v,g),C=Y-g.g.g,C!==0)throw Error("Message parsing ended unexpectedly. Expected to read "+z+" bytes, instead read "+(z-C)+" bytes, either the data ended unexpectedly or the message misreported its own length");return g.g.g=Y,g.g.j=D,v}function nt(g){return g.g.o()}function wr(g){var v=g.g.i();g=g.g;var C=g.g;g.g+=v,g=g.h;var D;if(ge)(D=de)||(D=de=new TextDecoder("utf-8",{fatal:!1})),D=D.decode(g.subarray(C,C+v));else{v=C+v;for(var z=[],Y=null,K,J,re;C<v;)K=g[C++],128>K?z.push(K):224>K?C>=v?z.push(65533):(J=g[C++],194>K||(J&192)!==128?(C--,z.push(65533)):z.push((K&31)<<6|J&63)):240>K?C>=v-1?z.push(65533):(J=g[C++],(J&192)!==128||K===224&&160>J||K===237&&160<=J||((D=g[C++])&192)!==128?(C--,z.push(65533)):z.push((K&15)<<12|(J&63)<<6|D&63)):244>=K?C>=v-2?z.push(65533):(J=g[C++],(J&192)!==128||(K<<28)+(J-144)>>30||((D=g[C++])&192)!==128||((re=g[C++])&192)!==128?(C--,z.push(65533)):(K=(K&7)<<18|(J&63)<<12|(D&63)<<6|re&63,K-=65536,z.push((K>>10&1023)+55296,(K&1023)+56320))):z.push(65533),8192<=z.length&&(Y=he(Y,z),z.length=0);D=he(Y,z)}return D}function Gs(g,v,C){var D=g.g.i();for(D=g.g.g+D;g.g.g<D;)C.push(v.call(g.g))}function js(g,v){g.h==2?Gs(g,Je.prototype.o,v):v.push(nt(g))}function _n(){this.h=[],this.i=0,this.g=new Yt}function Qt(g,v){v.length!==0&&(g.h.push(v),g.i+=v.length)}function vr(g){var v=g.i+g.g.length();if(v===0)return new Uint8Array(0);v=new Uint8Array(v);for(var C=g.h,D=C.length,z=0,Y=0;Y<D;Y++){var K=C[Y];K.length!==0&&(v.set(K,z),z+=K.length)}return C=g.g,D=C.h,D!==0&&(v.set(C.g.subarray(0,D),z),C.h=0),g.h=[v],v}function kt(g,v,C){if(C!=null){ln(g.g,8*v+5),g=g.g;var D=C;D=(C=0>D?1:0)?-D:D,D===0?0<1/D?Xt=qt=0:(qt=0,Xt=2147483648):isNaN(D)?(qt=0,Xt=2147483647):34028234663852886e22<D?(qt=0,Xt=(C<<31|2139095040)>>>0):11754943508222875e-54>D?(D=Math.round(D/Math.pow(2,-149)),qt=0,Xt=(C<<31|D)>>>0):(v=Math.floor(Math.log(D)/Math.LN2),D*=Math.pow(2,-v),D=Math.round(8388608*D),16777216<=D&&++v,qt=0,Xt=(C<<31|v+127<<23|D&8388607)>>>0),C=Xt,g.push(C>>>0&255),g.push(C>>>8&255),g.push(C>>>16&255),g.push(C>>>24&255)}}var $r=typeof Uint8Array=="function";function Hs(g,v,C){if(g!=null)return typeof g=="object"?$r&&g instanceof Uint8Array?C(g):Ks(g,v,C):v(g)}function Ks(g,v,C){if(Array.isArray(g)){for(var D=Array(g.length),z=0;z<g.length;z++)D[z]=Hs(g[z],v,C);return Array.isArray(g)&&g.W&&ft(D),D}D={};for(z in g)D[z]=Hs(g[z],v,C);return D}function Mo(g){return typeof g=="number"?isFinite(g)?g:String(g):g}var Uo={W:{value:!0,configurable:!0}};function ft(g){return Array.isArray(g)&&!Object.isFrozen(g)&&Object.defineProperties(g,Uo),g}var et;function tt(g,v,C){var D=et;et=null,g||(g=D),D=this.constructor.ca,g||(g=D?[D]:[]),this.j=D?0:-1,this.m=this.g=null,this.h=g;e:{if(D=this.h.length,g=D-1,D&&(D=this.h[g],!(D===null||typeof D!="object"||Array.isArray(D)||$r&&D instanceof Uint8Array))){this.l=g-this.j,this.i=D;break e}v!==void 0&&-1<v?(this.l=Math.max(v,g+1-this.j),this.i=null):this.l=Number.MAX_VALUE}if(C)for(v=0;v<C.length;v++)g=C[v],g<this.l?(g+=this.j,(D=this.h[g])?ft(D):this.h[g]=Ct):(Cr(this),(D=this.i[g])?ft(D):this.i[g]=Ct)}var Ct=Object.freeze(ft([]));function Cr(g){var v=g.l+g.j;g.h[v]||(g.i=g.h[v]={})}function Ue(g,v,C){return v===-1?null:C!==void 0&&C||v>=g.l?g.i?g.i[v]:void 0:g.h[v+g.j]}function Sr(g,v){var C=C===void 0?!1:C,D=Ue(g,v,C);return D==null&&(D=Ct),D===Ct&&(D=ft([]),Ee(g,v,D,C)),D}function Xs(g){var v=Sr(g,3);if(g.m||(g.m={}),!g.m[3]){for(var C=0;C<v.length;C++)v[C]=+v[C];g.m[3]=!0}return v}function vn(g,v,C){return g=Ue(g,v),g??C}function Bt(g,v,C){return g=Ue(g,v),g=g==null?g:+g,g??(C===void 0?0:C)}function Ee(g,v,C,D){D!==void 0&&D||v>=g.l?(Cr(g),g.i[v]=C):g.h[v+g.j]=C}function Wo(g,v,C){if(C===-1)return null;if(g.g||(g.g={}),!g.g[C]){var D=Ue(g,C,!1);D&&(g.g[C]=new v(D))}return g.g[C]}function cs(g,v){g.g||(g.g={});var C=g.g[1];if(!C){var D=Sr(g,1);C=[];for(var z=0;z<D.length;z++)C[z]=new v(D[z]);g.g[1]=C}return C}function Tr(g,v,C){var D=D===void 0?!1:D;g.g||(g.g={});var z=C&&$n(C);g.g[v]=C,Ee(g,v,z,D)}function Nr(g,v,C,D){var z=cs(g,C);v=v||new C,g=Sr(g,1),D!=null?(z.splice(D,0,v),g.splice(D,0,$n(v))):(z.push(v),g.push($n(v)))}tt.prototype.toJSON=function(){var g=$n(this);return Ks(g,Mo,Ve)};function $n(g,v){if(g.g)for(var C in g.g){var D=g.g[C];if(Array.isArray(D))for(var z=0;z<D.length;z++)D[z]&&$n(D[z]);else D&&$n(D)}return g.h}tt.prototype.toString=function(){return $n(this).toString()};function ls(g,v){if(g=g.o){Qt(v,v.g.end());for(var C=0;C<g.length;C++)Qt(v,g[C])}}function Vt(g,v){if(v.h==4)return!1;var C=v.m;return hn(v),v.N||(v=as(v.g.h,C,v.g.g),(C=g.o)?C.push(v):g.o=[v]),!0}function Cn(g){tt.call(this,g,-1,di)}x(Cn,tt),Cn.prototype.getRows=function(){return Ue(this,1)},Cn.prototype.getCols=function(){return Ue(this,2)},Cn.prototype.getPackedDataList=function(){return Xs(this)},Cn.prototype.getLayout=function(){return vn(this,4,0)};function zo(g,v){for(;It(v);)switch(v.i){case 8:var C=v.g.i();Ee(g,1,C);break;case 16:C=v.g.i(),Ee(g,2,C);break;case 29:case 26:js(v,g.getPackedDataList());break;case 32:C=br(v.g),Ee(g,4,C);break;default:if(!Vt(g,v))return g}return g}var di=[3];function it(g,v){var C=void 0;return new(C||(C=Promise))(function(D,z){function Y(re){try{J(v.next(re))}catch(le){z(le)}}function K(re){try{J(v.throw(re))}catch(le){z(le)}}function J(re){re.done?D(re.value):new C(function(le){le(re.value)}).then(Y,K)}J((v=v.apply(g,void 0)).next())})}function Sn(g){tt.call(this,g)}x(Sn,tt);function Go(g,v){for(;It(v);)switch(v.i){case 8:var C=v.g.i();Ee(g,1,C);break;case 21:C=nt(v),Ee(g,2,C);break;case 26:C=wr(v),Ee(g,3,C);break;case 34:C=wr(v),Ee(g,4,C);break;default:if(!Vt(g,v))return g}return g}function hs(g){tt.call(this,g,-1,jo)}x(hs,tt),hs.prototype.addClassification=function(g,v){return Nr(this,g,Sn,v),this};var jo=[1];function Qn(g){tt.call(this,g)}x(Qn,tt);function pi(g,v){for(;It(v);)switch(v.i){case 13:var C=nt(v);Ee(g,1,C);break;case 21:C=nt(v),Ee(g,2,C);break;case 29:C=nt(v),Ee(g,3,C);break;case 37:C=nt(v),Ee(g,4,C);break;case 45:C=nt(v),Ee(g,5,C);break;default:if(!Vt(g,v))return g}return g}function Ho(g){tt.call(this,g,-1,Xo)}x(Ho,tt);function Ko(g){e:{var v=new Ho;for(g=new Yn(g);It(g);)switch(g.i){case 10:var C=us(g,new Qn,pi);Nr(v,C,Qn,void 0);break;default:if(!Vt(v,g))break e}}return v}var Xo=[1];function ds(g){tt.call(this,g)}x(ds,tt);function An(g){tt.call(this,g,-1,mi)}x(An,tt),An.prototype.getVertexType=function(){return vn(this,1,0)},An.prototype.getPrimitiveType=function(){return vn(this,2,0)},An.prototype.getVertexBufferList=function(){return Xs(this)},An.prototype.getIndexBufferList=function(){return Sr(this,4)};function fi(g,v){for(;It(v);)switch(v.i){case 8:var C=br(v.g);Ee(g,1,C);break;case 16:C=br(v.g),Ee(g,2,C);break;case 29:case 26:js(v,g.getVertexBufferList());break;case 32:case 34:C=v;var D=g.getIndexBufferList();C.h==2?Gs(C,Je.prototype.i,D):D.push(C.g.i());break;default:if(!Vt(g,v))return g}return g}var mi=[3,4];function ps(g){tt.call(this,g)}x(ps,tt),ps.prototype.getMesh=function(){return Wo(this,An,1)},ps.prototype.getPoseTransformMatrix=function(){return Wo(this,Cn,2)};function qo(g){e:{var v=new ps;for(g=new Yn(g);It(g);)switch(g.i){case 10:var C=us(g,new An,fi);Tr(v,1,C);break;case 18:C=us(g,new Cn,zo),Tr(v,2,C);break;default:if(!Vt(v,g))break e}}return v}function qs(g,v,C){if(C=g.createShader(C===0?g.VERTEX_SHADER:g.FRAGMENT_SHADER),g.shaderSource(C,v),g.compileShader(C),!g.getShaderParameter(C,g.COMPILE_STATUS))throw Error(`Could not compile WebGL shader.

`+g.getShaderInfoLog(C));return C}function Ys(g){return cs(g,Sn).map(function(v){return{index:vn(v,1,0),Y:Bt(v,2),label:Ue(v,3)!=null?vn(v,3,""):void 0,displayName:Ue(v,4)!=null?vn(v,4,""):void 0}})}function Qs(g){return{x:Bt(g,1),y:Bt(g,2),z:Bt(g,3),visibility:Ue(g,4)!=null?Bt(g,4):void 0}}function Er(g,v){this.h=g,this.g=v,this.l=0}function Zn(g,v,C){return Mt(g,v),typeof g.g.canvas.transferToImageBitmap=="function"?Promise.resolve(g.g.canvas.transferToImageBitmap()):C?Promise.resolve(g.g.canvas):typeof createImageBitmap=="function"?createImageBitmap(g.g.canvas):(g.i===void 0&&(g.i=document.createElement("canvas")),new Promise(function(D){g.i.height=g.g.canvas.height,g.i.width=g.g.canvas.width,g.i.getContext("2d",{}).drawImage(g.g.canvas,0,0,g.g.canvas.width,g.g.canvas.height),D(g.i)}))}function Mt(g,v){var C=g.g;if(g.m===void 0){var D=qs(C,`
  attribute vec2 aVertex;
  attribute vec2 aTex;
  varying vec2 vTex;
  void main(void) {
    gl_Position = vec4(aVertex, 0.0, 1.0);
    vTex = aTex;
  }`,0),z=qs(C,`
  precision mediump float;
  varying vec2 vTex;
  uniform sampler2D sampler0;
  void main(){
    gl_FragColor = texture2D(sampler0, vTex);
  }`,1),Y=C.createProgram();if(C.attachShader(Y,D),C.attachShader(Y,z),C.linkProgram(Y),!C.getProgramParameter(Y,C.LINK_STATUS))throw Error(`Could not compile WebGL program.

`+C.getProgramInfoLog(Y));D=g.m=Y,C.useProgram(D),z=C.getUniformLocation(D,"sampler0"),g.j={I:C.getAttribLocation(D,"aVertex"),H:C.getAttribLocation(D,"aTex"),da:z},g.s=C.createBuffer(),C.bindBuffer(C.ARRAY_BUFFER,g.s),C.enableVertexAttribArray(g.j.I),C.vertexAttribPointer(g.j.I,2,C.FLOAT,!1,0,0),C.bufferData(C.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),C.STATIC_DRAW),C.bindBuffer(C.ARRAY_BUFFER,null),g.o=C.createBuffer(),C.bindBuffer(C.ARRAY_BUFFER,g.o),C.enableVertexAttribArray(g.j.H),C.vertexAttribPointer(g.j.H,2,C.FLOAT,!1,0,0),C.bufferData(C.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),C.STATIC_DRAW),C.bindBuffer(C.ARRAY_BUFFER,null),C.uniform1i(z,0)}D=g.j,C.useProgram(g.m),C.canvas.width=v.width,C.canvas.height=v.height,C.viewport(0,0,v.width,v.height),C.activeTexture(C.TEXTURE0),g.h.bindTexture2d(v.glName),C.enableVertexAttribArray(D.I),C.bindBuffer(C.ARRAY_BUFFER,g.s),C.vertexAttribPointer(D.I,2,C.FLOAT,!1,0,0),C.enableVertexAttribArray(D.H),C.bindBuffer(C.ARRAY_BUFFER,g.o),C.vertexAttribPointer(D.H,2,C.FLOAT,!1,0,0),C.bindFramebuffer(C.DRAW_FRAMEBUFFER?C.DRAW_FRAMEBUFFER:C.FRAMEBUFFER,null),C.clearColor(0,0,0,0),C.clear(C.COLOR_BUFFER_BIT),C.colorMask(!0,!0,!0,!0),C.drawArrays(C.TRIANGLE_FAN,0,4),C.disableVertexAttribArray(D.I),C.disableVertexAttribArray(D.H),C.bindBuffer(C.ARRAY_BUFFER,null),g.h.bindTexture2d(0)}function gi(g){this.g=g}var yi=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function Yo(g,v){return v+g}function Zs(g,v){window[g]=v}function Rt(g){var v=document.createElement("script");return v.setAttribute("src",g),v.setAttribute("crossorigin","anonymous"),new Promise(function(C){v.addEventListener("load",function(){C()},!1),v.addEventListener("error",function(){C()},!1),document.body.appendChild(v)})}function Qo(){return it(this,function g(){return B(g,function(v){switch(v.g){case 1:return v.m=2,I(v,WebAssembly.instantiate(yi),4);case 4:v.g=3,v.m=0;break;case 2:return v.m=0,v.j=null,v.return(!1);case 3:return v.return(!0)}})})}function On(g){if(this.g=g,this.listeners={},this.j={},this.F={},this.m={},this.s={},this.G=this.o=this.R=!0,this.C=Promise.resolve(),this.P="",this.B={},this.locateFile=g&&g.locateFile||Yo,typeof window=="object")var v=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else if(typeof location<"u")v=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/";else throw Error("solutions can only be loaded on a web page or in a web worker");if(this.S=v,g.options){v=i(Object.keys(g.options));for(var C=v.next();!C.done;C=v.next()){C=C.value;var D=g.options[C].default;D!==void 0&&(this.j[C]=typeof D=="function"?D():D)}}}n=On.prototype,n.close=function(){return this.i&&this.i.delete(),Promise.resolve()};function Zo(g,v){return g.g.files===void 0?[]:typeof g.g.files=="function"?g.g.files(v):g.g.files}function Js(g){return it(g,function v(){var C=this,D,z,Y,K,J,re,le,ye,Ae,Ne,we;return B(v,function(fe){switch(fe.g){case 1:return D=C,C.R?(z=Zo(C,C.j),I(fe,Qo(),2)):fe.return();case 2:if(Y=fe.h,typeof window=="object")return Zs("createMediapipeSolutionsWasm",{locateFile:C.locateFile}),Zs("createMediapipeSolutionsPackedAssets",{locateFile:C.locateFile}),re=z.filter(function(m){return m.data!==void 0}),le=z.filter(function(m){return m.data===void 0}),ye=Promise.all(re.map(function(m){var $=Jn(D,m.url);if(m.path!==void 0){var T=m.path;$=$.then(function(N){return D.overrideFile(T,N),Promise.resolve(N)})}return $})),Ae=Promise.all(le.map(function(m){return m.simd===void 0||m.simd&&Y||!m.simd&&!Y?Rt(D.locateFile(m.url,D.S)):Promise.resolve()})).then(function(){return it(D,function m(){var $,T,N=this;return B(m,function(O){if(O.g==1)return $=window.createMediapipeSolutionsWasm,T=window.createMediapipeSolutionsPackedAssets,I(O,$(T),2);N.h=O.h,O.g=0})})}),Ne=function(){return it(D,function m(){var $=this;return B(m,function(T){return $.g.graph&&$.g.graph.url?T=I(T,Jn($,$.g.graph.url),0):(T.g=0,T=void 0),T})})}(),I(fe,Promise.all([Ae,ye,Ne]),7);if(typeof importScripts!="function")throw Error("solutions can only be loaded on a web page or in a web worker");return K=z.filter(function(m){return m.simd===void 0||m.simd&&Y||!m.simd&&!Y}).map(function(m){return D.locateFile(m.url,D.S)}),importScripts.apply(null,u(K)),I(fe,createMediapipeSolutionsWasm(Module),6);case 6:C.h=fe.h,C.l=new OffscreenCanvas(1,1),C.h.canvas=C.l,J=C.h.GL.createContext(C.l,{antialias:!1,alpha:!1,ba:typeof WebGL2RenderingContext<"u"?2:1}),C.h.GL.makeContextCurrent(J),fe.g=4;break;case 7:if(C.l=document.createElement("canvas"),we=C.l.getContext("webgl2",{}),!we&&(we=C.l.getContext("webgl",{}),!we))return alert("Failed to create WebGL canvas context when passing video frame."),fe.return();C.D=we,C.h.canvas=C.l,C.h.createContext(C.l,!0,!0,{});case 4:C.i=new C.h.SolutionWasm,C.R=!1,fe.g=0}})})}function xi(g){return it(g,function v(){var C=this,D,z,Y,K,J,re,le,ye;return B(v,function(Ae){if(Ae.g==1){if(C.g.graph&&C.g.graph.url&&C.P===C.g.graph.url)return Ae.return();if(C.o=!0,!C.g.graph||!C.g.graph.url){Ae.g=2;return}return C.P=C.g.graph.url,I(Ae,Jn(C,C.g.graph.url),3)}for(Ae.g!=2&&(D=Ae.h,C.i.loadGraph(D)),z=i(Object.keys(C.B)),Y=z.next();!Y.done;Y=z.next())K=Y.value,C.i.overrideFile(K,C.B[K]);if(C.B={},C.g.listeners)for(J=i(C.g.listeners),re=J.next();!re.done;re=J.next())le=re.value,wi(C,le);ye=C.j,C.j={},C.setOptions(ye),Ae.g=0})})}n.reset=function(){return it(this,function g(){var v=this;return B(g,function(C){v.i&&(v.i.reset(),v.m={},v.s={}),C.g=0})})},n.setOptions=function(g,v){var C=this;if(v=v||this.g.options){for(var D=[],z=[],Y={},K=i(Object.keys(g)),J=K.next();!J.done;Y={K:Y.K,L:Y.L},J=K.next()){var re=J.value;re in this.j&&this.j[re]===g[re]||(this.j[re]=g[re],J=v[re],J!==void 0&&(J.onChange&&(Y.K=J.onChange,Y.L=g[re],D.push(function(le){return function(){return it(C,function ye(){var Ae,Ne=this;return B(ye,function(we){if(we.g==1)return I(we,le.K(le.L),2);Ae=we.h,Ae===!0&&(Ne.o=!0),we.g=0})})}}(Y))),J.graphOptionXref&&(re={valueNumber:J.type===1?g[re]:0,valueBoolean:J.type===0?g[re]:!1,valueString:J.type===2?g[re]:""},J=Object.assign(Object.assign(Object.assign({},{calculatorName:"",calculatorIndex:0}),J.graphOptionXref),re),z.push(J))))}(D.length!==0||z.length!==0)&&(this.o=!0,this.A=(this.A===void 0?[]:this.A).concat(z),this.u=(this.u===void 0?[]:this.u).concat(D))}};function bi(g){return it(g,function v(){var C=this,D,z,Y,K,J,re,le;return B(v,function(ye){switch(ye.g){case 1:if(!C.o)return ye.return();if(!C.u){ye.g=2;break}D=i(C.u),z=D.next();case 3:if(z.done){ye.g=5;break}return Y=z.value,I(ye,Y(),4);case 4:z=D.next(),ye.g=3;break;case 5:C.u=void 0;case 2:if(C.A){for(K=new C.h.GraphOptionChangeRequestList,J=i(C.A),re=J.next();!re.done;re=J.next())le=re.value,K.push_back(le);C.i.changeOptions(K),K.delete(),C.A=void 0}C.o=!1,ye.g=0}})})}n.initialize=function(){return it(this,function g(){var v=this;return B(g,function(C){return C.g==1?I(C,Js(v),2):C.g!=3?I(C,xi(v),3):I(C,bi(v),0)})})};function Jn(g,v){return it(g,function C(){var D=this,z,Y;return B(C,function(K){return v in D.F?K.return(D.F[v]):(z=D.locateFile(v,""),Y=fetch(z).then(function(J){return J.arrayBuffer()}),D.F[v]=Y,K.return(Y))})})}n.overrideFile=function(g,v){this.i?this.i.overrideFile(g,v):this.B[g]=v},n.clearOverriddenFiles=function(){this.B={},this.i&&this.i.clearOverriddenFiles()},n.send=function(g,v){return it(this,function C(){var D=this,z,Y,K,J,re,le,ye,Ae,Ne;return B(C,function(we){switch(we.g){case 1:return D.g.inputs?(z=1e3*(v??performance.now()),I(we,D.C,2)):we.return();case 2:return I(we,D.initialize(),3);case 3:for(Y=new D.h.PacketDataList,K=i(Object.keys(g)),J=K.next();!J.done;J=K.next())if(re=J.value,le=D.g.inputs[re]){e:{var fe=D,m=g[re];switch(le.type){case"video":var $=fe.m[le.stream];if($||($=new Er(fe.h,fe.D),fe.m[le.stream]=$),fe=$,fe.l===0&&(fe.l=fe.h.createTexture()),typeof HTMLVideoElement<"u"&&m instanceof HTMLVideoElement){var T=m.videoWidth;$=m.videoHeight}else typeof HTMLImageElement<"u"&&m instanceof HTMLImageElement?(T=m.naturalWidth,$=m.naturalHeight):(T=m.width,$=m.height);$={glName:fe.l,width:T,height:$},T=fe.g,T.canvas.width=$.width,T.canvas.height=$.height,T.activeTexture(T.TEXTURE0),fe.h.bindTexture2d(fe.l),T.texImage2D(T.TEXTURE_2D,0,T.RGBA,T.RGBA,T.UNSIGNED_BYTE,m),fe.h.bindTexture2d(0),fe=$;break e;case"detections":for($=fe.m[le.stream],$||($=new gi(fe.h),fe.m[le.stream]=$),fe=$,fe.data||(fe.data=new fe.g.DetectionListData),fe.data.reset(m.length),$=0;$<m.length;++$){T=m[$];var N=fe.data,O=N.setBoundingBox,A=$,F=T.T,M=new ds;Ee(M,1,F.Z),Ee(M,2,F.$),Ee(M,3,F.height),Ee(M,4,F.width),Ee(M,5,F.rotation),Ee(M,6,F.X);var X=F=new _n;kt(X,1,Ue(M,1)),kt(X,2,Ue(M,2)),kt(X,3,Ue(M,3)),kt(X,4,Ue(M,4)),kt(X,5,Ue(M,5));var Q=Ue(M,6);if(Q!=null&&Q!=null){ln(X.g,48);var ee=X.g,se=Q;Q=0>se,se=Math.abs(se);var ae=se>>>0;for(se=Math.floor((se-ae)/4294967296),se>>>=0,Q&&(se=~se>>>0,ae=(~ae>>>0)+1,4294967295<ae&&(ae=0,se++,4294967295<se&&(se=0))),Xt=ae,qt=se,Q=Xt,ae=qt;0<ae||127<Q;)ee.push(Q&127|128),Q=(Q>>>7|ae<<25)>>>0,ae>>>=7;ee.push(Q)}if(ls(M,X),F=vr(F),O.call(N,A,F),T.O)for(N=0;N<T.O.length;++N)M=T.O[N],X=!!M.visibility,O=fe.data,A=O.addNormalizedLandmark,F=$,M=Object.assign(Object.assign({},M),{visibility:X?M.visibility:0}),X=new Qn,Ee(X,1,M.x),Ee(X,2,M.y),Ee(X,3,M.z),M.visibility&&Ee(X,4,M.visibility),ee=M=new _n,kt(ee,1,Ue(X,1)),kt(ee,2,Ue(X,2)),kt(ee,3,Ue(X,3)),kt(ee,4,Ue(X,4)),kt(ee,5,Ue(X,5)),ls(X,ee),M=vr(M),A.call(O,F,M);if(T.M)for(N=0;N<T.M.length;++N){if(O=fe.data,A=O.addClassification,F=$,M=T.M[N],X=new Sn,Ee(X,2,M.Y),M.index&&Ee(X,1,M.index),M.label&&Ee(X,3,M.label),M.displayName&&Ee(X,4,M.displayName),ee=M=new _n,ae=Ue(X,1),ae!=null&&ae!=null)if(ln(ee.g,8),Q=ee.g,0<=ae)ln(Q,ae);else{for(se=0;9>se;se++)Q.push(ae&127|128),ae>>=7;Q.push(1)}kt(ee,2,Ue(X,2)),Q=Ue(X,3),Q!=null&&(Q=Ie(Q),ln(ee.g,26),ln(ee.g,Q.length),Qt(ee,ee.g.end()),Qt(ee,Q)),Q=Ue(X,4),Q!=null&&(Q=Ie(Q),ln(ee.g,34),ln(ee.g,Q.length),Qt(ee,ee.g.end()),Qt(ee,Q)),ls(X,ee),M=vr(M),A.call(O,F,M)}}fe=fe.data;break e;default:fe={}}}switch(ye=fe,Ae=le.stream,le.type){case"video":Y.pushTexture2d(Object.assign(Object.assign({},ye),{stream:Ae,timestamp:z}));break;case"detections":Ne=ye,Ne.stream=Ae,Ne.timestamp=z,Y.pushDetectionList(Ne);break;default:throw Error("Unknown input config type: '"+le.type+"'")}}return D.i.send(Y),I(we,D.C,4);case 4:Y.delete(),we.g=0}})})};function Jo(g,v,C){return it(g,function D(){var z,Y,K,J,re,le,ye=this,Ae,Ne,we,fe,m,$,T,N;return B(D,function(O){switch(O.g){case 1:if(!C)return O.return(v);for(z={},Y=0,K=i(Object.keys(C)),J=K.next();!J.done;J=K.next())re=J.value,le=C[re],typeof le!="string"&&le.type==="texture"&&v[le.stream]!==void 0&&++Y;1<Y&&(ye.G=!1),Ae=i(Object.keys(C)),J=Ae.next();case 2:if(J.done){O.g=4;break}if(Ne=J.value,we=C[Ne],typeof we=="string")return T=z,N=Ne,I(O,ea(ye,Ne,v[we]),14);if(fe=v[we.stream],we.type==="detection_list"){if(fe){for(var A=fe.getRectList(),F=fe.getLandmarksList(),M=fe.getClassificationsList(),X=[],Q=0;Q<A.size();++Q){var ee=A.get(Q);e:{var se=new ds;for(ee=new Yn(ee);It(ee);)switch(ee.i){case 13:var ae=nt(ee);Ee(se,1,ae);break;case 21:ae=nt(ee),Ee(se,2,ae);break;case 29:ae=nt(ee),Ee(se,3,ae);break;case 37:ae=nt(ee),Ee(se,4,ae);break;case 45:ae=nt(ee),Ee(se,5,ae);break;case 48:ae=br(ee.g),Ee(se,6,ae);break;default:if(!Vt(se,ee))break e}}se={Z:Bt(se,1),$:Bt(se,2),height:Bt(se,3),width:Bt(se,4),rotation:Bt(se,5,0),X:vn(se,6,0)},ee=cs(Ko(F.get(Q)),Qn).map(Qs);var ue=M.get(Q);e:for(ae=new hs,ue=new Yn(ue);It(ue);)switch(ue.i){case 10:ae.addClassification(us(ue,new Sn,Go));break;default:if(!Vt(ae,ue))break e}se={T:se,O:ee,M:Ys(ae)},X.push(se)}A=X}else A=[];z[Ne]=A,O.g=7;break}if(we.type==="proto_list"){if(fe){for(A=Array(fe.size()),F=0;F<fe.size();F++)A[F]=fe.get(F);fe.delete()}else A=[];z[Ne]=A,O.g=7;break}if(fe===void 0){O.g=3;break}if(we.type==="float_list"){z[Ne]=fe,O.g=7;break}if(we.type==="proto"){z[Ne]=fe,O.g=7;break}if(we.type!=="texture")throw Error("Unknown output config type: '"+we.type+"'");return m=ye.s[Ne],m||(m=new Er(ye.h,ye.D),ye.s[Ne]=m),I(O,Zn(m,fe,ye.G),13);case 13:$=O.h,z[Ne]=$;case 7:we.transform&&z[Ne]&&(z[Ne]=we.transform(z[Ne])),O.g=3;break;case 14:T[N]=O.h;case 3:J=Ae.next(),O.g=2;break;case 4:return O.return(z)}})})}function ea(g,v,C){return it(g,function D(){var z=this,Y;return B(D,function(K){return typeof C=="number"||C instanceof Uint8Array||C instanceof z.h.Uint8BlobList?K.return(C):C instanceof z.h.Texture2dDataOut?(Y=z.s[v],Y||(Y=new Er(z.h,z.D),z.s[v]=Y),K.return(Zn(Y,C,z.G))):K.return(void 0)})})}function wi(g,v){for(var C=v.name||"$",D=[].concat(u(v.wants)),z=new g.h.StringList,Y=i(v.wants),K=Y.next();!K.done;K=Y.next())z.push_back(K.value);Y=g.h.PacketListener.implement({onResults:function(J){for(var re={},le=0;le<v.wants.length;++le)re[D[le]]=J.get(le);var ye=g.listeners[C];ye&&(g.C=Jo(g,re,v.outs).then(function(Ae){Ae=ye(Ae);for(var Ne=0;Ne<v.wants.length;++Ne){var we=re[D[Ne]];typeof we=="object"&&we.hasOwnProperty&&we.hasOwnProperty("delete")&&we.delete()}Ae&&(g.C=Ae)}))}}),g.i.attachMultiListener(z,Y),z.delete()}n.onResults=function(g,v){this.listeners[v||"$"]=g},te("Solution",On),te("OptionType",{BOOL:0,NUMBER:1,aa:2,0:"BOOL",1:"NUMBER",2:"STRING"});function vi(g){g=qo(g);var v=g.getMesh();if(!v)return g;var C=new Float32Array(v.getVertexBufferList());v.getVertexBufferList=function(){return C};var D=new Uint32Array(v.getIndexBufferList());return v.getIndexBufferList=function(){return D},g}var eo={files:[{url:"face_mesh_solution_packed_assets_loader.js"},{simd:!0,url:"face_mesh_solution_simd_wasm_bin.js"},{simd:!1,url:"face_mesh_solution_wasm_bin.js"}],graph:{url:"face_mesh.binarypb"},listeners:[{wants:["multi_face_geometry","image_transformed","multi_face_landmarks"],outs:{image:"image_transformed",multiFaceGeometry:{type:"proto_list",stream:"multi_face_geometry",transform:function(g){return g.map(vi)}},multiFaceLandmarks:{type:"proto_list",stream:"multi_face_landmarks",transform:function(g){return g.map(function(v){return cs(Ko(v),Qn).map(Qs)})}}}}],inputs:{image:{type:"video",stream:"input_frames_gpu"}},options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:"iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document},enableFaceGeometry:{type:0,graphOptionXref:{calculatorName:"EnableFaceGeometryConstant",calculatorType:"ConstantSidePacketCalculator",fieldName:"bool_value"}},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},maxNumFaces:{type:1,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorNumFaces",fieldName:"int_value"}},refineLandmarks:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorRefineLandmarks",fieldName:"bool_value"}},minDetectionConfidence:{type:1,graphOptionXref:{calculatorType:"TensorsToDetectionsCalculator",calculatorName:"facelandmarkfrontgpu__facedetectionshortrangegpu__facedetectionshortrangecommon__TensorsToDetectionsCalculator",fieldName:"min_score_thresh"}},minTrackingConfidence:{type:1,graphOptionXref:{calculatorType:"ThresholdingCalculator",calculatorName:"facelandmarkfrontgpu__facelandmarkgpu__ThresholdingCalculator",fieldName:"threshold"}},cameraNear:{type:1,graphOptionXref:{calculatorType:"FaceGeometryEnvGeneratorCalculator",fieldName:"near"}},cameraFar:{type:1,graphOptionXref:{calculatorType:"FaceGeometryEnvGeneratorCalculator",fieldName:"far"}},cameraVerticalFovDegrees:{type:1,graphOptionXref:{calculatorType:"FaceGeometryEnvGeneratorCalculator",fieldName:"vertical_fov_degrees"}}}},to=[[61,146],[146,91],[91,181],[181,84],[84,17],[17,314],[314,405],[405,321],[321,375],[375,291],[61,185],[185,40],[40,39],[39,37],[37,0],[0,267],[267,269],[269,270],[270,409],[409,291],[78,95],[95,88],[88,178],[178,87],[87,14],[14,317],[317,402],[402,318],[318,324],[324,308],[78,191],[191,80],[80,81],[81,82],[82,13],[13,312],[312,311],[311,310],[310,415],[415,308]],no=[[263,249],[249,390],[390,373],[373,374],[374,380],[380,381],[381,382],[382,362],[263,466],[466,388],[388,387],[387,386],[386,385],[385,384],[384,398],[398,362]],ro=[[276,283],[283,282],[282,295],[295,285],[300,293],[293,334],[334,296],[296,336]],so=[[33,7],[7,163],[163,144],[144,145],[145,153],[153,154],[154,155],[155,133],[33,246],[246,161],[161,160],[160,159],[159,158],[158,157],[157,173],[173,133]],oo=[[46,53],[53,52],[52,65],[65,55],[70,63],[63,105],[105,66],[66,107]],ao=[[10,338],[338,297],[297,332],[332,284],[284,251],[251,389],[389,356],[356,454],[454,323],[323,361],[361,288],[288,397],[397,365],[365,379],[379,378],[378,400],[400,377],[377,152],[152,148],[148,176],[176,149],[149,150],[150,136],[136,172],[172,58],[58,132],[132,93],[93,234],[234,127],[127,162],[162,21],[21,54],[54,103],[103,67],[67,109],[109,10]],ta=[].concat(u(to),u(no),u(ro),u(so),u(oo),u(ao));function na(g){g=g||{},g=Object.assign(Object.assign({},eo),g),this.g=new On(g)}n=na.prototype,n.close=function(){return this.g.close(),Promise.resolve()},n.onResults=function(g){this.g.onResults(g)},n.initialize=function(){return it(this,function g(){var v=this;return B(g,function(C){return I(C,v.g.initialize(),0)})})},n.reset=function(){this.g.reset()},n.send=function(g){return it(this,function v(){var C=this;return B(v,function(D){return I(D,C.g.send(g),0)})})},n.setOptions=function(g){this.g.setOptions(g)},te("FACE_GEOMETRY",{Layout:{COLUMN_MAJOR:0,ROW_MAJOR:1,0:"COLUMN_MAJOR",1:"ROW_MAJOR"},PrimitiveType:{TRIANGLE:0,0:"TRIANGLE"},VertexType:{VERTEX_PT:0,0:"VERTEX_PT"},DEFAULT_CAMERA_PARAMS:{verticalFovDegrees:63,near:1,far:1e4}}),te("FaceMesh",na),te("FACEMESH_LIPS",to),te("FACEMESH_LEFT_EYE",no),te("FACEMESH_LEFT_EYEBROW",ro),te("FACEMESH_LEFT_IRIS",[[474,475],[475,476],[476,477],[477,474]]),te("FACEMESH_RIGHT_EYE",so),te("FACEMESH_RIGHT_EYEBROW",oo),te("FACEMESH_RIGHT_IRIS",[[469,470],[470,471],[471,472],[472,469]]),te("FACEMESH_FACE_OVAL",ao),te("FACEMESH_CONTOURS",ta),te("FACEMESH_TESSELATION",[[127,34],[34,139],[139,127],[11,0],[0,37],[37,11],[232,231],[231,120],[120,232],[72,37],[37,39],[39,72],[128,121],[121,47],[47,128],[232,121],[121,128],[128,232],[104,69],[69,67],[67,104],[175,171],[171,148],[148,175],[118,50],[50,101],[101,118],[73,39],[39,40],[40,73],[9,151],[151,108],[108,9],[48,115],[115,131],[131,48],[194,204],[204,211],[211,194],[74,40],[40,185],[185,74],[80,42],[42,183],[183,80],[40,92],[92,186],[186,40],[230,229],[229,118],[118,230],[202,212],[212,214],[214,202],[83,18],[18,17],[17,83],[76,61],[61,146],[146,76],[160,29],[29,30],[30,160],[56,157],[157,173],[173,56],[106,204],[204,194],[194,106],[135,214],[214,192],[192,135],[203,165],[165,98],[98,203],[21,71],[71,68],[68,21],[51,45],[45,4],[4,51],[144,24],[24,23],[23,144],[77,146],[146,91],[91,77],[205,50],[50,187],[187,205],[201,200],[200,18],[18,201],[91,106],[106,182],[182,91],[90,91],[91,181],[181,90],[85,84],[84,17],[17,85],[206,203],[203,36],[36,206],[148,171],[171,140],[140,148],[92,40],[40,39],[39,92],[193,189],[189,244],[244,193],[159,158],[158,28],[28,159],[247,246],[246,161],[161,247],[236,3],[3,196],[196,236],[54,68],[68,104],[104,54],[193,168],[168,8],[8,193],[117,228],[228,31],[31,117],[189,193],[193,55],[55,189],[98,97],[97,99],[99,98],[126,47],[47,100],[100,126],[166,79],[79,218],[218,166],[155,154],[154,26],[26,155],[209,49],[49,131],[131,209],[135,136],[136,150],[150,135],[47,126],[126,217],[217,47],[223,52],[52,53],[53,223],[45,51],[51,134],[134,45],[211,170],[170,140],[140,211],[67,69],[69,108],[108,67],[43,106],[106,91],[91,43],[230,119],[119,120],[120,230],[226,130],[130,247],[247,226],[63,53],[53,52],[52,63],[238,20],[20,242],[242,238],[46,70],[70,156],[156,46],[78,62],[62,96],[96,78],[46,53],[53,63],[63,46],[143,34],[34,227],[227,143],[123,117],[117,111],[111,123],[44,125],[125,19],[19,44],[236,134],[134,51],[51,236],[216,206],[206,205],[205,216],[154,153],[153,22],[22,154],[39,37],[37,167],[167,39],[200,201],[201,208],[208,200],[36,142],[142,100],[100,36],[57,212],[212,202],[202,57],[20,60],[60,99],[99,20],[28,158],[158,157],[157,28],[35,226],[226,113],[113,35],[160,159],[159,27],[27,160],[204,202],[202,210],[210,204],[113,225],[225,46],[46,113],[43,202],[202,204],[204,43],[62,76],[76,77],[77,62],[137,123],[123,116],[116,137],[41,38],[38,72],[72,41],[203,129],[129,142],[142,203],[64,98],[98,240],[240,64],[49,102],[102,64],[64,49],[41,73],[73,74],[74,41],[212,216],[216,207],[207,212],[42,74],[74,184],[184,42],[169,170],[170,211],[211,169],[170,149],[149,176],[176,170],[105,66],[66,69],[69,105],[122,6],[6,168],[168,122],[123,147],[147,187],[187,123],[96,77],[77,90],[90,96],[65,55],[55,107],[107,65],[89,90],[90,180],[180,89],[101,100],[100,120],[120,101],[63,105],[105,104],[104,63],[93,137],[137,227],[227,93],[15,86],[86,85],[85,15],[129,102],[102,49],[49,129],[14,87],[87,86],[86,14],[55,8],[8,9],[9,55],[100,47],[47,121],[121,100],[145,23],[23,22],[22,145],[88,89],[89,179],[179,88],[6,122],[122,196],[196,6],[88,95],[95,96],[96,88],[138,172],[172,136],[136,138],[215,58],[58,172],[172,215],[115,48],[48,219],[219,115],[42,80],[80,81],[81,42],[195,3],[3,51],[51,195],[43,146],[146,61],[61,43],[171,175],[175,199],[199,171],[81,82],[82,38],[38,81],[53,46],[46,225],[225,53],[144,163],[163,110],[110,144],[52,65],[65,66],[66,52],[229,228],[228,117],[117,229],[34,127],[127,234],[234,34],[107,108],[108,69],[69,107],[109,108],[108,151],[151,109],[48,64],[64,235],[235,48],[62,78],[78,191],[191,62],[129,209],[209,126],[126,129],[111,35],[35,143],[143,111],[117,123],[123,50],[50,117],[222,65],[65,52],[52,222],[19,125],[125,141],[141,19],[221,55],[55,65],[65,221],[3,195],[195,197],[197,3],[25,7],[7,33],[33,25],[220,237],[237,44],[44,220],[70,71],[71,139],[139,70],[122,193],[193,245],[245,122],[247,130],[130,33],[33,247],[71,21],[21,162],[162,71],[170,169],[169,150],[150,170],[188,174],[174,196],[196,188],[216,186],[186,92],[92,216],[2,97],[97,167],[167,2],[141,125],[125,241],[241,141],[164,167],[167,37],[37,164],[72,38],[38,12],[12,72],[38,82],[82,13],[13,38],[63,68],[68,71],[71,63],[226,35],[35,111],[111,226],[101,50],[50,205],[205,101],[206,92],[92,165],[165,206],[209,198],[198,217],[217,209],[165,167],[167,97],[97,165],[220,115],[115,218],[218,220],[133,112],[112,243],[243,133],[239,238],[238,241],[241,239],[214,135],[135,169],[169,214],[190,173],[173,133],[133,190],[171,208],[208,32],[32,171],[125,44],[44,237],[237,125],[86,87],[87,178],[178,86],[85,86],[86,179],[179,85],[84,85],[85,180],[180,84],[83,84],[84,181],[181,83],[201,83],[83,182],[182,201],[137,93],[93,132],[132,137],[76,62],[62,183],[183,76],[61,76],[76,184],[184,61],[57,61],[61,185],[185,57],[212,57],[57,186],[186,212],[214,207],[207,187],[187,214],[34,143],[143,156],[156,34],[79,239],[239,237],[237,79],[123,137],[137,177],[177,123],[44,1],[1,4],[4,44],[201,194],[194,32],[32,201],[64,102],[102,129],[129,64],[213,215],[215,138],[138,213],[59,166],[166,219],[219,59],[242,99],[99,97],[97,242],[2,94],[94,141],[141,2],[75,59],[59,235],[235,75],[24,110],[110,228],[228,24],[25,130],[130,226],[226,25],[23,24],[24,229],[229,23],[22,23],[23,230],[230,22],[26,22],[22,231],[231,26],[112,26],[26,232],[232,112],[189,190],[190,243],[243,189],[221,56],[56,190],[190,221],[28,56],[56,221],[221,28],[27,28],[28,222],[222,27],[29,27],[27,223],[223,29],[30,29],[29,224],[224,30],[247,30],[30,225],[225,247],[238,79],[79,20],[20,238],[166,59],[59,75],[75,166],[60,75],[75,240],[240,60],[147,177],[177,215],[215,147],[20,79],[79,166],[166,20],[187,147],[147,213],[213,187],[112,233],[233,244],[244,112],[233,128],[128,245],[245,233],[128,114],[114,188],[188,128],[114,217],[217,174],[174,114],[131,115],[115,220],[220,131],[217,198],[198,236],[236,217],[198,131],[131,134],[134,198],[177,132],[132,58],[58,177],[143,35],[35,124],[124,143],[110,163],[163,7],[7,110],[228,110],[110,25],[25,228],[356,389],[389,368],[368,356],[11,302],[302,267],[267,11],[452,350],[350,349],[349,452],[302,303],[303,269],[269,302],[357,343],[343,277],[277,357],[452,453],[453,357],[357,452],[333,332],[332,297],[297,333],[175,152],[152,377],[377,175],[347,348],[348,330],[330,347],[303,304],[304,270],[270,303],[9,336],[336,337],[337,9],[278,279],[279,360],[360,278],[418,262],[262,431],[431,418],[304,408],[408,409],[409,304],[310,415],[415,407],[407,310],[270,409],[409,410],[410,270],[450,348],[348,347],[347,450],[422,430],[430,434],[434,422],[313,314],[314,17],[17,313],[306,307],[307,375],[375,306],[387,388],[388,260],[260,387],[286,414],[414,398],[398,286],[335,406],[406,418],[418,335],[364,367],[367,416],[416,364],[423,358],[358,327],[327,423],[251,284],[284,298],[298,251],[281,5],[5,4],[4,281],[373,374],[374,253],[253,373],[307,320],[320,321],[321,307],[425,427],[427,411],[411,425],[421,313],[313,18],[18,421],[321,405],[405,406],[406,321],[320,404],[404,405],[405,320],[315,16],[16,17],[17,315],[426,425],[425,266],[266,426],[377,400],[400,369],[369,377],[322,391],[391,269],[269,322],[417,465],[465,464],[464,417],[386,257],[257,258],[258,386],[466,260],[260,388],[388,466],[456,399],[399,419],[419,456],[284,332],[332,333],[333,284],[417,285],[285,8],[8,417],[346,340],[340,261],[261,346],[413,441],[441,285],[285,413],[327,460],[460,328],[328,327],[355,371],[371,329],[329,355],[392,439],[439,438],[438,392],[382,341],[341,256],[256,382],[429,420],[420,360],[360,429],[364,394],[394,379],[379,364],[277,343],[343,437],[437,277],[443,444],[444,283],[283,443],[275,440],[440,363],[363,275],[431,262],[262,369],[369,431],[297,338],[338,337],[337,297],[273,375],[375,321],[321,273],[450,451],[451,349],[349,450],[446,342],[342,467],[467,446],[293,334],[334,282],[282,293],[458,461],[461,462],[462,458],[276,353],[353,383],[383,276],[308,324],[324,325],[325,308],[276,300],[300,293],[293,276],[372,345],[345,447],[447,372],[352,345],[345,340],[340,352],[274,1],[1,19],[19,274],[456,248],[248,281],[281,456],[436,427],[427,425],[425,436],[381,256],[256,252],[252,381],[269,391],[391,393],[393,269],[200,199],[199,428],[428,200],[266,330],[330,329],[329,266],[287,273],[273,422],[422,287],[250,462],[462,328],[328,250],[258,286],[286,384],[384,258],[265,353],[353,342],[342,265],[387,259],[259,257],[257,387],[424,431],[431,430],[430,424],[342,353],[353,276],[276,342],[273,335],[335,424],[424,273],[292,325],[325,307],[307,292],[366,447],[447,345],[345,366],[271,303],[303,302],[302,271],[423,266],[266,371],[371,423],[294,455],[455,460],[460,294],[279,278],[278,294],[294,279],[271,272],[272,304],[304,271],[432,434],[434,427],[427,432],[272,407],[407,408],[408,272],[394,430],[430,431],[431,394],[395,369],[369,400],[400,395],[334,333],[333,299],[299,334],[351,417],[417,168],[168,351],[352,280],[280,411],[411,352],[325,319],[319,320],[320,325],[295,296],[296,336],[336,295],[319,403],[403,404],[404,319],[330,348],[348,349],[349,330],[293,298],[298,333],[333,293],[323,454],[454,447],[447,323],[15,16],[16,315],[315,15],[358,429],[429,279],[279,358],[14,15],[15,316],[316,14],[285,336],[336,9],[9,285],[329,349],[349,350],[350,329],[374,380],[380,252],[252,374],[318,402],[402,403],[403,318],[6,197],[197,419],[419,6],[318,319],[319,325],[325,318],[367,364],[364,365],[365,367],[435,367],[367,397],[397,435],[344,438],[438,439],[439,344],[272,271],[271,311],[311,272],[195,5],[5,281],[281,195],[273,287],[287,291],[291,273],[396,428],[428,199],[199,396],[311,271],[271,268],[268,311],[283,444],[444,445],[445,283],[373,254],[254,339],[339,373],[282,334],[334,296],[296,282],[449,347],[347,346],[346,449],[264,447],[447,454],[454,264],[336,296],[296,299],[299,336],[338,10],[10,151],[151,338],[278,439],[439,455],[455,278],[292,407],[407,415],[415,292],[358,371],[371,355],[355,358],[340,345],[345,372],[372,340],[346,347],[347,280],[280,346],[442,443],[443,282],[282,442],[19,94],[94,370],[370,19],[441,442],[442,295],[295,441],[248,419],[419,197],[197,248],[263,255],[255,359],[359,263],[440,275],[275,274],[274,440],[300,383],[383,368],[368,300],[351,412],[412,465],[465,351],[263,467],[467,466],[466,263],[301,368],[368,389],[389,301],[395,378],[378,379],[379,395],[412,351],[351,419],[419,412],[436,426],[426,322],[322,436],[2,164],[164,393],[393,2],[370,462],[462,461],[461,370],[164,0],[0,267],[267,164],[302,11],[11,12],[12,302],[268,12],[12,13],[13,268],[293,300],[300,301],[301,293],[446,261],[261,340],[340,446],[330,266],[266,425],[425,330],[426,423],[423,391],[391,426],[429,355],[355,437],[437,429],[391,327],[327,326],[326,391],[440,457],[457,438],[438,440],[341,382],[382,362],[362,341],[459,457],[457,461],[461,459],[434,430],[430,394],[394,434],[414,463],[463,362],[362,414],[396,369],[369,262],[262,396],[354,461],[461,457],[457,354],[316,403],[403,402],[402,316],[315,404],[404,403],[403,315],[314,405],[405,404],[404,314],[313,406],[406,405],[405,313],[421,418],[418,406],[406,421],[366,401],[401,361],[361,366],[306,408],[408,407],[407,306],[291,409],[409,408],[408,291],[287,410],[410,409],[409,287],[432,436],[436,410],[410,432],[434,416],[416,411],[411,434],[264,368],[368,383],[383,264],[309,438],[438,457],[457,309],[352,376],[376,401],[401,352],[274,275],[275,4],[4,274],[421,428],[428,262],[262,421],[294,327],[327,358],[358,294],[433,416],[416,367],[367,433],[289,455],[455,439],[439,289],[462,370],[370,326],[326,462],[2,326],[326,370],[370,2],[305,460],[460,455],[455,305],[254,449],[449,448],[448,254],[255,261],[261,446],[446,255],[253,450],[450,449],[449,253],[252,451],[451,450],[450,252],[256,452],[452,451],[451,256],[341,453],[453,452],[452,341],[413,464],[464,463],[463,413],[441,413],[413,414],[414,441],[258,442],[442,441],[441,258],[257,443],[443,442],[442,257],[259,444],[444,443],[443,259],[260,445],[445,444],[444,260],[467,342],[342,445],[445,467],[459,458],[458,250],[250,459],[289,392],[392,290],[290,289],[290,328],[328,460],[460,290],[376,433],[433,435],[435,376],[250,290],[290,392],[392,250],[411,416],[416,433],[433,411],[341,463],[463,464],[464,341],[453,464],[464,465],[465,453],[357,465],[465,412],[412,357],[343,412],[412,399],[399,343],[360,363],[363,440],[440,360],[437,399],[399,456],[456,437],[420,456],[456,363],[363,420],[401,435],[435,288],[288,401],[372,383],[383,353],[353,372],[339,255],[255,249],[249,339],[448,261],[261,255],[255,448],[133,243],[243,190],[190,133],[133,155],[155,112],[112,133],[33,246],[246,247],[247,33],[33,130],[130,25],[25,33],[398,384],[384,286],[286,398],[362,398],[398,414],[414,362],[362,463],[463,341],[341,362],[263,359],[359,467],[467,263],[263,249],[249,255],[255,263],[466,467],[467,260],[260,466],[75,60],[60,166],[166,75],[238,239],[239,79],[79,238],[162,127],[127,139],[139,162],[72,11],[11,37],[37,72],[121,232],[232,120],[120,121],[73,72],[72,39],[39,73],[114,128],[128,47],[47,114],[233,232],[232,128],[128,233],[103,104],[104,67],[67,103],[152,175],[175,148],[148,152],[119,118],[118,101],[101,119],[74,73],[73,40],[40,74],[107,9],[9,108],[108,107],[49,48],[48,131],[131,49],[32,194],[194,211],[211,32],[184,74],[74,185],[185,184],[191,80],[80,183],[183,191],[185,40],[40,186],[186,185],[119,230],[230,118],[118,119],[210,202],[202,214],[214,210],[84,83],[83,17],[17,84],[77,76],[76,146],[146,77],[161,160],[160,30],[30,161],[190,56],[56,173],[173,190],[182,106],[106,194],[194,182],[138,135],[135,192],[192,138],[129,203],[203,98],[98,129],[54,21],[21,68],[68,54],[5,51],[51,4],[4,5],[145,144],[144,23],[23,145],[90,77],[77,91],[91,90],[207,205],[205,187],[187,207],[83,201],[201,18],[18,83],[181,91],[91,182],[182,181],[180,90],[90,181],[181,180],[16,85],[85,17],[17,16],[205,206],[206,36],[36,205],[176,148],[148,140],[140,176],[165,92],[92,39],[39,165],[245,193],[193,244],[244,245],[27,159],[159,28],[28,27],[30,247],[247,161],[161,30],[174,236],[236,196],[196,174],[103,54],[54,104],[104,103],[55,193],[193,8],[8,55],[111,117],[117,31],[31,111],[221,189],[189,55],[55,221],[240,98],[98,99],[99,240],[142,126],[126,100],[100,142],[219,166],[166,218],[218,219],[112,155],[155,26],[26,112],[198,209],[209,131],[131,198],[169,135],[135,150],[150,169],[114,47],[47,217],[217,114],[224,223],[223,53],[53,224],[220,45],[45,134],[134,220],[32,211],[211,140],[140,32],[109,67],[67,108],[108,109],[146,43],[43,91],[91,146],[231,230],[230,120],[120,231],[113,226],[226,247],[247,113],[105,63],[63,52],[52,105],[241,238],[238,242],[242,241],[124,46],[46,156],[156,124],[95,78],[78,96],[96,95],[70,46],[46,63],[63,70],[116,143],[143,227],[227,116],[116,123],[123,111],[111,116],[1,44],[44,19],[19,1],[3,236],[236,51],[51,3],[207,216],[216,205],[205,207],[26,154],[154,22],[22,26],[165,39],[39,167],[167,165],[199,200],[200,208],[208,199],[101,36],[36,100],[100,101],[43,57],[57,202],[202,43],[242,20],[20,99],[99,242],[56,28],[28,157],[157,56],[124,35],[35,113],[113,124],[29,160],[160,27],[27,29],[211,204],[204,210],[210,211],[124,113],[113,46],[46,124],[106,43],[43,204],[204,106],[96,62],[62,77],[77,96],[227,137],[137,116],[116,227],[73,41],[41,72],[72,73],[36,203],[203,142],[142,36],[235,64],[64,240],[240,235],[48,49],[49,64],[64,48],[42,41],[41,74],[74,42],[214,212],[212,207],[207,214],[183,42],[42,184],[184,183],[210,169],[169,211],[211,210],[140,170],[170,176],[176,140],[104,105],[105,69],[69,104],[193,122],[122,168],[168,193],[50,123],[123,187],[187,50],[89,96],[96,90],[90,89],[66,65],[65,107],[107,66],[179,89],[89,180],[180,179],[119,101],[101,120],[120,119],[68,63],[63,104],[104,68],[234,93],[93,227],[227,234],[16,15],[15,85],[85,16],[209,129],[129,49],[49,209],[15,14],[14,86],[86,15],[107,55],[55,9],[9,107],[120,100],[100,121],[121,120],[153,145],[145,22],[22,153],[178,88],[88,179],[179,178],[197,6],[6,196],[196,197],[89,88],[88,96],[96,89],[135,138],[138,136],[136,135],[138,215],[215,172],[172,138],[218,115],[115,219],[219,218],[41,42],[42,81],[81,41],[5,195],[195,51],[51,5],[57,43],[43,61],[61,57],[208,171],[171,199],[199,208],[41,81],[81,38],[38,41],[224,53],[53,225],[225,224],[24,144],[144,110],[110,24],[105,52],[52,66],[66,105],[118,229],[229,117],[117,118],[227,34],[34,234],[234,227],[66,107],[107,69],[69,66],[10,109],[109,151],[151,10],[219,48],[48,235],[235,219],[183,62],[62,191],[191,183],[142,129],[129,126],[126,142],[116,111],[111,143],[143,116],[118,117],[117,50],[50,118],[223,222],[222,52],[52,223],[94,19],[19,141],[141,94],[222,221],[221,65],[65,222],[196,3],[3,197],[197,196],[45,220],[220,44],[44,45],[156,70],[70,139],[139,156],[188,122],[122,245],[245,188],[139,71],[71,162],[162,139],[149,170],[170,150],[150,149],[122,188],[188,196],[196,122],[206,216],[216,92],[92,206],[164,2],[2,167],[167,164],[242,141],[141,241],[241,242],[0,164],[164,37],[37,0],[11,72],[72,12],[12,11],[12,38],[38,13],[13,12],[70,63],[63,71],[71,70],[31,226],[226,111],[111,31],[36,101],[101,205],[205,36],[203,206],[206,165],[165,203],[126,209],[209,217],[217,126],[98,165],[165,97],[97,98],[237,220],[220,218],[218,237],[237,239],[239,241],[241,237],[210,214],[214,169],[169,210],[140,171],[171,32],[32,140],[241,125],[125,237],[237,241],[179,86],[86,178],[178,179],[180,85],[85,179],[179,180],[181,84],[84,180],[180,181],[182,83],[83,181],[181,182],[194,201],[201,182],[182,194],[177,137],[137,132],[132,177],[184,76],[76,183],[183,184],[185,61],[61,184],[184,185],[186,57],[57,185],[185,186],[216,212],[212,186],[186,216],[192,214],[214,187],[187,192],[139,34],[34,156],[156,139],[218,79],[79,237],[237,218],[147,123],[123,177],[177,147],[45,44],[44,4],[4,45],[208,201],[201,32],[32,208],[98,64],[64,129],[129,98],[192,213],[213,138],[138,192],[235,59],[59,219],[219,235],[141,242],[242,97],[97,141],[97,2],[2,141],[141,97],[240,75],[75,235],[235,240],[229,24],[24,228],[228,229],[31,25],[25,226],[226,31],[230,23],[23,229],[229,230],[231,22],[22,230],[230,231],[232,26],[26,231],[231,232],[233,112],[112,232],[232,233],[244,189],[189,243],[243,244],[189,221],[221,190],[190,189],[222,28],[28,221],[221,222],[223,27],[27,222],[222,223],[224,29],[29,223],[223,224],[225,30],[30,224],[224,225],[113,247],[247,225],[225,113],[99,60],[60,240],[240,99],[213,147],[147,215],[215,213],[60,20],[20,166],[166,60],[192,187],[187,213],[213,192],[243,112],[112,244],[244,243],[244,233],[233,245],[245,244],[245,128],[128,188],[188,245],[188,114],[114,174],[174,188],[134,131],[131,220],[220,134],[174,217],[217,236],[236,174],[236,198],[198,134],[134,236],[215,177],[177,58],[58,215],[156,143],[143,124],[124,156],[25,110],[110,7],[7,25],[31,228],[228,25],[25,31],[264,356],[356,368],[368,264],[0,11],[11,267],[267,0],[451,452],[452,349],[349,451],[267,302],[302,269],[269,267],[350,357],[357,277],[277,350],[350,452],[452,357],[357,350],[299,333],[333,297],[297,299],[396,175],[175,377],[377,396],[280,347],[347,330],[330,280],[269,303],[303,270],[270,269],[151,9],[9,337],[337,151],[344,278],[278,360],[360,344],[424,418],[418,431],[431,424],[270,304],[304,409],[409,270],[272,310],[310,407],[407,272],[322,270],[270,410],[410,322],[449,450],[450,347],[347,449],[432,422],[422,434],[434,432],[18,313],[313,17],[17,18],[291,306],[306,375],[375,291],[259,387],[387,260],[260,259],[424,335],[335,418],[418,424],[434,364],[364,416],[416,434],[391,423],[423,327],[327,391],[301,251],[251,298],[298,301],[275,281],[281,4],[4,275],[254,373],[373,253],[253,254],[375,307],[307,321],[321,375],[280,425],[425,411],[411,280],[200,421],[421,18],[18,200],[335,321],[321,406],[406,335],[321,320],[320,405],[405,321],[314,315],[315,17],[17,314],[423,426],[426,266],[266,423],[396,377],[377,369],[369,396],[270,322],[322,269],[269,270],[413,417],[417,464],[464,413],[385,386],[386,258],[258,385],[248,456],[456,419],[419,248],[298,284],[284,333],[333,298],[168,417],[417,8],[8,168],[448,346],[346,261],[261,448],[417,413],[413,285],[285,417],[326,327],[327,328],[328,326],[277,355],[355,329],[329,277],[309,392],[392,438],[438,309],[381,382],[382,256],[256,381],[279,429],[429,360],[360,279],[365,364],[364,379],[379,365],[355,277],[277,437],[437,355],[282,443],[443,283],[283,282],[281,275],[275,363],[363,281],[395,431],[431,369],[369,395],[299,297],[297,337],[337,299],[335,273],[273,321],[321,335],[348,450],[450,349],[349,348],[359,446],[446,467],[467,359],[283,293],[293,282],[282,283],[250,458],[458,462],[462,250],[300,276],[276,383],[383,300],[292,308],[308,325],[325,292],[283,276],[276,293],[293,283],[264,372],[372,447],[447,264],[346,352],[352,340],[340,346],[354,274],[274,19],[19,354],[363,456],[456,281],[281,363],[426,436],[436,425],[425,426],[380,381],[381,252],[252,380],[267,269],[269,393],[393,267],[421,200],[200,428],[428,421],[371,266],[266,329],[329,371],[432,287],[287,422],[422,432],[290,250],[250,328],[328,290],[385,258],[258,384],[384,385],[446,265],[265,342],[342,446],[386,387],[387,257],[257,386],[422,424],[424,430],[430,422],[445,342],[342,276],[276,445],[422,273],[273,424],[424,422],[306,292],[292,307],[307,306],[352,366],[366,345],[345,352],[268,271],[271,302],[302,268],[358,423],[423,371],[371,358],[327,294],[294,460],[460,327],[331,279],[279,294],[294,331],[303,271],[271,304],[304,303],[436,432],[432,427],[427,436],[304,272],[272,408],[408,304],[395,394],[394,431],[431,395],[378,395],[395,400],[400,378],[296,334],[334,299],[299,296],[6,351],[351,168],[168,6],[376,352],[352,411],[411,376],[307,325],[325,320],[320,307],[285,295],[295,336],[336,285],[320,319],[319,404],[404,320],[329,330],[330,349],[349,329],[334,293],[293,333],[333,334],[366,323],[323,447],[447,366],[316,15],[15,315],[315,316],[331,358],[358,279],[279,331],[317,14],[14,316],[316,317],[8,285],[285,9],[9,8],[277,329],[329,350],[350,277],[253,374],[374,252],[252,253],[319,318],[318,403],[403,319],[351,6],[6,419],[419,351],[324,318],[318,325],[325,324],[397,367],[367,365],[365,397],[288,435],[435,397],[397,288],[278,344],[344,439],[439,278],[310,272],[272,311],[311,310],[248,195],[195,281],[281,248],[375,273],[273,291],[291,375],[175,396],[396,199],[199,175],[312,311],[311,268],[268,312],[276,283],[283,445],[445,276],[390,373],[373,339],[339,390],[295,282],[282,296],[296,295],[448,449],[449,346],[346,448],[356,264],[264,454],[454,356],[337,336],[336,299],[299,337],[337,338],[338,151],[151,337],[294,278],[278,455],[455,294],[308,292],[292,415],[415,308],[429,358],[358,355],[355,429],[265,340],[340,372],[372,265],[352,346],[346,280],[280,352],[295,442],[442,282],[282,295],[354,19],[19,370],[370,354],[285,441],[441,295],[295,285],[195,248],[248,197],[197,195],[457,440],[440,274],[274,457],[301,300],[300,368],[368,301],[417,351],[351,465],[465,417],[251,301],[301,389],[389,251],[394,395],[395,379],[379,394],[399,412],[412,419],[419,399],[410,436],[436,322],[322,410],[326,2],[2,393],[393,326],[354,370],[370,461],[461,354],[393,164],[164,267],[267,393],[268,302],[302,12],[12,268],[312,268],[268,13],[13,312],[298,293],[293,301],[301,298],[265,446],[446,340],[340,265],[280,330],[330,425],[425,280],[322,426],[426,391],[391,322],[420,429],[429,437],[437,420],[393,391],[391,326],[326,393],[344,440],[440,438],[438,344],[458,459],[459,461],[461,458],[364,434],[434,394],[394,364],[428,396],[396,262],[262,428],[274,354],[354,457],[457,274],[317,316],[316,402],[402,317],[316,315],[315,403],[403,316],[315,314],[314,404],[404,315],[314,313],[313,405],[405,314],[313,421],[421,406],[406,313],[323,366],[366,361],[361,323],[292,306],[306,407],[407,292],[306,291],[291,408],[408,306],[291,287],[287,409],[409,291],[287,432],[432,410],[410,287],[427,434],[434,411],[411,427],[372,264],[264,383],[383,372],[459,309],[309,457],[457,459],[366,352],[352,401],[401,366],[1,274],[274,4],[4,1],[418,421],[421,262],[262,418],[331,294],[294,358],[358,331],[435,433],[433,367],[367,435],[392,289],[289,439],[439,392],[328,462],[462,326],[326,328],[94,2],[2,370],[370,94],[289,305],[305,455],[455,289],[339,254],[254,448],[448,339],[359,255],[255,446],[446,359],[254,253],[253,449],[449,254],[253,252],[252,450],[450,253],[252,256],[256,451],[451,252],[256,341],[341,452],[452,256],[414,413],[413,463],[463,414],[286,441],[441,414],[414,286],[286,258],[258,441],[441,286],[258,257],[257,442],[442,258],[257,259],[259,443],[443,257],[259,260],[260,444],[444,259],[260,467],[467,445],[445,260],[309,459],[459,250],[250,309],[305,289],[289,290],[290,305],[305,290],[290,460],[460,305],[401,376],[376,435],[435,401],[309,250],[250,392],[392,309],[376,411],[411,433],[433,376],[453,341],[341,464],[464,453],[357,453],[453,465],[465,357],[343,357],[357,412],[412,343],[437,343],[343,399],[399,437],[344,360],[360,440],[440,344],[420,437],[437,456],[456,420],[360,420],[420,363],[363,360],[361,401],[401,288],[288,361],[265,372],[372,353],[353,265],[390,339],[339,249],[249,390],[339,448],[448,255],[255,339]]),te("matrixDataToMatrix",function(g){for(var v=g.getCols(),C=g.getRows(),D=g.getPackedDataList(),z=[],Y=0;Y<C;Y++)z.push(Array(v));for(Y=0;Y<C;Y++)for(var K=0;K<v;K++){var J=g.getLayout()===1?Y*v+K:K*C+Y;z[Y][K]=D[J]}return z}),te("VERSION","0.4.1633559619")}).call(Ci)),Ci}var Rg=kg();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _g=1e-7,Ag=1e-4;class Og{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class nh{refCount(e){return At("refCount")}incRef(e){return At("incRef")}timerAvailable(){return!0}time(e){return At("time")}read(e){return At("read")}readSync(e){return At("readSync")}readToGPU(e,t){return At("readToGPU")}numDataIds(){return At("numDataIds")}disposeData(e,t){return At("disposeData")}write(e,t,r){return At("write")}move(e,t,r,s,o){return At("move")}createTensorFromGPUData(e,t,r){return At("createTensorFromGPUData")}memory(){return At("memory")}floatPrecision(){return At("floatPrecision")}epsilon(){return this.floatPrecision()===32?_g:Ag}dispose(){return At("dispose")}}function At(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ea(n,e,t){return Math.max(n,Math.min(e,t))}function Vu(n){return n%2===0?n:n+1}function io(n,e,t){const r=n[e];n[e]=n[t],n[t]=r}function Dg(n){let e=0;for(let t=0;t<n.length;t++)e+=n[t];return e}function _(n,e){if(!n)throw new Error(typeof e=="string"?e:e())}function Gt(n,e,t=""){_(Xe(n,e),()=>t+` Shapes ${n} and ${e} must match`)}function Rs(n){_(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function ne(n){if(n.length===0)return 1;let e=n[0];for(let t=1;t<n.length;t++)e*=n[t];return e}function Fg(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==null&&e[t]!==null&&n[t]!==e[t])return!1;return!0}function Xe(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==e[t])return!1;return!0}function Cs(n){return n%1===0}function Xi(n){const e=Math.ceil(Math.sqrt(n));return[e,Math.ceil(n/e)]}function bs(n,e){return e<=n.length?n:n+" ".repeat(e-n.length)}function Rc(n,e=s=>0,t,r){return new Promise((s,o)=>{let a=0;const i=()=>{if(n()){s();return}a++;const u=e(a);if(t!=null&&a>=t){o();return}r!=null?r(i,u):setTimeout(i,u)};i()})}function Pg(n,e){let t=1,r=-1;for(let o=0;o<n.length;++o)if(n[o]>=0)t*=n[o];else if(n[o]===-1){if(r!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${o}`);r=o}else if(n[o]<0)throw Error(`Shapes can not be < 0. Found ${n[o]} at dim ${o}`);if(r===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${n}`);return n}if(t===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(e%t!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);const s=n.slice();return s[r]=e/t,s}function at(n,e){const t=e.length;return n=n==null?e.map((r,s)=>s):[].concat(n),_(n.every(r=>r>=-t&&r<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${n}`),_(n.every(r=>Cs(r)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(r=>r<0?t+r:r)}function mr(n,e){const t=[],r=[],s=e!=null&&Array.isArray(e)&&e.length===0,o=e==null||s?null:at(e,n).sort();let a=0;for(let i=0;i<n.length;++i){if(o!=null){if(o[a]===i&&n[i]!==1)throw new Error(`Can't squeeze axis ${i} since its dim '${n[i]}' is not 1`);(o[a]==null||o[a]>i)&&n[i]===1&&(t.push(n[i]),r.push(i)),o[a]<=i&&a++}n[i]!==1&&(t.push(n[i]),r.push(i))}return{newShape:t,keptDims:r}}function lr(n,e){return ot(n,e)}function ot(n,e){let t=null;if(n==null||n==="float32")t=new Float32Array(e);else if(n==="int32")t=new Int32Array(e);else if(n==="bool")t=new Uint8Array(e);else if(n==="string")t=new Array(e);else throw new Error(`Unknown data type ${n}`);return t}function Lg(n,e){for(let t=0;t<n.length;t++){const r=n[t];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${e} being uploaded contains ${r}.`)}}function Bg(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function Vg(n,e){return!(e==="complex64"||e==="float32"&&n!=="complex64"||e==="int32"&&n!=="float32"&&n!=="complex64"||e==="bool"&&n==="bool")}function Ia(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function Mg(n){if(n==null)return 0;let e=0;return n.forEach(t=>e+=t.length),e}function Ha(n){return typeof n=="string"||n instanceof String}function Ug(n){return typeof n=="boolean"}function Wg(n){return typeof n=="number"}function ko(n){return Array.isArray(n)?ko(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":Wg(n)?"float32":Ha(n)?"string":Ug(n)?"bool":"float32"}function qi(n){return!!(n&&n.constructor&&n.call&&n.apply)}function Yi(n,e){for(let t=e;t<n;++t)if(n%t===0)return t;return n}function lt(n){const e=n.length;if(e<2)return[];const t=new Array(e-1);t[e-2]=n[e-1];for(let r=e-3;r>=0;--r)t[r]=t[r+1]*n[r+1];return t}function rh(n,e,t,r=!1){const s=new Array;if(e.length===1){const o=e[0]*(r?2:1);for(let a=0;a<o;a++)s[a]=t[n+a]}else{const o=e[0],a=e.slice(1),i=a.reduce((u,c)=>u*c)*(r?2:1);for(let u=0;u<o;u++)s[u]=rh(n+u*i,a,t,r)}return s}function Qi(n,e,t=!1){if(n.length===0)return e[0];const r=n.reduce((s,o)=>s*o)*(t?2:1);if(r===0)return[];if(r!==e.length)throw new Error(`[${n}] does not match the input size ${e.length}${t?" for a complex tensor":""}.`);return rh(0,n,e,t)}function sh(n,e){const t=hr(n,e);for(let r=0;r<t.length;r++)t[r]=1;return t}function hr(n,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${e}`)}function jt(n){n.forEach(e=>{_(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function Zi(n,e,t){if(e===0)return 0;if(e===1)return n[0];let r=n[n.length-1];for(let s=0;s<n.length-1;++s)r+=t[s]*n[s];return r}function Mu(n,e,t){if(e===0)return[];if(e===1)return[n];const r=new Array(e);for(let s=0;s<r.length-1;++s)r[s]=Math.floor(n/t[s]),n-=r[s]*t[s];return r[r.length-1]=n,r}function Ur(n){return n&&n.then&&typeof n.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _c="tfjsflags";class zg{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Gg,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(j().getBool("IS_TEST")||j().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,r){if(this.flagRegistry[e]={evaluationFn:t,setHook:r},this.urlFlags[e]!=null){const s=this.urlFlags[e];j().getBool("IS_TEST")||j().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${s}.`),this.set(e,s)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Ur(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const e=this.getQueryParams(this.global.location.search);_c in e&&e[_c].split(",").forEach(r=>{const[s,o]=r.split(":");this.urlFlags[s]=Hg(s,o)})}}function Gg(n){const e={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...r)=>(jg(e,r[0],r[1]),r.join("="))),e}function jg(n,e,t){n[decodeURIComponent(e)]=decodeURIComponent(t||"")}function Hg(n,e){const t=e.toLowerCase();return t==="true"||t==="false"?t==="true":`${+t}`===t?+t:e}function j(){return oh}let oh=null;function Kg(n){oh=n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Si;function ah(){if(Si==null){let n;if(typeof window<"u")n=window;else if(typeof global<"u")n=global;else if(typeof process<"u")n=process;else if(typeof self<"u")n=self;else throw new Error("Could not find a global object");Si=n}return Si}function Xg(){const n=ah();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function Uu(n,e){const t=Xg();if(t.has(n))return t.get(n);{const r=e();return t.set(n,r),t.get(n)}}const ih="Abs",uh="Acos",ch="Acosh",Wu="Add",lh="AddN",hh="All",dh="Any",ph="ArgMax",fh="ArgMin",mh="Asin",gh="Asinh",yh="Atan",xh="Atanh",bh="Atan2",wh="AvgPool",qg="AvgPoolGrad",vh="AvgPool3D",Yg="AvgPool3DGrad",$h="BatchMatMul",Ch="BatchToSpaceND",Sh="Bincount",Th="BitwiseAnd",Nh="BroadcastArgs",zu="Cast",Eh="Ceil",Ih="ClipByValue",kh="Complex",Rh="ComplexAbs",_h="Concat",Ah="Conv2D",Oh="Conv2DBackpropFilter",Dh="Conv2DBackpropInput",Fh="Conv3D",Qg="Conv3DBackpropFilterV2",Ph="Conv3DBackpropInputV2",Lh="Cos",Bh="Cosh",Vh="Cumprod",Mh="Cumsum",Uh="CropAndResize",Wh="DenseBincount",zh="DepthToSpace",Gh="DepthwiseConv2dNative",jh="DepthwiseConv2dNativeBackpropFilter",Hh="DepthwiseConv2dNativeBackpropInput",Kh="Diag",Xh="Dilation2D",qh="RealDiv",Yh="Einsum",Qh="Elu",Zg="EluGrad",Zh="Erf",Jh="Equal",ed="Exp",td="ExpandDims",nd="Expm1",rd="FFT",sd="Fill",od="FlipLeftRight",ad="Floor",id="FloorDiv",ud="FusedBatchNorm",cd="GatherV2",ld="GatherNd",hd="Greater",dd="GreaterEqual",Gu="Identity",pd="IFFT",fd="Imag",md="IsFinite",gd="IsInf",yd="IsNan",xd="LeakyRelu",bd="Less",wd="LessEqual",vd="LinSpace",$d="Log",Cd="Log1p",Sd="LogicalAnd",Td="LogicalNot",Nd="LogicalOr",Ed="LRN",Jg="LRNGrad",Id="Max",kd="Maximum",Rd="MaxPool",e2="MaxPoolGrad",_d="MaxPool3D",t2="MaxPool3DGrad",Ad="MaxPoolWithArgmax",Od="Mean",Dd="Min",Fd="Minimum",Pd="MirrorPad",Ld="Mod",Bd="Multinomial",Vd="Multiply",Md="Neg",Ud="NotEqual",Wd="NonMaxSuppressionV3",zd="NonMaxSuppressionV4",Gd="NonMaxSuppressionV5",jd="OnesLike",Hd="OneHot",Kd="Pack",Xd="PadV2",qd="Pow",Yd="Prelu",Qd="Prod",Zd="RaggedGather",Jd="RaggedRange",ep="RaggedTensorToTensor",tp="Range",np="Real",rp="Reciprocal",sp="Relu",op="Reshape",ap="ResizeNearestNeighbor",n2="ResizeNearestNeighborGrad",ip="ResizeBilinear",r2="ResizeBilinearGrad",up="Relu6",cp="Reverse",lp="Round",hp="Rsqrt",dp="ScatterNd",pp="TensorScatterUpdate",fp="SearchSorted",mp="Select",gp="Selu",yp="Slice",xp="Sin",bp="Sinh",wp="Sign",vp="Sigmoid",$p="Softplus",Cp="Sqrt",Sp="Sum",Tp="SpaceToBatchND",Np="SplitV",Ep="Softmax",Ip="SparseFillEmptyRows",kp="SparseReshape",Rp="SparseSegmentMean",_p="SparseSegmentSum",Ap="SparseToDense",Op="SquaredDifference",s2="Square",Dp="StaticRegexReplace",Fp="StridedSlice",Pp="StringNGrams",Lp="StringSplit",Bp="StringToHashBucketFast",Vp="Sub",Mp="Tan",Up="Tanh",ju="Tile",Wp="TopK",zp="Transform",ma="Transpose",Gp="Unique",jp="Unpack",Hp="UnsortedSegmentSum",Kp="ZerosLike",Xp="Step",Ji="FromPixels",qp="RotateWithOffset",eu="_FusedMatMul",tu="FusedConv2D",nu="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mn(...n){j().getBool("IS_TEST")||j().getBool("PROD")||console.warn(...n)}function o2(...n){j().getBool("IS_TEST")||j().getBool("PROD")||console.log(...n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ka=Uu("kernelRegistry",()=>new Map),a2=Uu("gradRegistry",()=>new Map);function ru(n,e){const t=Yp(n,e);return ka.get(t)}function Ac(n){return a2.get(n)}function Oc(n){const e=ka.entries(),t=[];for(;;){const{done:r,value:s}=e.next();if(r)break;const[o,a]=s,[i]=o.split("_");i===n&&t.push(a)}return t}function i2(n){const{kernelName:e,backendName:t}=n,r=Yp(e,t);ka.has(r)&&mn(`The kernel '${e}' for backend '${t}' is already registered`),ka.set(r,n)}function Yp(n,e){return`${e}_${n}`}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qp(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}var Ti,Dc;function u2(){if(Dc)return Ti;Dc=1,Ti=e;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function e(V,R,q){this.low=V|0,this.high=R|0,this.unsigned=!!q}e.prototype.__isLong__,Object.defineProperty(e.prototype,"__isLong__",{value:!0});function t(V){return(V&&V.__isLong__)===!0}e.isLong=t;var r={},s={};function o(V,R){var q,te,he;return R?(V>>>=0,(he=0<=V&&V<256)&&(te=s[V],te)?te:(q=i(V,(V|0)<0?-1:0,!0),he&&(s[V]=q),q)):(V|=0,(he=-128<=V&&V<128)&&(te=r[V],te)?te:(q=i(V,V<0?-1:0,!1),he&&(r[V]=q),q))}e.fromInt=o;function a(V,R){if(isNaN(V))return R?S:b;if(R){if(V<0)return S;if(V>=f)return H}else{if(V<=-9223372036854776e3)return G;if(V+1>=x)return W}return V<0?a(-V,R).neg():i(V%p|0,V/p|0,R)}e.fromNumber=a;function i(V,R,q){return new e(V,R,q)}e.fromBits=i;var u=Math.pow;function c(V,R,q){if(V.length===0)throw Error("empty string");if(V==="NaN"||V==="Infinity"||V==="+Infinity"||V==="-Infinity")return b;if(typeof R=="number"?(q=R,R=!1):R=!!R,q=q||10,q<2||36<q)throw RangeError("radix");var te;if((te=V.indexOf("-"))>0)throw Error("interior hyphen");if(te===0)return c(V.substring(1),R,q).neg();for(var he=a(u(q,8)),de=b,ge=0;ge<V.length;ge+=8){var be=Math.min(8,V.length-ge),$e=parseInt(V.substring(ge,ge+be),q);if(be<8){var Ie=a(u(q,be));de=de.mul(Ie).add(a($e))}else de=de.mul(he),de=de.add(a($e))}return de.unsigned=R,de}e.fromString=c;function l(V,R){return typeof V=="number"?a(V,R):typeof V=="string"?c(V,R):i(V.low,V.high,typeof R=="boolean"?R:V.unsigned)}e.fromValue=l;var h=65536,d=1<<24,p=h*h,f=p*p,x=f/2,y=o(d),b=o(0);e.ZERO=b;var S=o(0,!0);e.UZERO=S;var I=o(1);e.ONE=I;var k=o(1,!0);e.UONE=k;var P=o(-1);e.NEG_ONE=P;var W=i(-1,2147483647,!1);e.MAX_VALUE=W;var H=i(-1,-1,!0);e.MAX_UNSIGNED_VALUE=H;var G=i(0,-2147483648,!1);e.MIN_VALUE=G;var B=e.prototype;return B.toInt=function(){return this.unsigned?this.low>>>0:this.low},B.toNumber=function(){return this.unsigned?(this.high>>>0)*p+(this.low>>>0):this.high*p+(this.low>>>0)},B.toString=function(R){if(R=R||10,R<2||36<R)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(G)){var q=a(R),te=this.div(q),he=te.mul(q).sub(this);return te.toString(R)+he.toInt().toString(R)}else return"-"+this.neg().toString(R);for(var de=a(u(R,6),this.unsigned),ge=this,be="";;){var $e=ge.div(de),Ie=ge.sub($e.mul(de)).toInt()>>>0,_e=Ie.toString(R);if(ge=$e,ge.isZero())return _e+be;for(;_e.length<6;)_e="0"+_e;be=""+_e+be}},B.getHighBits=function(){return this.high},B.getHighBitsUnsigned=function(){return this.high>>>0},B.getLowBits=function(){return this.low},B.getLowBitsUnsigned=function(){return this.low>>>0},B.getNumBitsAbs=function(){if(this.isNegative())return this.eq(G)?64:this.neg().getNumBitsAbs();for(var R=this.high!=0?this.high:this.low,q=31;q>0&&!(R&1<<q);q--);return this.high!=0?q+33:q+1},B.isZero=function(){return this.high===0&&this.low===0},B.eqz=B.isZero,B.isNegative=function(){return!this.unsigned&&this.high<0},B.isPositive=function(){return this.unsigned||this.high>=0},B.isOdd=function(){return(this.low&1)===1},B.isEven=function(){return(this.low&1)===0},B.equals=function(R){return t(R)||(R=l(R)),this.unsigned!==R.unsigned&&this.high>>>31===1&&R.high>>>31===1?!1:this.high===R.high&&this.low===R.low},B.eq=B.equals,B.notEquals=function(R){return!this.eq(R)},B.neq=B.notEquals,B.ne=B.notEquals,B.lessThan=function(R){return this.comp(R)<0},B.lt=B.lessThan,B.lessThanOrEqual=function(R){return this.comp(R)<=0},B.lte=B.lessThanOrEqual,B.le=B.lessThanOrEqual,B.greaterThan=function(R){return this.comp(R)>0},B.gt=B.greaterThan,B.greaterThanOrEqual=function(R){return this.comp(R)>=0},B.gte=B.greaterThanOrEqual,B.ge=B.greaterThanOrEqual,B.compare=function(R){if(t(R)||(R=l(R)),this.eq(R))return 0;var q=this.isNegative(),te=R.isNegative();return q&&!te?-1:!q&&te?1:this.unsigned?R.high>>>0>this.high>>>0||R.high===this.high&&R.low>>>0>this.low>>>0?-1:1:this.sub(R).isNegative()?-1:1},B.comp=B.compare,B.negate=function(){return!this.unsigned&&this.eq(G)?G:this.not().add(I)},B.neg=B.negate,B.add=function(R){t(R)||(R=l(R));var q=this.high>>>16,te=this.high&65535,he=this.low>>>16,de=this.low&65535,ge=R.high>>>16,be=R.high&65535,$e=R.low>>>16,Ie=R.low&65535,_e=0,Pe=0,Ve=0,Ye=0;return Ye+=de+Ie,Ve+=Ye>>>16,Ye&=65535,Ve+=he+$e,Pe+=Ve>>>16,Ve&=65535,Pe+=te+be,_e+=Pe>>>16,Pe&=65535,_e+=q+ge,_e&=65535,i(Ve<<16|Ye,_e<<16|Pe,this.unsigned)},B.subtract=function(R){return t(R)||(R=l(R)),this.add(R.neg())},B.sub=B.subtract,B.multiply=function(R){if(this.isZero())return b;if(t(R)||(R=l(R)),n){var q=n.mul(this.low,this.high,R.low,R.high);return i(q,n.get_high(),this.unsigned)}if(R.isZero())return b;if(this.eq(G))return R.isOdd()?G:b;if(R.eq(G))return this.isOdd()?G:b;if(this.isNegative())return R.isNegative()?this.neg().mul(R.neg()):this.neg().mul(R).neg();if(R.isNegative())return this.mul(R.neg()).neg();if(this.lt(y)&&R.lt(y))return a(this.toNumber()*R.toNumber(),this.unsigned);var te=this.high>>>16,he=this.high&65535,de=this.low>>>16,ge=this.low&65535,be=R.high>>>16,$e=R.high&65535,Ie=R.low>>>16,_e=R.low&65535,Pe=0,Ve=0,Ye=0,cn=0;return cn+=ge*_e,Ye+=cn>>>16,cn&=65535,Ye+=de*_e,Ve+=Ye>>>16,Ye&=65535,Ye+=ge*Ie,Ve+=Ye>>>16,Ye&=65535,Ve+=he*_e,Pe+=Ve>>>16,Ve&=65535,Ve+=de*Ie,Pe+=Ve>>>16,Ve&=65535,Ve+=ge*$e,Pe+=Ve>>>16,Ve&=65535,Pe+=te*_e+he*Ie+de*$e+ge*be,Pe&=65535,i(Ye<<16|cn,Pe<<16|Ve,this.unsigned)},B.mul=B.multiply,B.divide=function(R){if(t(R)||(R=l(R)),R.isZero())throw Error("division by zero");if(n){if(!this.unsigned&&this.high===-2147483648&&R.low===-1&&R.high===-1)return this;var q=(this.unsigned?n.div_u:n.div_s)(this.low,this.high,R.low,R.high);return i(q,n.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?S:b;var te,he,de;if(this.unsigned){if(R.unsigned||(R=R.toUnsigned()),R.gt(this))return S;if(R.gt(this.shru(1)))return k;de=S}else{if(this.eq(G)){if(R.eq(I)||R.eq(P))return G;if(R.eq(G))return I;var ge=this.shr(1);return te=ge.div(R).shl(1),te.eq(b)?R.isNegative()?I:P:(he=this.sub(R.mul(te)),de=te.add(he.div(R)),de)}else if(R.eq(G))return this.unsigned?S:b;if(this.isNegative())return R.isNegative()?this.neg().div(R.neg()):this.neg().div(R).neg();if(R.isNegative())return this.div(R.neg()).neg();de=b}for(he=this;he.gte(R);){te=Math.max(1,Math.floor(he.toNumber()/R.toNumber()));for(var be=Math.ceil(Math.log(te)/Math.LN2),$e=be<=48?1:u(2,be-48),Ie=a(te),_e=Ie.mul(R);_e.isNegative()||_e.gt(he);)te-=$e,Ie=a(te,this.unsigned),_e=Ie.mul(R);Ie.isZero()&&(Ie=I),de=de.add(Ie),he=he.sub(_e)}return de},B.div=B.divide,B.modulo=function(R){if(t(R)||(R=l(R)),n){var q=(this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,R.low,R.high);return i(q,n.get_high(),this.unsigned)}return this.sub(this.div(R).mul(R))},B.mod=B.modulo,B.rem=B.modulo,B.not=function(){return i(~this.low,~this.high,this.unsigned)},B.and=function(R){return t(R)||(R=l(R)),i(this.low&R.low,this.high&R.high,this.unsigned)},B.or=function(R){return t(R)||(R=l(R)),i(this.low|R.low,this.high|R.high,this.unsigned)},B.xor=function(R){return t(R)||(R=l(R)),i(this.low^R.low,this.high^R.high,this.unsigned)},B.shiftLeft=function(R){return t(R)&&(R=R.toInt()),(R&=63)===0?this:R<32?i(this.low<<R,this.high<<R|this.low>>>32-R,this.unsigned):i(0,this.low<<R-32,this.unsigned)},B.shl=B.shiftLeft,B.shiftRight=function(R){return t(R)&&(R=R.toInt()),(R&=63)===0?this:R<32?i(this.low>>>R|this.high<<32-R,this.high>>R,this.unsigned):i(this.high>>R-32,this.high>=0?0:-1,this.unsigned)},B.shr=B.shiftRight,B.shiftRightUnsigned=function(R){if(t(R)&&(R=R.toInt()),R&=63,R===0)return this;var q=this.high;if(R<32){var te=this.low;return i(te>>>R|q<<32-R,q>>>R,this.unsigned)}else return R===32?i(q,0,this.unsigned):i(q>>>R-32,0,this.unsigned)},B.shru=B.shiftRightUnsigned,B.shr_u=B.shiftRightUnsigned,B.toSigned=function(){return this.unsigned?i(this.low,this.high,!1):this},B.toUnsigned=function(){return this.unsigned?this:i(this.low,this.high,!0)},B.toBytes=function(R){return R?this.toBytesLE():this.toBytesBE()},B.toBytesLE=function(){var R=this.high,q=this.low;return[q&255,q>>>8&255,q>>>16&255,q>>>24,R&255,R>>>8&255,R>>>16&255,R>>>24]},B.toBytesBE=function(){var R=this.high,q=this.low;return[R>>>24,R>>>16&255,R>>>8&255,R&255,q>>>24,q>>>16&255,q>>>8&255,q&255]},e.fromBytes=function(R,q,te){return te?e.fromBytesLE(R,q):e.fromBytesBE(R,q)},e.fromBytesLE=function(R,q){return new e(R[0]|R[1]<<8|R[2]<<16|R[3]<<24,R[4]|R[5]<<8|R[6]<<16|R[7]<<24,q)},e.fromBytesBE=function(R,q){return new e(R[4]<<24|R[5]<<16|R[6]<<8|R[7],R[0]<<24|R[1]<<16|R[2]<<8|R[3],q)},Ti}var Zp=u2();const Jp=Eg(Zp),c2=Ng({__proto__:null,default:Jp},[Zp]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Or=Jp||c2;function Ka(n){return Or.fromString(n,!0,16)}const ef=Ka("c3a5c85c97cb3127"),Ar=Ka("b492b66fbe98f273"),bt=Ka("9ae16a3b2f90404f");function su(n){return n.xor(n.shru(47))}function tf(n,e,t){const r=n.slice(e,e+t);return Or.fromBytes(Array.from(r),!0,!0)}function We(n,e){return tf(n,e,8)}function Fc(n,e){return tf(n,e,4)}function st(n,e){return e===0?n:n.shru(e).or(n.shl(64-e))}function ar(n,e,t=Ka("9ddfea08eb382d69")){let r=n.xor(e).mul(t);r=r.xor(r.shru(47));let s=e.xor(r).mul(t);return s=s.xor(s.shru(47)),s=s.mul(t),s}function l2(n,e,t,r,s,o){s=s.add(n),o=st(o.add(s).add(r),21);const a=s;return s=s.add(e),s=s.add(t),o=o.add(st(s,44)),[s.add(r),o.add(a)]}function sa(n,e,t,r){return l2(We(n,e),We(n,e+8),We(n,e+16),We(n,e+24),t,r)}function h2(n,e=n.length){if(e>=8){const t=bt.add(e*2),r=We(n,0).add(bt),s=We(n,e-8),o=st(s,37).mul(t).add(r),a=st(r,25).add(s).mul(t);return ar(o,a,t)}if(e>=4){const t=bt.add(e*2),r=Fc(n,0);return ar(r.shl(3).add(e),Fc(n,e-4),t)}if(e>0){const t=n[0],r=n[e>>1],s=n[e-1],o=t+(r<<8),a=e+(s<<2);return su(bt.mul(o).xor(ef.mul(a))).mul(bt)}return bt}function d2(n,e=n.length){const t=bt.add(e*2),r=We(n,0).mul(Ar),s=We(n,8),o=We(n,e-8).mul(t),a=We(n,e-16).mul(bt);return ar(st(r.add(s),43).add(st(o,30)).add(a),r.add(st(s.add(bt),18)).add(o),t)}function p2(n,e=n.length){const t=bt.add(e*2),r=We(n,0).mul(bt),s=We(n,8),o=We(n,e-8).mul(t),a=We(n,e-16).mul(bt),i=st(r.add(s),43).add(st(o,30)).add(a),u=ar(i,r.add(st(s.add(bt),18)).add(o),t),c=We(n,16).mul(t),l=We(n,24),h=i.add(We(n,e-32)).mul(t),d=u.add(We(n,e-24)).mul(t);return ar(st(c.add(l),43).add(st(h,30)).add(d),c.add(st(l.add(r),18)).add(h),t)}function f2(n,e=n.length){const t=Or.fromNumber(81,!0);if(e<=32)return e<=16?h2(n,e):d2(n,e);if(e<=64)return p2(n,e);let r=t,s=t.mul(Ar).add(113),o=su(s.mul(bt).add(113)).mul(bt),a=[Or.UZERO,Or.UZERO],i=[Or.UZERO,Or.UZERO];r=r.mul(bt).add(We(n,0));let u=0;const c=(e-1>>6)*64,l=c+(e-1&63)-63;do r=st(r.add(s).add(a[0]).add(We(n,u+8)),37).mul(Ar),s=st(s.add(a[1]).add(We(n,u+48)),42).mul(Ar),r=r.xor(i[1]),s=s.add(a[0]).add(We(n,u+40)),o=st(o.add(i[0]),33).mul(Ar),a=sa(n,u,a[1].mul(Ar),r.add(i[0])),i=sa(n,u+32,o.add(i[1]),s.add(We(n,u+16))),[o,r]=[r,o],u+=64;while(u!==c);const h=Ar.add(o.and(255).shl(1));return u=l,i[0]=i[0].add(e-1&63),a[0]=a[0].add(i[0]),i[0]=i[0].add(a[0]),r=st(r.add(s).add(a[0]).add(We(n,u+8)),37).mul(h),s=st(s.add(a[1]).add(We(n,u+48)),42).mul(h),r=r.xor(i[1].mul(9)),s=s.add(a[0].mul(9).add(We(n,u+40))),o=st(o.add(i[0]),33).mul(h),a=sa(n,u,a[1].mul(h),r.add(i[0])),i=sa(n,u+32,o.add(i[1]),s.add(We(n,u+16))),[o,r]=[r,o],ar(ar(a[0],i[0],h).add(su(s).mul(ef)).add(o),ar(a[1],i[1],h).add(r),h)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _s(n,e){return e==="string"?Vr(n):Xa([n],e)}function m2(n,e){return n instanceof Float32Array&&e==="float32"||n instanceof Int32Array&&e==="int32"||n instanceof Uint8Array&&e==="bool"}function Xa(n,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=Wr(n)),j().getBool("DEBUG")&&Lg(n,e),m2(n,e))return n;if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool"){const t=new Uint8Array(n.length);for(let r=0;r<t.length;++r)Math.round(n[r])!==0&&(t[r]=1);return t}else throw new Error(`Unknown data type ${e}`)}function dn(){return j().platform.now()}function Vr(n,e="utf-8"){return e=e||"utf-8",j().platform.encode(n,e)}function Ss(n,e="utf-8"){return e=e||"utf-8",j().platform.decode(n,e)}function rn(n){return j().platform.isTypedArray!=null?j().platform.isTypedArray(n):Qp(n)}function Wr(n,e=[],t=!1){if(e==null&&(e=[]),typeof n=="boolean"||typeof n=="number"||typeof n=="string"||Ur(n)||n==null||rn(n)&&t)e.push(n);else if(Array.isArray(n)||rn(n))for(let r=0;r<n.length;++r)Wr(n[r],e,t);else{let r=-1;for(const s of Object.keys(n))/^([1-9]+[0-9]*|0)$/.test(s)&&(r=Math.max(r,Number(s)));for(let s=0;s<=r;s++)Wr(n[s],e,t)}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class g2{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new x2)}profileKernel(e,t,r){let s;const o=()=>{s=r()};let a;const i=dn();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(o);else{o();for(const c of s)c.dataSync();a=Promise.resolve({kernelMs:dn()-i})}if(j().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let c=0;c<s.length;c++){const l=s[c];l.data().then(h=>{y2(h,l.dtype,e)})}return{kernelName:e,outputs:s,inputs:t,timeMs:a.then(c=>c.kernelMs),extraInfo:a.then(c=>c.getExtraProfileInfo!=null?c.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:r,timeMs:s,inputs:o,extraInfo:a}=e;r.forEach(i=>{Promise.all([i.data(),s,a]).then(u=>{this.logger.logKernelProfile(t,i,u[0],u[1],o,u[2])})})}}function y2(n,e,t){if(e!=="float32")return!1;for(let r=0;r<n.length;r++){const s=n[r];if(isNaN(s)||!isFinite(s))return console.warn(`Found ${s} in the result of '${t}'`),!0}return!1}class x2{logKernelProfile(e,t,r,s,o,a){const i=typeof s=="number"?bs(`${s}ms`,9):s.error,u=bs(e,25),c=t.rank,l=t.size,h=bs(t.shape.toString(),14);let d="";for(const p in o){const f=o[p];if(f!=null){const x=f.shape||t.shape,y=x.length;d+=`${p}: ${y}D ${y>0?x:""} `}}console.log(`%c${u}	%c${i}	%c${c}D ${h}	%c${l}	%c${d}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b2(n,e,t){const r={},s={};for(let u=0;u<e.length;u++)r[e[u].id]=!0;for(let u=0;u<n.length;u++){const c=n[u],l=c.inputs;for(const h in l){const d=l[h];let p=!1;for(let f=0;f<e.length;f++)if(r[d.id]){c.outputs.forEach(x=>r[x.id]=!0),p=!0,s[c.id]=!0;break}if(p)break}}const o={};o[t.id]=!0;const a={};for(let u=n.length-1;u>=0;u--){const c=n[u],l=c.inputs;for(let h=0;h<c.outputs.length;h++)if(o[c.outputs[h].id]){for(const d in l)o[l[d].id]=!0,a[c.id]=!0;break}}const i=[];for(let u=0;u<n.length;u++){const c=n[u];if(s[c.id]&&a[c.id]){const l={};for(const d in c.inputs){const p=c.inputs[d];r[p.id]&&(l[d]=p)}const h=Object.assign({},c);h.inputs=l,h.outputs=c.outputs,i.push(h)}}return i}function w2(n,e,t,r){for(let s=e.length-1;s>=0;s--){const o=e[s],a=[];if(o.outputs.forEach(u=>{const c=n[u.id];c!=null?a.push(c):a.push(null)}),o.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${o.kernelName}.`);const i=o.gradient(a);for(const u in o.inputs){if(!(u in i))throw new Error(`Cannot backprop through input ${u}. Available gradients found: ${Object.keys(i)}.`);const c=t(()=>i[u]());if(c.dtype!=="float32")throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input ${u} must have 'float32' dtype, but has '${c.dtype}'`);const l=o.inputs[u];if(!Xe(c.shape,l.shape))throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input '${u}' has shape '${c.shape}', which does not match the shape of the input '${l.shape}'`);if(n[l.id]==null)n[l.id]=c;else{const h=n[l.id];n[l.id]=r(h,c),h.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pc=20,uo=3,Ni=7;function v2(n,e,t,r){const s=lt(e),o=$2(n,e,t,s),a=e.length,i=ga(n,e,t,s,o),u=["Tensor"];return r&&(u.push(`  dtype: ${t}`),u.push(`  rank: ${a}`),u.push(`  shape: [${e}]`),u.push("  values:")),u.push(i.map(c=>"    "+c).join(`
`)),u.join(`
`)}function $2(n,e,t,r){const s=ne(e),o=r[r.length-1],a=new Array(o).fill(0),i=e.length,u=t==="complex64"?ho(n):n;if(i>1)for(let c=0;c<s/o;c++){const l=c*o;for(let h=0;h<o;h++)a[h]=Math.max(a[h],lo(u[l+h],0,t).length)}return a}function lo(n,e,t){let r;return Array.isArray(n)?r=`${parseFloat(n[0].toFixed(Ni))} + ${parseFloat(n[1].toFixed(Ni))}j`:Ha(n)?r=`'${n}'`:t==="bool"?r=nf(n):r=parseFloat(n.toFixed(Ni)).toString(),bs(r,e)}function nf(n){return n===0?"false":"true"}function ga(n,e,t,r,s,o=!0){const a=t==="complex64"?2:1,i=e[0],u=e.length;if(u===0){if(t==="complex64"){const x=ho(n);return[lo(x[0],0,t)]}return t==="bool"?[nf(n[0])]:[n[0].toString()]}if(u===1){if(i>Pc){const y=uo*a;let b=Array.from(n.slice(0,y)),S=Array.from(n.slice((i-uo)*a,i*a));return t==="complex64"&&(b=ho(b),S=ho(S)),["["+b.map((I,k)=>lo(I,s[k],t)).join(", ")+", ..., "+S.map((I,k)=>lo(I,s[i-uo+k],t)).join(", ")+"]"]}return["["+(t==="complex64"?ho(n):Array.from(n)).map((y,b)=>lo(y,s[b],t)).join(", ")+"]"]}const c=e.slice(1),l=r.slice(1),h=r[0]*a,d=[];if(i>Pc){for(let x=0;x<uo;x++){const y=x*h,b=y+h;d.push(...ga(n.slice(y,b),c,t,l,s,!1))}d.push("...");for(let x=i-uo;x<i;x++){const y=x*h,b=y+h;d.push(...ga(n.slice(y,b),c,t,l,s,x===i-1))}}else for(let x=0;x<i;x++){const y=x*h,b=y+h;d.push(...ga(n.slice(y,b),c,t,l,s,x===i-1))}const p=u===2?",":"";d[0]="["+(i>0?d[0]+p:"");for(let x=1;x<d.length-1;x++)d[x]=" "+d[x]+p;let f=`,
`;for(let x=2;x<u;x++)f+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(o?"":f),d}function ho(n){const e=[];for(let t=0;t<n.length;t+=2)e.push([n[t],n[t+1]]);return e}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ts{constructor(e,t,r){if(this.dtype=t,this.shape=e.slice(),this.size=ne(e),r!=null){const s=r.length;_(s===this.size,()=>`Length of values '${s}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=r||ot(t,this.size),this.strides=lt(e)}set(e,...t){t.length===0&&(t=[0]),_(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const r=this.locToIndex(t);this.values[r]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(const s of e){if(s<0||s>=this.shape[t]){const o=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(o)}t++}let r=e[e.length-1];for(let s=0;s<e.length-1;++s)r+=this.strides[s]*e[s];return this.values[r]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let r=0;r<e.length-1;++r)t+=this.strides[r]*e[r];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];const t=new Array(this.shape.length);for(let r=0;r<t.length-1;++r)t[r]=Math.floor(e/this.strides[r]),e-=t[r]*this.strides[r];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return pn().makeTensor(this.values,this.shape,this.dtype)}}let pn=null,gs=null;function C2(n){pn=n}function S2(n){gs=n}class Qe{constructor(e,t,r,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=ne(e),this.strides=lt(e),this.dataId=r,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return gs.buffer(this.shape,this.dtype,e)}bufferSync(){return gs.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Qi(this.shape,e,this.dtype==="complex64")}arraySync(){return Qi(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const e=pn().read(this.dataId);if(this.dtype==="string"){const t=await e;try{return t.map(r=>Ss(r))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),pn().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=pn().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>Ss(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await pn().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),pn().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return gs.print(this,e)}clone(){return this.throwIfDisposed(),gs.clone(this)}toString(e=!1){const t=this.dataSync();return v2(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),gs.cast(this,e)}variable(e=!0,t,r){return this.throwIfDisposed(),pn().makeVariable(this,e,t,r)}}Object.defineProperty(Qe,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});function rf(){return Uu("Tensor",()=>Qe)}rf();class Ra extends Qe{constructor(e,t,r,s){super(e.shape,e.dtype,e.dataId,s),this.trainable=t,this.name=r}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Xe(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);pn().disposeTensor(this),this.dataId=e.dataId,pn().incRef(this,null)}dispose(){pn().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(Ra,Symbol.hasInstance,{value:n=>n instanceof Qe&&n.assign!=null&&n.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Lc;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(Lc||(Lc={}));var ou;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})(ou||(ou={}));var au;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(au||(au={}));var iu;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(iu||(iu={}));var uu;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(uu||(uu={}));const T2={float32:iu,int32:ou,bool:au,complex64:uu};function kn(n,e){if(n==="string"||e==="string"){if(n==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${n} with ${e}`)}return T2[n][e]}function Hu(n){return kn(n,"int32")}function sf(n){return n!=null&&typeof n=="object"&&"texture"in n&&n.texture instanceof WebGLTexture}function of(n){return typeof GPUBuffer<"u"&&n!=null&&typeof n=="object"&&"buffer"in n&&n.buffer instanceof GPUBuffer}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ze(n,e){if(n.dtype===e.dtype)return[n,e];const t=kn(n.dtype,e.dtype);return[n.cast(t),e.cast(t)]}function N2(n,e){_(n.dtype===e.dtype,()=>`The dtypes of the first(${n.dtype}) and second(${e.dtype}) input must match`)}function af(n){const e=[];return uf(n,e,new Set),e}function uf(n,e,t){if(n==null)return;if(n instanceof Qe){e.push(n);return}if(!E2(n))return;const r=n;for(const s in r){const o=r[s];t.has(o)||(t.add(o),uf(o,e,t))}}function E2(n){return Array.isArray(n)||typeof n=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ei(n){return n.kernelName!=null}class Bc{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Ns{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Bc}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const r=e[t];if(await this.initializeBackend(r).success){await this.setBackend(r);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){const{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,r=1){return e in this.registryFactory?(mn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:r},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;const{success:t,asyncInit:r}=this.initializeBackend(e);if(!(r?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new g2(this.backendInstance),!0}setupRegisteredKernels(){Oc(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Oc(e).forEach(r=>{r.disposeFunc!=null&&r.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const r=t.factory();if(r&&!(r instanceof nh)&&typeof r.then=="function"){const s=++this.pendingBackendInitId,o=r.then(a=>s<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(s<this.pendingBackendInitId||(this.pendingBackendInit=null,mn(`Initialization of backend ${e} failed`),mn(a.stack||a.message)),!1));return this.pendingBackendInit=o,{success:o,asyncInit:!0}}else return this.registry[e]=r,{success:!0,asyncInit:!1}}catch(r){return mn(`Initialization of backend ${e} failed`),mn(r.stack||r.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const r=e[t],{success:s,asyncInit:o}=this.initializeBackend(r);if(o||s)return{name:r,asyncInit:o}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const r=this.state.tensorInfo.get(t),s=r.backend,o=this.readSync(t),a=s.refCount(t);s.disposeData(t,!0),r.backend=e,e.move(t,o,r.shape,r.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let r=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}let s;return this.scopedRun(()=>this.startScope(r),()=>this.endScope(s),()=>(s=t(),s instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),s))}scopedRun(e,t,r){e();try{const s=r();return t(),s}catch(s){throw t(),s}}nextTensorId(){return Ns.nextTensorId++}nextVariableId(){return Ns.nextVariableId++}clone(e){const t=U.runKernel(Gu,{x:e}),r={x:e},s=a=>({x:()=>{const i="float32",u={x:a},c={dtype:i};return U.runKernel(zu,u,c)}}),o=[];return this.addTapeNode(this.state.activeScope.name,r,[t],s,o,{}),t}runKernel(e,t,r){if(this.backendName==null&&this.backend,!(ru(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:r})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,r){const s=this.backend.numDataIds();let o=0;r.forEach(u=>{o+=u.dtype==="complex64"?3:1});const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=s-t-o-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,r=[];const s=this.isTapeOn(),o=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let i;this.backendName==null&&this.backend;let u;const c=Ei(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Ei(e)){const{kernelName:f,inputs:x,attrs:y}=e;this.backendName==null&&this.backend;const b=ru(f,this.backendName);_(b!=null,()=>`Cannot find registered kernel '${f}' for backend '${this.backendName}'`),i=()=>{const S=this.backend.numDataIds();u=b.kernelFunc({inputs:x,attrs:y,backend:this.backend});const I=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(f,S,I);const k=I.map(P=>P.rank!=null?P:this.makeTensorFromTensorInfo(P));if(s){const P=this.getTensorsForGradient(f,x,k);r=this.saveTensorsForBackwardMode(P)}return k}}else{const{forwardFunc:f}=e,x=y=>{s&&(r=y.map(b=>this.keep(this.clone(b))))};i=()=>{const y=this.backend.numDataIds();u=this.tidy(()=>f(this.backend,x));const b=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,y,b),b}}const{inputs:l,attrs:h}=e,d=Ei(e)?null:e.backwardsFunc;let p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=i():(p=this.profiler.profileKernel(c,l,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs)}),s&&this.addTapeNode(c,l,t,d,r,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-o,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map(f=>l[f]!=null?l[f].shape:null),outputShapes:t.map(f=>f.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(u)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(r=>this.keep(this.clone(r)))}getTensorsForGradient(e,t,r){const s=Ac(e);if(s!=null){const o=s.inputsToSave||[],a=s.outputsToSave||[];let i;s.saveAllInputs?(_(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(t).map(c=>t[c])):i=o.map(c=>t[c]);const u=r.filter((c,l)=>a[l]);return i.concat(u)}return[]}makeTensor(e,t,r,s){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");r=r||"float32",s=s||this.backend;let o=e;r==="string"&&Ha(e[0])&&(o=e.map(u=>Vr(u)));const a=s.write(o,t,r),i=new Qe(t,r,a,this.nextTensorId());if(this.trackTensor(i,s),r==="string"){const u=this.state.tensorInfo.get(a),c=Mg(o);this.state.numBytes+=c-u.bytes,u.bytes=c}return i}makeTensorFromDataId(e,t,r,s){r=r||"float32";const o={dataId:e,shape:t,dtype:r};return this.makeTensorFromTensorInfo(o,s)}makeTensorFromTensorInfo(e,t){const{dataId:r,shape:s,dtype:o}=e,a=new Qe(s,o,r,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,r,s){r=r||this.nextVariableId().toString(),s!=null&&s!==e.dtype&&(e=e.cast(s));const o=new Ra(e,t,r,this.nextTensorId());if(this.state.registeredVariables[o.name]!=null)throw new Error(`Variable with name ${o.name} was already registered`);return this.state.registeredVariables[o.name]=o,this.incRef(o,this.backend),o}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let r=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(r=e.size*Ia(e.dtype)),this.state.numBytes+=r,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:r})),e instanceof Ra||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){const r=e.size*Ia(e.dtype);this.state.numBytes-=r}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,r=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(s=>s.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-r;for(const s of this.state.activeProfile.kernels)s.kernelTimeMs=await s.kernelTimeMs,s.extraInfo=await s.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,r,s,o,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:r,saved:o},u=Ac(e);u!=null&&(s=u.gradFunc),s!=null&&(i.gradient=c=>(c=c.map((l,h)=>{if(l==null){const d=r[h],p=hr(d.size,d.dtype);return this.makeTensor(p,d.shape,d.dtype)}return l}),s(c.length>1?c:c[0],o,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=af(e),r=new Set(t.map(o=>o.id));for(let o=0;o<this.state.activeScope.track.length;o++){const a=this.state.activeScope.track[o];!a.kept&&!r.has(a.id)&&a.dispose()}const s=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(o=>{!o.kept&&o.scopeId===s.id&&this.track(o)})}gradients(e,t,r,s=!1){if(_(t.length>0,()=>"gradients() received an empty list of xs."),r!=null&&r.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${r.dtype}'`);const o=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));_(o instanceof Qe,()=>"The result y returned by f() must be a tensor.");const a=b2(this.state.activeTape,t,o);if(!s&&a.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const i={};i[o.id]=r??I2(o.shape),w2(i,a,c=>this.tidy(c),k2);const u=t.map(c=>i[c.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(c=>{for(const l of c.saved)l.dispose()}),this.state.activeTape=null),{value:o,grads:u}})}customGrad(e){return _(qi(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{_(t.every(i=>i instanceof Qe),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let r;const s={};t.forEach((i,u)=>{s[u]=i});const o=(i,u)=>(r=e(...t,u),_(r.value instanceof Qe,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),_(qi(r.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),r.value),a=(i,u)=>{const c=r.gradFunc(i,u),l=Array.isArray(c)?c:[c];_(l.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),_(l.every(d=>d instanceof Qe),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const h={};return l.forEach((d,p)=>{h[p]=()=>d}),h};return this.runKernelFunc({forwardFunc:o,backwardsFunc:a,inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=dn(),r=await this.backend.time(e);return r.wallMs=dn()-t,r}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Bc;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}Ns.nextTensorId=0;Ns.nextVariableId=0;function I2(n){const e=sh(ne(n),"float32");return U.makeTensor(e,n,"float32")}function cf(){const n=ah();if(n._tfengine==null){const e=new zg(n);n._tfengine=new Ns(e)}return Kg(n._tfengine.ENV),C2(()=>n._tfengine),n._tfengine}const U=cf();function k2(n,e){const t={a:n,b:e};return U.runKernel(Wu,t)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R2(){return typeof navigator<"u"&&navigator!=null}function lf(n){if(n||R2()){if(n||(n=navigator),n.product==="ReactNative")return!0;const e=n.userAgent||n.vendor||(typeof window<"u"?window.opera:"");if(!e){const t=n;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function hf(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nt=j();Nt.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Nt.registerFlag("IS_BROWSER",()=>hf());Nt.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");Nt.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Nt.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));Nt.registerFlag("PROD",()=>!1);Nt.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Nt.getBool("DEBUG"));Nt.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Nt.registerFlag("IS_TEST",()=>!1);Nt.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>Nt.getBool("DEBUG"));Nt.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Nt.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);Nt.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gr(n,e){let t=n;if(rn(n))return e==="string"?[]:[n.length];if(sf(n)){const s=n.channels||"RGBA";return[n.height,n.width*s.length]}else if(of(n))return[n.buffer.size/(e==null?4:Ia(e))];if(!Array.isArray(n))return[];const r=[];for(;Array.isArray(t)||rn(t)&&e!=="string";)r.push(t.length),t=t[0];return Array.isArray(n)&&j().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&df(n,r,[]),r}function df(n,e,t){if(t=t||[],!Array.isArray(n)&&!rn(n)){_(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}_(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${n.length} elements`),_(n.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${n.length} elements`);const r=e.slice(1);for(let s=0;s<n.length;++s)df(n[s],r,t.concat(s))}function Vc(n,e,t,r){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==e||n==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${r}' must be ${n} tensor, but got ${e} tensor`)}}function E(n,e,t,r="numeric"){if(n instanceof rf())return Vc(r,n.dtype,e,t),n;let s=ko(n);if(s!=="string"&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),Vc(r,s,e,t),n==null||!rn(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const u=n==null?"null":n.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${u}'`)}const o=gr(n,s);!rn(n)&&!Array.isArray(n)&&(n=[n]);const i=s!=="string"?Xa(n,s):Wr(n,[],!0);return U.makeTensor(i,o,s)}function _a(n,e,t,r="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((o,a)=>E(o,`${e}[${a}]`,t,r))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pf="__op";function L(n){const e=Object.keys(n);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0];const r=n[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+pf;const s=(...o)=>{U.startScope(t);try{const a=r(...o);return Ur(a)&&console.error("Cannot return a Promise inside of tidy."),U.endScope(a),a}catch(a){throw U.endScope(null),a}};return Object.defineProperty(s,"name",{value:t,configurable:!0}),s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _2(n,e){const t=E(n,"real","complex"),r=E(e,"imag","complex");Gt(t.shape,r.shape,`real and imag shapes, ${t.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:t,imag:r};return U.runKernel(kh,s)}const dr=L({complex_:_2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yr(n,e,t,r){if(r==null)r=ko(n);else if(r==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(of(n)||sf(n)){if(r!=="float32"&&r!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return U.backend.createTensorFromGPUData(n,e||t,r)}if(!rn(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){jt(e);const s=ne(e),o=ne(t);_(s===o,()=>`Based on the provided shape, [${e}], the tensor should have ${s} values but has ${o}`);for(let a=0;a<t.length;++a){const i=t[a],u=a===t.length-1?i!==ne(e.slice(a)):!0;_(t[a]===e[a]||!u,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!rn(n)&&!Array.isArray(n)&&(n=[n]),e=e||t,n=r!=="string"?Xa(n,r):Wr(n,[],!0),U.makeTensor(n,e,r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function En(n,e,t){const r=gr(n,t);return yr(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zr={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class bn{static join(e){return new bn(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,e==null||(e instanceof Array||(e=[e]),e=e.map(r=>rn(r)?r.buffer:r),e.length===0))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let r=0;r<e.length;r++){const s=e[r];r!==e.length-1&&s.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const o=t+s.byteLength;this.shards.push({buffer:s,start:t,end:o}),t=o}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const r=this.findShardForByte(e);if(r===-1)throw new Error(`Could not find start shard for byte ${e}`);const s=t-e,o=new ArrayBuffer(s),a=new Uint8Array(o);let i=0;for(let u=r;u<this.shards.length;u++){const c=this.shards[u],h=e+i-c.start,d=i,f=Math.min(t,c.end)-c.start,x=new Uint8Array(c.buffer,h,f-h);if(a.set(x,d),i+=x.length,t<c.end)break}return o}findShardForByte(e){if(this.shards.length===0||e<0||e>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(s){return e<s.start?-1:e>=s.end?1:0}if(t(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const r=A2(this.shards,t);return r===-1?-1:(this.previousShardIndex=r,this.previousShardIndex)}}function A2(n,e){let t=0,r=n.length;for(;t<=r;){const s=Math.floor((r-t)/2)+t,o=e(n[s]);if(o===0)return s;o<0?r=s:t=s+1}return-1}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tr(){return U}function ve(n,e){return U.tidy(n,e)}function Ke(n){af(n).forEach(t=>t.dispose())}function Tn(n){return U.keep(n)}function O2(){return U.backendName}function D2(n,e,t=1){return U.registerBackend(n,e,t)}function F2(){return U.backend}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pr=4;async function P2(n,e){const t=[],r=[],s=Array.isArray(n)?n.map(a=>a.name):Object.keys(n);for(let a=0;a<s.length;++a){const i=s[a],u=Array.isArray(n)?n[a].tensor:n[i];if(u.dtype!=="float32"&&u.dtype!=="int32"&&u.dtype!=="bool"&&u.dtype!=="string"&&u.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${u.dtype}`);const c={name:i,shape:u.shape,dtype:u.dtype};if(u.dtype==="string"){const l=new Promise(async h=>{const d=await u.bytes(),p=d.reduce((y,b)=>y+b.length,0)+pr*d.length,f=new Uint8Array(p);let x=0;for(let y=0;y<d.length;y++){const b=d[y],S=new Uint8Array(new Uint32Array([b.length]).buffer);f.set(S,x),x+=pr,f.set(b,x),x+=b.length}h(f)});r.push(l)}else r.push(u.data());e!=null&&(c.group=e),t.push(c)}const o=await Promise.all(r);return{data:V2(o),specs:t}}function ff(n,e){const t=new bn(n),r={};let s=0;for(const o of e){const a=L2(o,(i,u)=>t.slice(s+i,s+u));r[o.name]=mf(o,t.slice(s,s+a)),s+=a}return r}function L2(n,e){const t=ne(n.shape);let r;if("quantization"in n){const s=n.quantization;r=zr[s.dtype]}else if(n.dtype==="string"){let s=0;for(let o=0;o<t;o++)s+=pr+new Uint32Array(e(s,s+pr))[0];return s}else r=zr[n.dtype];return t*r}async function B2(n,e){const t=ne(n.shape);let r;if("quantization"in n){const s=n.quantization;r=zr[s.dtype]}else if(n.dtype==="string"){let s=0;for(let o=0;o<t;o++)s+=pr+new Uint32Array(await e(s,s+pr))[0];return s}else r=zr[n.dtype];return t*r}function mf(n,e){const t=n.name,r=n.dtype,s=n.shape,o=ne(s);let a,i=0;if("quantization"in n){const u=n.quantization;if(u.dtype==="uint8"||u.dtype==="uint16"){if(!("min"in u&&"scale"in u))throw new Error(`Weight ${n.name} with quantization ${u.dtype} doesn't have corresponding metadata min and scale.`)}else if(u.dtype==="float16"){if(r!=="float32")throw new Error(`Weight ${n.name} is quantized with ${u.dtype} which only supports weights of type float32 not ${r}.`)}else throw new Error(`Weight ${n.name} has unknown quantization dtype ${u.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const c=zr[u.dtype],l=u.dtype==="uint8"?new Uint8Array(e):new Uint16Array(e);if(r==="float32")if(u.dtype==="uint8"||u.dtype==="uint16"){a=new Float32Array(l.length);for(let h=0;h<l.length;h++){const d=l[h];a[h]=d*u.scale+u.min}}else if(u.dtype==="float16")a=H2()(l);else throw new Error(`Unsupported quantization type ${u.dtype} for weight type float32.`);else if(r==="int32"){if(u.dtype!=="uint8"&&u.dtype!=="uint16")throw new Error(`Unsupported quantization type ${u.dtype} for weight type int32.`);a=new Int32Array(l.length);for(let h=0;h<l.length;h++){const d=l[h];a[h]=Math.round(d*u.scale+u.min)}}else throw new Error(`Unsupported dtype in weight '${t}': ${r}`);i+=o*c}else if(r==="string"){const u=ne(n.shape);a=[];for(let c=0;c<u;c++){const l=new Uint32Array(e.slice(i,i+pr))[0];i+=pr;const h=new Uint8Array(e.slice(i,i+l));a.push(h),i+=l}}else{const u=zr[r];if(r==="float32")a=new Float32Array(e);else if(r==="int32")a=new Int32Array(e);else if(r==="bool")a=new Uint8Array(e);else if(r==="complex64"){a=new Float32Array(e);const c=new Float32Array(a.length/2),l=new Float32Array(a.length/2);for(let f=0;f<c.length;f++)c[f]=a[f*2],l[f]=a[f*2+1];const h=En(c,s,"float32"),d=En(l,s,"float32"),p=dr(h,d);return h.dispose(),d.dispose(),p}else throw new Error(`Unsupported dtype in weight '${t}': ${r}`);i+=o*u}return En(a,s,r)}async function Mc(n,e,t){let r=new Uint8Array(e);for(;r.byteLength<t;){const{done:s,value:o}=await n.read();if(s&&o==null){const i=t-r.byteLength;throw new Error(`Reader is done but ${i} bytes are still expected`)}const a=new Uint8Array(r.length+o.byteLength);a.set(r,0),a.set(new Uint8Array(o),r.length),r=a}return r.buffer}async function gf(n,e){const t={},r=n.getReader();let s=new ArrayBuffer(0);for(const o of e){const a=await B2(o,async(c,l)=>(s=await Mc(r,s,l),s.slice(c,l)));s=await Mc(r,s,a);const i=s.slice(0,a);s=s.slice(a);const u=mf(o,i);if(t[o.name]=u,O2()==="webgpu"){const c=F2();"uploadToGPU"in c&&ne(u.shape)>=j().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&c.uploadToGPU(u.dataId)}}return t}function V2(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let e=0;const t=[];n.forEach(o=>{if(e+=o.byteLength,t.push(o.byteLength===o.buffer.byteLength?o:new o.constructor(o)),!(o instanceof Float32Array||o instanceof Int32Array||o instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${o.constructor.name}`)});const r=new Uint8Array(e);let s=0;return t.forEach(o=>{r.set(new Uint8Array(o.buffer),s),s+=o.byteLength}),r.buffer}const Ku=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function Uc(n){return Ku?Buffer.byteLength(n,"utf8"):new Blob([n]).size}function M2(n){if(Ku)return Buffer.from(n).toString("base64");const e=new Uint8Array(n);let t="";for(let r=0,s=e.length;r<s;r++)t+=String.fromCharCode(e[r]);return btoa(t)}function U2(n){if(Ku){const r=Buffer.from(n,"base64");return r.buffer.slice(r.byteOffset,r.byteOffset+r.byteLength)}const e=atob(n),t=new Uint8Array(e.length);for(let r=0;r<e.length;++r)t.set([e.charCodeAt(r)],r);return t.buffer}function W2(n){return bn.join(n)}function Wc(n){const e="/";for(n=n.trim();n.endsWith(e);)n=n.slice(0,n.length-1);const t=n.split(e);return t[t.length-1]}function yf(n,e){const t={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy,weightsManifest:e};return n.signature!=null&&(t.signature=n.signature),n.userDefinedMetadata!=null&&(t.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(t.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(t.initializerSignature=n.initializerSignature),n.trainingConfig!=null&&(t.trainingConfig=n.trainingConfig),t}function xf(n,e,t){const r={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy};if(n.trainingConfig!=null&&(r.trainingConfig=n.trainingConfig),n.weightsManifest!=null){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!t)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=e,r.weightData=t}return n.signature!=null&&(r.signature=n.signature),n.userDefinedMetadata!=null&&(r.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(r.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(r.initializerSignature=n.initializerSignature),r}async function Xu(n,e){let t,r;return n.weightsManifest!=null&&([t,r]=await e(n.weightsManifest)),xf(n,t,r)}function Ro(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:Uc(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:Uc(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:new bn(n.weightData).byteLength}}function cu(n){const e=[];for(const t of n)e.push(...t.weights);return e}function z2(){const n=t=>{let r=t<<13,s=0;for(;!(r&8388608);)s-=8388608,r<<=1;return r&=-8388609,s+=947912704,r|s},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=n(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}function G2(){const n=new Uint32Array(64);n[0]=0,n[31]=1199570944,n[32]=2147483648,n[63]=3347054592;for(let e=1;e<31;e++)n[e]=e<<23;for(let e=33;e<63;e++)n[e]=2147483648+(e-32<<23);return n}function j2(){const n=new Uint32Array(64);for(let e=0;e<64;e++)n[e]=1024;return n[0]=n[32]=0,n}function H2(){const n=z2(),e=G2(),t=j2();return r=>{const s=new ArrayBuffer(4*r.length),o=new Uint32Array(s);for(let a=0;a<r.length;a++){const i=r[a],u=n[t[i>>10]+(i&1023)]+e[i>>10];o[a]=u}return new Float32Array(s)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class He{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return He.instance==null&&(He.instance=new He),He.instance}static registerSaveRouter(e){He.getInstance().saveRouters.push(e)}static registerLoadRouter(e){He.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return He.getHandlers(e,"save")}static getLoadHandlers(e,t){return He.getHandlers(e,"load",t)}static getHandlers(e,t,r){const s=[];return(t==="load"?He.getInstance().loadRouters:He.getInstance().saveRouters).forEach(a=>{const i=a(e,r);i!==null&&s.push(i)}),s}}const K2=n=>He.registerSaveRouter(n),X2=n=>He.registerLoadRouter(n),q2=n=>He.getSaveHandlers(n),Y2=(n,e)=>He.getLoadHandlers(n,e);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lu="tensorflowjs",hu=1,Lr="models_store",sr="model_info_store";function bf(){if(!j().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,e=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function du(n){const e=n.result;e.createObjectStore(Lr,{keyPath:"modelPath"}),e.createObjectStore(sr,{keyPath:"modelPath"})}class Gr{constructor(e){if(this.indexedDB=bf(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((r,s)=>{const o=this.indexedDB.open(lu,hu);o.onupgradeneeded=()=>du(o),o.onsuccess=()=>{const a=o.result;if(t==null){const i=a.transaction(Lr,"readonly"),c=i.objectStore(Lr).get(this.modelPath);c.onsuccess=()=>{if(c.result==null)return a.close(),s(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));r(c.result.modelArtifacts)},c.onerror=l=>(a.close(),s(c.error)),i.oncomplete=()=>a.close()}else{t.weightData=bn.join(t.weightData);const i=Ro(t),u=a.transaction(sr,"readwrite");let c=u.objectStore(sr),l;try{l=c.put({modelPath:this.modelPath,modelArtifactsInfo:i})}catch(d){return s(d)}let h;l.onsuccess=()=>{h=a.transaction(Lr,"readwrite");const d=h.objectStore(Lr);let p;try{p=d.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:i})}catch(f){return s(f)}p.onsuccess=()=>r({modelArtifactsInfo:i}),p.onerror=f=>{c=u.objectStore(sr);const x=c.delete(this.modelPath);x.onsuccess=()=>(a.close(),s(p.error)),x.onerror=y=>(a.close(),s(p.error))}},l.onerror=d=>(a.close(),s(l.error)),u.oncomplete=()=>{h==null?a.close():h.oncomplete=()=>a.close()}}},o.onerror=a=>s(o.error)})}}Gr.URL_SCHEME="indexeddb://";const wf=n=>j().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Gr.URL_SCHEME)?Q2(n.slice(Gr.URL_SCHEME.length)):null;He.registerSaveRouter(wf);He.registerLoadRouter(wf);function Q2(n){return new Gr(n)}function Z2(n){return n.startsWith(Gr.URL_SCHEME)?n.slice(Gr.URL_SCHEME.length):n}class J2{constructor(){this.indexedDB=bf()}async listModels(){return new Promise((e,t)=>{const r=this.indexedDB.open(lu,hu);r.onupgradeneeded=()=>du(r),r.onsuccess=()=>{const s=r.result,o=s.transaction(sr,"readonly"),i=o.objectStore(sr).getAll();i.onsuccess=()=>{const u={};for(const c of i.result)u[c.modelPath]=c.modelArtifactsInfo;e(u)},i.onerror=u=>(s.close(),t(i.error)),o.oncomplete=()=>s.close()},r.onerror=s=>t(r.error)})}async removeModel(e){return e=Z2(e),new Promise((t,r)=>{const s=this.indexedDB.open(lu,hu);s.onupgradeneeded=()=>du(s),s.onsuccess=()=>{const o=s.result,a=o.transaction(sr,"readwrite"),i=a.objectStore(sr),u=i.get(e);let c;u.onsuccess=()=>{if(u.result==null)return o.close(),r(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const l=i.delete(e),h=()=>{c=o.transaction(Lr,"readwrite");const p=c.objectStore(Lr).delete(e);p.onsuccess=()=>t(u.result.modelArtifactsInfo),p.onerror=f=>r(u.error)};l.onsuccess=h,l.onerror=d=>(h(),o.close(),r(u.error))}},u.onerror=l=>(o.close(),r(u.error)),a.oncomplete=()=>{c==null?o.close():c.oncomplete=()=>o.close()}},s.onerror=o=>r(s.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pn="/",ys="tensorflowjs_models",vf="info",e0="model_topology",t0="weight_specs",n0="weight_data",r0="model_metadata";function $f(n){return{info:[ys,n,vf].join(Pn),topology:[ys,n,e0].join(Pn),weightSpecs:[ys,n,t0].join(Pn),weightData:[ys,n,n0].join(Pn),modelMetadata:[ys,n,r0].join(Pn)}}function Cf(n){for(const e of Object.values(n))window.localStorage.removeItem(e)}function s0(n){const e=n.split(Pn);if(e.length<3)throw new Error(`Invalid key format: ${n}`);return e.slice(1,e.length-1).join(Pn)}function o0(n){return n.startsWith(jr.URL_SCHEME)?n.slice(jr.URL_SCHEME.length):n}class jr{constructor(e){if(!j().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=$f(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),s=Ro(e),o=bn.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,M2(o));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:s}}catch{throw Cf(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},r=JSON.parse(this.LS.getItem(this.keys.topology));if(r==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=r;const s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(s==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=s;const o=this.LS.getItem(this.keys.modelMetadata);if(o!=null){const i=JSON.parse(o);t.format=i.format,t.generatedBy=i.generatedBy,t.convertedBy=i.convertedBy,i.signature!=null&&(t.signature=i.signature),i.userDefinedMetadata!=null&&(t.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(t.modelInitializer=i.modelInitializer),i.initializerSignature!=null&&(t.initializerSignature=i.initializerSignature),i.trainingConfig!=null&&(t.trainingConfig=i.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=U2(a),t}}jr.URL_SCHEME="localstorage://";const Sf=n=>j().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(jr.URL_SCHEME)?a0(n.slice(jr.URL_SCHEME.length)):null;He.registerSaveRouter(Sf);He.registerLoadRouter(Sf);function a0(n){return new jr(n)}class i0{constructor(){_(j().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),_(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=ys+Pn,r=Pn+vf;for(let s=0;s<this.LS.length;++s){const o=this.LS.key(s);if(o.startsWith(t)&&o.endsWith(r)){const a=s0(o);e[a]=JSON.parse(this.LS.getItem(o))}}return e}async removeModel(e){e=o0(e);const t=$f(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(t.info));return Cf(t),r}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ws="://";class xt{constructor(){this.managers={}}static getInstance(){return xt.instance==null&&(xt.instance=new xt),xt.instance}static registerManager(e,t){_(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(ws)&&(e=e.slice(0,e.indexOf(ws))),_(e.length>0,()=>"scheme must not be an empty string.");const r=xt.getInstance();_(r.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),r.managers[e]=t}static getManager(e){const t=xt.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(xt.getInstance().managers)}}function ya(n){if(n.indexOf(ws)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${xt.getSchemes().join(",")}`);return{scheme:n.split(ws)[0],path:n.split(ws)[1]}}async function Tf(n,e,t=!1){_(n!==e,()=>`Old path and new path are the same: '${n}'`);const r=He.getLoadHandlers(n);_(r.length>0,()=>`Copying failed because no load handler is found for source URL ${n}.`),_(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${n}.`);const s=r[0],o=He.getSaveHandlers(e);_(o.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),_(o.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${e}.`);const a=o[0],i=ya(n).scheme,u=ya(n).path,c=i===ya(n).scheme,l=await s.load();t&&c&&await xt.getManager(i).removeModel(u);const h=await a.save(l);return t&&!c&&await xt.getManager(i).removeModel(u),h.modelArtifactsInfo}async function u0(){const n=xt.getSchemes(),e={};for(const t of n){const r=await xt.getManager(t).listModels();for(const s in r){const o=t+ws+s;e[o]=r[s]}}return e}async function c0(n){const e=ya(n);return xt.getManager(e.scheme).removeModel(e.path)}async function l0(n,e){return Tf(n,e,!1)}async function h0(n,e){return Tf(n,e,!0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class d0{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if(typeof window>"u"||!j().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",r=>{if(r.source===window&&r.data.name===this.messageName){r.stopPropagation();const s=this.functionRefs[r.data.index];s(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return Qp(e)}}if(j().get("IS_BROWSER")){j().setPlatform("browser",new d0);try{xt.registerManager(jr.URL_SCHEME,new i0)}catch{}try{xt.registerManager(Gr.URL_SCHEME,new J2)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p0={importFetch:()=>require("node-fetch")};let Ii;class f0{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return j().global.fetch!=null?j().global.fetch(e,t):(Ii==null&&(Ii=p0.importFetch()),Ii(e,t))}now(){const e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}j().get("IS_NODE")&&!j().get("IS_BROWSER")&&j().setPlatform("node",new f0);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qe(n,e="float32",t){return e=e||"float32",jt(n),new Ts(n,e,t)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m0(n,e){const t=E(n,"x","cast");if(!Bg(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");const r={x:t},s={dtype:e};return U.runKernel(zu,r,s)}const je=L({cast_:m0});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g0(n){const t={x:E(n,"x","clone","string_or_numeric")};return U.runKernel(Gu,t)}const ir=L({clone_:g0});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nf(n,e=!1){console.log(n.toString(e))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */cf();const y0={buffer:qe,cast:je,clone:ir,print:Nf};S2(y0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x0(n,e){let t=E(n,"a","add"),r=E(e,"b","add");[t,r]=Ze(t,r);const s={a:t,b:r};return U.runKernel(Wu,s)}const me=L({add_:x0});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b0(n,e){let t=E(n,"a","floorDiv"),r=E(e,"b","floorDiv");[t,r]=Ze(t,r);const s={a:t,b:r};return U.runKernel(id,s)}const Ef=L({floorDiv_:b0});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w0(n,e){let t=E(n,"a","div"),r=E(e,"b","div");if([t,r]=Ze(t,r),t.dtype==="int32"&&r.dtype==="int32")return Ef(t,r);const s={a:t,b:r},o={};return U.runKernel(qh,s,o)}const ke=L({div_:w0});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v0(n,e){let t=E(n,"a","mul"),r=E(e,"b","mul");[t,r]=Ze(t,r);const s={a:t,b:r};return U.runKernel(Vd,s)}const oe=L({mul_:v0});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $0(n){const e=E(n,"x","abs");if(e.dtype==="complex64"){const t={x:e};return U.runKernel(Rh,t)}else{const t={x:e};return U.runKernel(ih,t)}}const Ut=L({abs_:$0});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C0(n){const t={x:E(n,"x","acos")};return U.runKernel(uh,t)}const S0=L({acos_:C0});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T0(n){const t={x:E(n,"x","acosh")};return U.runKernel(ch,t)}const N0=L({acosh_:T0});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E0(n){_(Array.isArray(n),()=>"The argument passed to tf.addN() must be a list of tensors"),_(n.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${n.length}`);const e=n.map((s,o)=>E(s,`tensors${o}`,"addN")),t=e[0];e.forEach(s=>{if(s.dtype!==t.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(s=>{if(!Xe(s.shape,t.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const r=e;return U.runKernel(lh,r)}const I0=L({addN_:E0});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k0(n,e=null,t=!1){const s={x:E(n,"x","all","bool")},o={axis:e,keepDims:t};return U.runKernel(hh,s,o)}const R0=L({all_:k0});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _0(n,e=null,t=!1){const s={x:E(n,"x","any","bool")},o={axis:e,keepDims:t};return U.runKernel(dh,s,o)}const A0=L({any_:_0});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O0(n,e=0){const r={x:E(n,"x","argMax")},s={axis:e};return U.runKernel(ph,r,s)}const D0=L({argMax_:O0});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F0(n,e=0){const r={x:E(n,"x","argMin")},s={axis:e};return U.runKernel(fh,r,s)}const P0=L({argMin_:F0});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L0(n){const t={x:E(n,"x","asin")};return U.runKernel(mh,t)}const B0=L({asin_:L0});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V0(n){const t={x:E(n,"x","asinh")};return U.runKernel(gh,t)}const M0=L({asinh_:V0});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U0(n){const t={x:E(n,"x","atan")};return U.runKernel(yh,t)}const W0=L({atan_:U0});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z0(n,e){let t=E(n,"a","atan2"),r=E(e,"b","atan2");[t,r]=Ze(t,r);const s={a:t,b:r};return U.runKernel(bh,s)}const G0=L({atan2_:z0});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j0(n){const t={x:E(n,"x","atanh")};return U.runKernel(xh,t)}const H0=L({atanh_:j0});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function If(n,e,t,r,s="NHWC",o){const a=n[3],i=[...e,a],u=As(s);return Ht(n,i,t,o,r,null,null,u)}function Jr(n,e,t,r,s,o,a="channelsLast"){const[i,u]=yo(e);let c;if(a==="channelsLast")c=[i,u,n[3],n[3]];else if(a==="channelsFirst")c=[i,u,n[1],n[1]];else throw new Error(`Unknown dataFormat ${a}`);return Ht(n,c,t,r,s,o,!1,a)}function _o(n,e,t,r,s,o,a="NDHWC"){const[i,u,c]=pu(e);let l,h;if(a==="NDHWC")h="channelsLast",l=[i,u,c,n[4],n[4]];else if(a==="NCDHW")h="channelsFirst",l=[i,u,c,n[1],n[1]];else throw new Error(`Unknown dataFormat ${a}`);return Ao(n,l,t,r,s,!1,h,o)}function Ht(n,e,t,r,s,o,a=!1,i="channelsLast"){let[u,c,l,h]=[-1,-1,-1,-1];if(i==="channelsLast")[u,c,l,h]=n;else if(i==="channelsFirst")[u,h,c,l]=n;else throw new Error(`Unknown dataFormat ${i}`);const[d,p,,f]=e,[x,y]=yo(t),[b,S]=yo(r),I=vs(d,b),k=vs(p,S),{padInfo:P,outHeight:W,outWidth:H}=q0(s,c,l,x,y,I,k,o,i),G=a?f*h:f;let B;return i==="channelsFirst"?B=[u,G,W,H]:i==="channelsLast"&&(B=[u,W,H,G]),{batchSize:u,dataFormat:i,inHeight:c,inWidth:l,inChannels:h,outHeight:W,outWidth:H,outChannels:G,padInfo:P,strideHeight:x,strideWidth:y,filterHeight:d,filterWidth:p,effectiveFilterHeight:I,effectiveFilterWidth:k,dilationHeight:b,dilationWidth:S,inShape:n,outShape:B,filterShape:e}}function Ao(n,e,t,r,s,o=!1,a="channelsLast",i){let[u,c,l,h,d]=[-1,-1,-1,-1,-1];if(a==="channelsLast")[u,c,l,h,d]=n;else if(a==="channelsFirst")[u,d,c,l,h]=n;else throw new Error(`Unknown dataFormat ${a}`);const[p,f,x,,y]=e,[b,S,I]=pu(t),[k,P,W]=pu(r),H=vs(p,k),G=vs(f,P),B=vs(x,W),{padInfo:V,outDepth:R,outHeight:q,outWidth:te}=Y0(s,c,l,h,b,S,I,H,G,B,i),he=o?y*d:y;let de;return a==="channelsFirst"?de=[u,he,R,q,te]:a==="channelsLast"&&(de=[u,R,q,te,he]),{batchSize:u,dataFormat:a,inDepth:c,inHeight:l,inWidth:h,inChannels:d,outDepth:R,outHeight:q,outWidth:te,outChannels:he,padInfo:V,strideDepth:b,strideHeight:S,strideWidth:I,filterDepth:p,filterHeight:f,filterWidth:x,effectiveFilterDepth:H,effectiveFilterHeight:G,effectiveFilterWidth:B,dilationDepth:k,dilationHeight:P,dilationWidth:W,inShape:n,outShape:de,filterShape:e}}function K0(n,e,t,r,s){r==null&&(r=qu(n,e,t));const o=n[0],a=n[1],i=xo((o-e+2*r)/t+1,s),u=xo((a-e+2*r)/t+1,s);return[i,u]}function X0(n,e,t,r,s,o){s==null&&(s=qu(n,e[0],r[0]));const a=[0,0,0,t];for(let i=0;i<3;i++)n[i]+2*s>=e[i]&&(a[i]=xo((n[i]-e[i]+2*s)/r[i]+1,o));return a}function qu(n,e,t,r=1){const s=vs(e,r);return Math.floor((n[0]*(t-1)-t+s)/2)}function yo(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function pu(n){return typeof n=="number"?[n,n,n]:n}function vs(n,e){return e<=1?n:n+(n-1)*(e-1)}function q0(n,e,t,r,s,o,a,i,u){let c,l,h;if(typeof n=="number"){c={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const p=K0([e,t],o,r,n,i);l=p[0],h=p[1]}else if(n==="same"){l=Math.ceil(e/r),h=Math.ceil(t/s);const d=Math.max(0,(l-1)*r+o-e),p=Math.max(0,(h-1)*s+a-t),f=Math.floor(d/2),x=d-f,y=Math.floor(p/2),b=p-y;c={top:f,bottom:x,left:y,right:b,type:"SAME"}}else if(n==="valid")c={top:0,bottom:0,left:0,right:0,type:"VALID"},l=Math.ceil((e-o+1)/r),h=Math.ceil((t-a+1)/s);else if(typeof n=="object"){const d=u==="channelsLast"?n[1][0]:n[2][0],p=u==="channelsLast"?n[1][1]:n[2][1],f=u==="channelsLast"?n[2][0]:n[3][0],x=u==="channelsLast"?n[2][1]:n[3][1];c={top:d,bottom:p,left:f,right:x,type:d===0&&p===0&&f===0&&x===0?"VALID":"EXPLICIT"},l=xo((e-o+d+p)/r+1,i),h=xo((t-a+f+x)/s+1,i)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:c,outHeight:l,outWidth:h}}function Y0(n,e,t,r,s,o,a,i,u,c,l){let h,d,p,f;if(n==="valid"&&(n=0),typeof n=="number"){h={top:n,bottom:n,left:n,right:n,front:n,back:n,type:n===0?"VALID":"NUMBER"};const y=X0([e,t,r,1],[i,u,c],1,[s,o,a],n,l);d=y[0],p=y[1],f=y[2]}else if(n==="same"){d=Math.ceil(e/s),p=Math.ceil(t/o),f=Math.ceil(r/a);const x=(d-1)*s+i-e,y=(p-1)*o+u-t,b=(f-1)*a+c-r,S=Math.floor(x/2),I=x-S,k=Math.floor(y/2),P=y-k,W=Math.floor(b/2),H=b-W;h={top:k,bottom:P,left:W,right:H,front:S,back:I,type:"SAME"}}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}function xo(n,e){if(!e)return Math.trunc(n);switch(e){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${e}`)}}function bo(n){const[e,t,r]=yo(n);return e===1&&t===1&&r===1}function Pt(n,e){return bo(n)||bo(e)}function Hr(n){return yo(n).every(e=>e>0)}function As(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function sn(n,e,t){if(t!=null){if(typeof e=="string")throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);if(typeof e=="number")_(Cs(e),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);else if(typeof e=="object")e.forEach(r=>{r.forEach(s=>{_(Cs(s),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${s}.`)})});else throw Error(`Error in ${n}: Unknown padding parameter: ${e}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q0(n,e){const r={x:E(n,"x","reshape","string_or_numeric")},s={shape:e};return U.runKernel(op,r,s)}const Z=L({reshape_:Q0});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z0(n,e,t,r,s){const o=E(n,"x","avgPool","float32"),a=1;_(Pt(t,a),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`);let i=o,u=!1;o.rank===3&&(u=!0,i=Z(o,[1,o.shape[0],o.shape[1],o.shape[2]])),_(i.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),sn("avgPool",r,s);const c={x:i},l={filterSize:e,strides:t,pad:r,dimRoundingMode:s};let h=U.runKernel(wh,c,l);return h=je(h,o.dtype),u?Z(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const kf=L({avgPool_:Z0});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J0(n,e,t,r,s,o="NDHWC"){const a=E(n,"x","avgPool3d","float32");let i=a,u=!1;a.rank===4&&(u=!0,i=Z(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),_(i.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),_(o==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),_(typeof t=="number"&&t>0||Array.isArray(t)&&t[0]>0&&t[1]>0&&t[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${t}'`),sn("avgPool3d",r,s);const c={x:i},l={filterSize:e,strides:t,pad:r,dimRoundingMode:s,dataFormat:o};let h=U.runKernel(vh,c,l);return h=je(h,i.dtype),u?Z(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const e3=L({avgPool3d_:J0});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t3(n,e=0){_(n.length>=1,()=>"Pass at least one tensor to concat");const t=_a(n,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(o=>{if(o.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${o.dtype}. `)}),t.length===1)return ir(t[0]);const r=t,s={axis:e};return U.runKernel(_h,r,s)}const ht=L({concat_:t3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n3(n,e,t=!1,r=!1){let s=E(n,"a","matMul"),o=E(e,"b","matMul");[s,o]=Ze(s,o);const a={a:s,b:o},i={transposeA:t,transposeB:r};return U.runKernel($h,a,i)}const Le=L({matMul_:n3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r3(n){const t={x:E(n,"x","sigmoid","float32")};return U.runKernel(vp,t)}const Mr=L({sigmoid_:r3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s3(n,e,t){const r=E(n,"x","slice","string_or_numeric");if(r.rank===0)throw new Error("Slicing scalar is not possible");const s={x:r},o={begin:e,size:t};return U.runKernel(yp,s,o)}const Se=L({slice_:s3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o3(n){const t={x:E(n,"x","tanh","float32")};return U.runKernel(Up,t)}const fu=L({tanh_:o3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a3(n,e,t,r,s,o){const a=E(n,"forgetBias","basicLSTMCell"),i=E(e,"lstmKernel","basicLSTMCell"),u=E(t,"lstmBias","basicLSTMCell"),c=E(r,"data","basicLSTMCell"),l=E(s,"c","basicLSTMCell"),h=E(o,"h","basicLSTMCell"),d=ht([c,h],1),p=Le(d,i),f=me(p,u),x=f.shape[0],y=f.shape[1]/4,b=[x,y],S=Se(f,[0,0],b),I=Se(f,[0,y],b),k=Se(f,[0,y*2],b),P=Se(f,[0,y*3],b),W=me(oe(Mr(S),fu(I)),oe(l,Mr(me(a,k)))),H=oe(fu(W),Mr(P));return[W,H]}const i3=L({basicLSTMCell_:a3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u3(n,e,t){const r=E(n,"x","batchToSpaceND"),s=e.reduce((i,u)=>i*u);_(r.rank>=1+e.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${e.length}`),_(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),_(r.shape[0]%s===0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${s}`);const o={x:r},a={blockShape:e,crops:t};return U.runKernel(Ch,o,a)}const Rf=L({batchToSpaceND_:u3});function c3(n){let e;return n.rank===0||n.rank===1?e=Z(n,[1,1,1,n.size]):n.rank===2?e=Z(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?e=Z(n,[1,n.shape[0],n.shape[1],n.shape[2]]):e=n,e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l3(n,e,t,r,s,o){o==null&&(o=.001);const a=E(n,"x","batchNorm"),i=E(e,"mean","batchNorm"),u=E(t,"variance","batchNorm");let c;s!=null&&(c=E(s,"scale","batchNorm"));let l;r!=null&&(l=E(r,"offset","batchNorm")),_(i.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),_(l==null||i.rank===l.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),_(c==null||i.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const d={x:c3(a),scale:c,offset:l,mean:i,variance:u},p={varianceEpsilon:o},f=U.runKernel(ud,d,p);return Z(f,a.shape)}const qa=L({batchNorm_:l3});function h3(n,e,t,r,s,o){const a=E(n,"x","batchNorm"),i=E(e,"mean","batchNorm"),u=E(t,"variance","batchNorm");let c;s!=null&&(c=E(s,"scale","batchNorm"));let l;return r!=null&&(l=E(r,"offset","batchNorm")),_(a.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`),_(i.rank===2||i.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),_(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),c!=null&&_(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),l!=null&&_(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${l.rank}.`),qa(a,i,u,l,c,o)}const d3=L({batchNorm2d_:h3});function p3(n,e,t,r,s,o){const a=E(n,"x","batchNorm"),i=E(e,"mean","batchNorm"),u=E(t,"variance","batchNorm");let c;s!=null&&(c=E(s,"scale","batchNorm"));let l;return r!=null&&(l=E(r,"offset","batchNorm")),_(a.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),_(i.rank===3||i.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),_(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),c!=null&&_(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),l!=null&&_(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${l.rank}.`),qa(a,i,u,l,c,o)}const f3=L({batchNorm3d_:p3});function m3(n,e,t,r,s,o){const a=E(n,"x","batchNorm"),i=E(e,"mean","batchNorm"),u=E(t,"variance","batchNorm");let c;s!=null&&(c=E(s,"scale","batchNorm"));let l;return r!=null&&(l=E(r,"offset","batchNorm")),_(a.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`),_(i.rank===4||i.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),_(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),c!=null&&_(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),l!=null&&_(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${l.rank}.`),qa(a,i,u,l,c,o)}const g3=L({batchNorm4d_:m3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y3(n,e,t){const r=E(n,"x","bincount"),s=E(e,"weights","bincount");_(r.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`),_(t>=0,()=>`size must be non-negative, but got ${t}.`),_(s.size===r.size||s.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`);const o={x:r,weights:s},a={size:t};return U.runKernel(Sh,o,a)}const _f=L({bincount_:y3});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x3(n,e){const t=E(n,"x","bitwiseAnd"),r=E(e,"y","bitwiseAnd");if(!Xe(t.shape,r.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${t.shape}, y: ${r.shape}`);if(t.dtype!=="int32"||r.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${t.dtype} and type of y: ${r.dtype}`);const s={a:t,b:r};return U.runKernel(Th,s)}const b3=L({bitwiseAnd_:x3});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w3(n,e){const t=E(n,"s0","broadcastArgs","int32"),r=E(e,"s1","broadcastArgs","int32");if(t.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${t.rank}`);if(r.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const s={s0:t,s1:r};return U.runKernel(Nh,s)}const v3=L({broadcastArgs_:w3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $3(n,e){let t=E(n,"broadcastTo","x");const r=t.shape;if(jt(e),e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){const c=t.shape.slice();for(;c.length<e.length;)c.unshift(1);t=Z(t,c)}const s=t.shape,o=Array.from(e);for(let c=e.length-1;c>=0;c--)if(s[c]===e[c])o[c]=1;else if(t.shape[c]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${e}].`);if(o.map((c,l)=>c>1?l:-1).filter(c=>c>=0).length===0)return ir(t);const i={x:t},u={reps:o};return U.runKernel(ju,i,u)}const mo=L({broadcastTo_:$3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C3(n){const t={x:E(n,"x","ceil","float32")};return U.runKernel(Eh,t)}const S3=L({ceil_:C3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oo(n,e,t){jt(n),t=t||ko(e);const r={shape:n,value:e,dtype:t};return U.runKernel(sd,{},r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T3(n,e,t){const r=E(n,"x","clipByValue");if(_(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`),e===t)return Oo(r.shape,e,r.dtype);const s={x:r},o={clipValueMin:e,clipValueMax:t};return U.runKernel(Ih,s,o)}const Af=L({clipByValue_:T3});function N3(n){return ht(n,0)}const E3=L({concat1d_:N3});function I3(n,e){return ht(n,e)}const k3=L({concat2d_:I3});function R3(n,e){return ht(n,e)}const _3=L({concat3d_:R3});function A3(n,e){return ht(n,e)}const O3=L({concat4d_:A3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D3(n,e,t,r,s="NHWC",o=[1,1],a){const i=E(n,"x","conv2d","float32"),u=E(e,"filter","conv2d","float32");let c=i,l=!1;i.rank===3&&(l=!0,c=Z(i,[1,i.shape[0],i.shape[1],i.shape[2]])),_(c.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),_(u.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),sn("conv2d",r,a);const h=s==="NHWC"?c.shape[3]:c.shape[1];_(h===u.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${u.shape[2]}.`),_(Pt(t,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),_(Hr(o),()=>"Error in conv2D: Dilated rates should be larger than 0."),_(Hr(t),()=>"Error in conv2D: Strides should be larger than 0.");const d={x:c,filter:u},p={strides:t,pad:r,dataFormat:s,dilations:o,dimRoundingMode:a},f=U.runKernel(Ah,d,p);return l?Z(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Ya=L({conv2d_:D3});function F3(n,e,t,r,s="NWC",o=1,a){const i=E(n,"x","conv1d"),u=E(e,"filter","conv1d");let c=i,l=!1;i.rank===2&&(l=!0,c=Z(i,[1,i.shape[0],i.shape[1]])),_(c.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),_(u.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),sn("conv1d",r,a),_(c.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${u.shape[1]}.`),_(Pt(t,o),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${o}'`),_(Hr(o),()=>"Error in conv1D: Dilated rates should be larger than 0."),_(Hr(t),()=>"Error in conv1D: Stride should be larger than 0."),_(s==="NWC",()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`);const h=Z(u,[1,u.shape[0],u.shape[1],u.shape[2]]),d=Z(c,[c.shape[0],1,c.shape[1],c.shape[2]]),y=Ya(d,h,[1,t],r,"NHWC",[1,o],a);return l?Z(y,[y.shape[2],y.shape[3]]):Z(y,[y.shape[0],y.shape[2],y.shape[3]])}const P3=L({conv1d_:F3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L3(n,e,t,r,s,o="NHWC",a){_(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let i=n,u=e,c=!1;e.rank===3&&(c=!0,u=Z(e,[1,e.shape[0],e.shape[1],e.shape[2]]),i=[1,n[0],n[1],n[2]]),_(i.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),_(u.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),_(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);const l=o==="NHWC"?i[3]:i[1],h=o==="NHWC"?u.shape[3]:u.shape[1];_(l===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${l}) must match input depth for filter ${t.shape[2]}.`),_(h===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${t.shape[3]}.`),sn("conv2dDerInput",s,a);const d={dy:u,filter:t},p={strides:r,pad:s,dataFormat:o,dimRoundingMode:a,inputShape:i},f=U.runKernel(Dh,d,p);return c?Z(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Of=L({conv2DBackpropInput_:L3});function B3(n,e,t,r,s,o){const a=E(n,"x","conv2dTranspose"),i=E(e,"filter","conv2dTranspose");return Of(t,a,i,r,s,"NHWC",o)}const V3=L({conv2dTranspose_:B3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M3(n,e,t,r,s="NDHWC",o=[1,1,1]){const a=E(n,"x","conv3d"),i=E(e,"filter","conv3d");let u=a,c=!1;a.rank===4&&(c=!0,u=Z(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),_(u.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),_(i.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),_(u.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${i.shape[3]}.`),_(Pt(t,o),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),_(s==="NDHWC",()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`),_(Hr(o),()=>"Error in conv3D: Dilated rates should be larger than 0."),_(Hr(t),()=>"Error in conv3D: Strides should be larger than 0.");const l={x:u,filter:i},h={strides:t,pad:r,dataFormat:s,dilations:o},d=U.runKernel(Fh,l,h);return c?Z(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const U3=L({conv3d_:M3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W3(n,e,t,r,s){_(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let o=n,a=e,i=!1;e.rank===4&&(i=!0,a=Z(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),o=[1,n[0],n[1],n[2],n[3]]);const u=o[4],c=a.shape[4];_(o.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${o.length}.`),_(a.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`),_(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),_(u===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${t.shape[3]}.`),_(c===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${t.shape[4]}.`);const l={dy:a,filter:t},h={pad:s,strides:r,inputShape:o},d=U.runKernel(Ph,l,h);return i?Z(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const z3=L({conv3DBackpropInput_:W3});function G3(n,e,t,r,s){const o=E(n,"x","conv3dTranspose"),a=E(e,"filter","conv3dTranspose");return z3(t,o,a,r,s)}const j3=L({conv3dTranspose_:G3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H3(n){const t={x:E(n,"x","cos","float32")};return U.runKernel(Lh,t)}const K3=L({cos_:H3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X3(n){const t={x:E(n,"x","cosh","float32")};return U.runKernel(Bh,t)}const q3=L({cosh_:X3});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y3(n,e=0,t=!1,r=!1){const o={x:E(n,"x","cumprod")},a={axis:e,exclusive:t,reverse:r};return U.runKernel(Vh,o,a)}const Q3=L({cumprod_:Y3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z3(n,e=0,t=!1,r=!1){const o={x:E(n,"x","cumsum")},a={axis:e,exclusive:t,reverse:r};return U.runKernel(Mh,o,a)}const J3=L({cumsum_:Z3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ey(n,e,t,r=!1){const s=E(n,"x","denseBincount"),o=E(e,"weights","denseBincount");_(s.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`),_(s.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`),_(t>=0,()=>`size must be non-negative, but got ${t}.`),_(o.size===s.size||o.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${o.shape}.`);const a={x:s,weights:o},i={size:t,binaryOutput:r};return U.runKernel(Wh,a,i)}const ty=L({denseBincount_:ey});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ny(n,e,t="NHWC"){const r=E(n,"x","depthToSpace","float32"),s=t==="NHWC"?r.shape[1]:r.shape[2],o=t==="NHWC"?r.shape[2]:r.shape[3],a=t==="NHWC"?r.shape[3]:r.shape[1];_(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),_(s*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${e}  for depthToSpace with input shape
    ${r.shape}`),_(o*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${e} for depthToSpace with input shape
        ${r.shape}`),_(a%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${r.shape}`);const i={x:r},u={blockSize:e,dataFormat:t};return U.runKernel(zh,i,u)}const ry=L({depthToSpace_:ny});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sy(n,e,t,r,s="NHWC",o=[1,1],a){const i=E(n,"x","depthwiseConv2d","float32"),u=E(e,"filter","depthwiseConv2d","float32");let c=i,l=!1;i.rank===3&&(l=!0,c=Z(i,[1,i.shape[0],i.shape[1],i.shape[2]])),_(c.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),_(u.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`);const h=s==="NHWC"?c.shape[3]:c.shape[1];_(h===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${u.shape[2]}.`),sn("depthwiseConv2d",r,a);const d={x:c,filter:u},p={strides:t,pad:r,dataFormat:s,dilations:o,dimRoundingMode:a},f=U.runKernel(Gh,d,p);return l?Z(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Yu=L({depthwiseConv2d_:sy});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oy(n){const t={x:E(n,"x","diag")};return U.runKernel(Kh,t)}const ay=L({diag_:oy});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iy(n,e,t,r,s=[1,1],o="NHWC"){const a=E(n,"x","dilation2d"),i=E(e,"filter","dilation2d");_(a.rank===3||a.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`),_(i.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),_(o==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${o}`);let u=a,c=!1;a.rank===3&&(u=Z(a,[1,a.shape[0],a.shape[1],a.shape[2]]),c=!0),_(u.shape[3]===i.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${u.shape[3]} vs ${i.shape[2]}`);const l={x:u,filter:i},h={strides:t,pad:r,dilations:s},d=U.runKernel(Xh,l,h);return c?Z(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const uy=L({dilation2d_:iy});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aa(n,e){const t=n.length,r=[];for(let s=0;s<t;s++){const o=t-1-s,a=n[o]||1;(e[e.length-1-s]||1)>1&&a===1&&r.unshift(o)}return r}function Df(n,e){const t=[];for(let r=0;r<e.length;r++){const s=n[n.length-r-1],o=e.length-r-1,a=e[o];(s==null||s===1&&a>1)&&t.unshift(o)}return t}function De(n,e){const t=Math.max(n.length,e.length),r=new Array(t);for(let s=0;s<t;s++){let o=n[n.length-s-1];o==null&&(o=1);let a=e[e.length-s-1];if(a==null&&(a=1),o===1)r[t-s-1]=a;else if(a===1)r[t-s-1]=o;else if(o!==a){const i=`Operands could not be broadcast together with shapes ${n} and ${e}.`;throw Error(i)}else r[t-s-1]=o}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cy(n,e){let t=E(n,"a","equal","string_or_numeric"),r=E(e,"b","equal","string_or_numeric");[t,r]=Ze(t,r),De(t.shape,r.shape);const s={a:t,b:r};return U.runKernel(Jh,s)}const Ff=L({equal_:cy});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ly(n,e,t){const r=E(e,"a","where"),s=E(t,"b","where"),o=E(n,"condition","where","bool"),a=De(De(o.shape,r.shape),s.shape),i=mo(o,a),u=mo(r,a),c=mo(s,a),l={condition:i,t:u,e:c};return U.runKernel(mp,l)}const ur=L({where_:ly});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hy(n){const t={x:E(n,"x","zerosLike")};return U.runKernel(Kp,t)}const zt=L({zerosLike_:hy});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dy(n,e){let t=E(n,"a","div"),r=E(e,"b","div");[t,r]=Ze(t,r);const s=ke(t,r),o=zt(s),a=Ff(r,o);return ur(a,o,s)}const py=L({divNoNan_:dy});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fy(n,e){const t=E(n,"t1","dot"),r=E(e,"t2","dot");_((t.rank===1||t.rank===2)&&(r.rank===1||r.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${r.rank}.`);const s=t.rank===1?t.size:t.shape[1],o=r.rank===1?r.size:r.shape[0];if(_(s===o,()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${o}.`),t.rank===1&&r.rank===1){const a=Z(t,[1,-1]),i=Z(r,[-1,1]),u=Le(a,i);return Z(u,[])}else if(t.rank===1&&r.rank===2){const a=Z(t,[1,-1]),i=Z(r,[r.shape[0],r.shape[1]]),u=Le(a,i);return Z(u,[u.size])}else if(t.rank===2&&r.rank===1){const a=Z(r,[-1,1]),i=Le(t,a);return Z(i,[i.size])}else{const a=Z(r,[r.shape[0],r.shape[1]]);return Le(t,a)}}const my=L({dot_:fy});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gy(n,...e){const t=e.map((s,o)=>E(s,`tensors${o}`,"einsum")),r={equation:n};return U.runKernel(Yh,t,r)}const xs=L({einsum_:gy});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yy(n){const t={x:E(n,"x","elu","float32")};return U.runKernel(Qh,t)}const Pf=L({elu_:yy});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xy(n,e){const t=E(n,"x","ensureShape","string_or_numeric");if(!Fg(t.shape,e))throw new Error(`EnsureShape: Shape of tensor ${t.shape} is not compatible with expected shape ${e}`);return n}const by=L({ensureShape_:xy});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wy(n){let e=E(n,"x","erf");_(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=je(e,"float32"));const t={x:e};return U.runKernel(Zh,t)}const vy=L({erf_:wy});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qu(n,e){for(let t=0;t<n.length;++t)if(n[n.length-t-1]!==e-1-t)return!1;return!0}function Lf(n,e,t){const r=n.length+e.length,s=[];let o=0,a=0;for(let i=0;i<r;i++)t.indexOf(i)===-1?s.push(n[o++]):s.push(e[a++]);return s}function Rn(n,e){const t=[],r=n.length;for(let o=0;o<r;o++)e.indexOf(o)===-1&&t.push(n[o]);const s=e.map(o=>n[o]);return[t,s]}function Kt(n,e){const t=e.map(r=>1);return Lf(n,t,e)}function wn(n,e,t){_(Qu(e,t),()=>`${n} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function on(n,e){if(Qu(n,e))return null;const t=[];for(let r=0;r<e;++r)n.indexOf(r)===-1&&t.push(r);return n.forEach(r=>t.push(r)),t}function Zu(n){return n.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function an(n,e){const t=[];for(let r=e-n;r<e;++r)t.push(r);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $y(n,e=null,t=!1){const s={x:E(n,"x","max")},o={reductionIndices:e,keepDims:t};return U.runKernel(Id,s,o)}const $s=L({max_:$y});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cy(n,e=null,t=!1){const s={x:E(n,"x","min")},o={axis:e,keepDims:t};return U.runKernel(Dd,s,o)}const mu=L({min_:Cy});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sy(n,e){let t=E(n,"base","pow"),r=E(e,"exp","pow");[t,r]=Ze(t,r);const s={a:t,b:r};return U.runKernel(qd,s)}const wo=L({pow_:Sy});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Re(n,e){if((rn(n)&&e!=="string"||Array.isArray(n))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&rn(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return yr(n,[],[],e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ty(n){const t={x:E(n,"x","sqrt","float32")};return U.runKernel(Cp,t)}const Vn=L({sqrt_:Ty});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ny(n){const e=E(n,"x","square"),t={};return U.runKernel("Square",{x:e},t)}const gn=L({square_:Ny});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ey(n,e=null,t=!1){let r=E(n,"x","sum");r.dtype==="bool"&&(r=je(r,"int32"));const s={x:r},o={axis:e,keepDims:t};return U.runKernel(Sp,s,o)}const Ge=L({sum_:Ey});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iy(n,e="euclidean",t=null,r=!1){n=E(n,"x","norm");const s=Bf(n,e,t);let o=s.shape;if(r){const a=at(t,n.shape);o=Kt(s.shape,a)}return Z(s,o)}function Bf(n,e,t=null){if(n.rank===0)return Ut(n);if(n.rank!==1&&t===null)return Bf(Z(n,[-1]),e,t);if(n.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return Ge(Ut(n),t);if(e===1/0)return $s(Ut(n),t);if(e===-1/0)return mu(Ut(n),t);if(e==="euclidean"||e===2)return Vn(Ge(wo(Ut(n),Re(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return $s(Ge(Ut(n),t[0]),t[1]-1);if(e===1/0)return $s(Ge(Ut(n),t[1]),t[0]);if(e===-1/0)return mu(Ge(Ut(n),t[1]),t[0]);if(e==="fro"||e==="euclidean")return Vn(Ge(gn(n),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}const Qa=L({norm_:Iy});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ky(n,e=null,t=!1){return Qa(n,"euclidean",e,t)}const Ry=L({euclideanNorm_:ky});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _y(n){const t={x:E(n,"x","exp")};return U.runKernel(ed,t)}const Mn=L({exp_:_y});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ay(n,e=0){const t=E(n,"x","expandDims","string_or_numeric");_(e<=t.rank,()=>"Axis must be <= rank of the tensor");const r={input:t},s={dim:e};return U.runKernel(td,r,s)}const tn=L({expandDims_:Ay});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oy(n){const t={x:E(n,"x","expm1")};return U.runKernel(nd,t)}const Dy=L({expm1_:Oy});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fy(n,e){const t=E(n,"x","tile","string_or_numeric");_(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);const r={x:t},s={reps:e};return U.runKernel(ju,r,s)}const go=L({tile_:Fy});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Py(n,e,t,r="float32"){e==null&&(e=n);const s=qe([n,e],r),o=n<=e?n:e;for(let i=0;i<o;++i)s.set(1,i,i);const a=Z(s.toTensor(),[n,e]);if(t==null)return a;if(t.length===1)return go(tn(a,0),[t[0],1,1]);if(t.length===2)return go(tn(tn(a,0),0),[t[0],t[1],1,1]);if(t.length===3)return go(tn(tn(tn(a,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}const Vf=L({eye_:Py});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ly(n){const t={x:E(n,"x","floor","float32")};return U.runKernel(ad,t)}const Mf=L({floor_:Ly});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function By(n,e,t=0,r=0){const s=E(n,"x","gather"),o=E(e,"indices","gather","int32"),a={x:s,indices:o},i={axis:t,batchDims:r};return U.runKernel(cd,a,i)}const Uf=L({gather_:By});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vy(n,e){let t=E(n,"a","greater","string_or_numeric"),r=E(e,"b","greater","string_or_numeric");[t,r]=Ze(t,r),De(t.shape,r.shape);const s={a:t,b:r};return U.runKernel(hd,s)}const Za=L({greater_:Vy});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function My(n,e){let t=E(n,"a","greaterEqual","string_or_numeric"),r=E(e,"b","greaterEqual","string_or_numeric");[t,r]=Ze(t,r),De(t.shape,r.shape);const s={a:t,b:r};return U.runKernel(dd,s)}const Wf=L({greaterEqual_:My});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uy(n){const t={input:E(n,"input","imag")};return U.runKernel(fd,t)}const Ja=L({imag_:Uy});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wy(n){const t={x:E(n,"x","isFinite")};return U.runKernel(md,t)}const zy=L({isFinite_:Wy});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gy(n){const t={x:E(n,"x","isInf")};return U.runKernel(gd,t)}const jy=L({isInf_:Gy});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hy(n){const t={x:E(n,"x","isNaN")};return U.runKernel(yd,t)}const Ky=L({isNaN_:Hy});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xy(n,e=.2){const r={x:E(n,"x","leakyRelu")},s={alpha:e};return U.runKernel(xd,r,s)}const zf=L({leakyRelu_:Xy});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qy(n,e){let t=E(n,"a","less","string_or_numeric"),r=E(e,"b","less","string_or_numeric");[t,r]=Ze(t,r),De(t.shape,r.shape);const s={a:t,b:r};return U.runKernel(bd,s)}const gu=L({less_:qy});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yy(n,e){let t=E(n,"a","lessEqual","string_or_numeric"),r=E(e,"b","lessEqual","string_or_numeric");[t,r]=Ze(t,r),De(t.shape,r.shape);const s={a:t,b:r};return U.runKernel(wd,s)}const Ju=L({lessEqual_:Yy});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qy(n,e,t){if(t<=0)throw new Error("The number of values should be positive.");const r={start:n,stop:e,num:t};return U.runKernel(vd,{},r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zy(n,e=5,t=1,r=1,s=.5){const o=E(n,"x","localResponseNormalization");_(o.rank===4||o.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${o.rank}.`),_(Cs(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let a=o,i=!1;o.rank===3&&(i=!0,a=Z(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const u={x:a},c={depthRadius:e,bias:t,alpha:r,beta:s},l=U.runKernel(Ed,u,c);return i?Z(l,[l.shape[1],l.shape[2],l.shape[3]]):l}const Jy=L({localResponseNormalization_:Zy});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e4(n){const t={x:E(n,"x","log","float32")};return U.runKernel($d,t)}const vo=L({log_:e4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t4(n){const t={x:E(n,"x","log1p")};return U.runKernel(Cd,t)}const Gf=L({log1p_:t4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n4(n,e){_(qi(n),()=>"The f passed in variableGrads(f) must be a function"),_(e==null||Array.isArray(e)&&e.every(c=>c instanceof Ra),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const t=e!=null;if(!t){e=[];for(const c in U.registeredVariables)e.push(U.registeredVariables[c])}const r=t?e.filter(c=>!c.trainable):null,s=e.length;e=e.filter(c=>c.trainable),_(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`);const o=!0,{value:a,grads:i}=U.gradients(n,e,null,o);_(i.some(c=>c!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),_(a.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);const u={};return e.forEach((c,l)=>{i[l]!=null&&(u[c.name]=i[l])}),r!=null&&r.forEach(c=>u[c.name]=null),{value:a,grads:u}}function Un(n){return U.customGrad(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r4(n){const t={x:E(n,"x","neg")};return U.runKernel(Md,t)}const In=L({neg_:r4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s4(n){const t={x:E(n,"x","softplus")};return U.runKernel($p,t)}const jf=L({softplus_:s4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o4(n){const e=E(n,"x","logSigmoid");return Un(r=>({value:In(jf(In(r))),gradFunc:a=>oe(a,Mr(In(r)))}))(e)}const a4=L({logSigmoid_:o4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i4(n,e){let t=E(n,"a","sub"),r=E(e,"b","sub");[t,r]=Ze(t,r);const s={a:t,b:r};return U.runKernel(Vp,s)}const Te=L({sub_:i4});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u4(n,e=-1){const t=E(n,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return Un((s,o)=>{const i=$s(s,e,!0),u=Te(s,i),c=Te(je(u,"float32"),vo(Ge(Mn(u),e,!0)));return o([c]),{value:c,gradFunc:(h,d)=>{const[p]=d,f=!0,x=Mn(p);return Te(h,oe(Ge(h,e,f),x))}}})(t)}const c4=L({logSoftmax_:u4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l4(n,e=null,t=!1){const r=E(n,"x","logSumExp"),s=at(e,r.shape),o=$s(r,s,!0),a=Te(r,o),i=Mn(a),u=Ge(i,s),c=vo(u),l=me(Z(o,c.shape),c);if(t){const h=Kt(l.shape,s);return Z(l,h)}return l}const Hf=L({logSumExp_:l4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h4(n,e){const t=E(n,"a","logicalAnd","bool"),r=E(e,"b","logicalAnd","bool");De(t.shape,r.shape);const s={a:t,b:r};return U.runKernel(Sd,s)}const Oa=L({logicalAnd_:h4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d4(n){const t={x:E(n,"x","logicalNot","bool")};return U.runKernel(Td,t)}const Kf=L({logicalNot_:d4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p4(n,e){const t=E(n,"a","logicalOr","bool"),r=E(e,"b","logicalOr","bool");De(t.shape,r.shape);const s={a:t,b:r};return U.runKernel(Nd,s)}const Xf=L({logicalOr_:p4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f4(n,e){const t=E(n,"a","logicalXor","bool"),r=E(e,"b","logicalXor","bool");return De(t.shape,r.shape),Oa(Xf(n,e),Kf(Oa(n,e)))}const m4=L({logicalXor_:f4});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oa=2147483648;function g4(n,e,t="left"){const r=E(n,"sortedSequence","searchSorted"),s=E(e,"values","searchSorted"),o=r.shape[r.shape.length-1],a=s.shape[s.shape.length-1],i=Z(r,[-1,o]),u=Z(s,[-1,a]);if(i.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(i.shape[0]!==u.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(ne(u.shape)>=oa)throw new Error(`values tensor size must less than ${oa}`);if(i.shape[1]>=oa)throw new Error(`trailing dim_size must less than ${oa} for int32 output type, was ${i.shape[1]}`);const c={sortedSequence:i,values:u},l={side:t};return U.runKernel(fp,c,l)}const ec=L({searchSorted_:g4});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y4(n,e){return ec(n,e,"left")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x4(n,e,t,r,s){const o=E(n,"x","maxPool"),a=1;let i=o,u=!1;o.rank===3&&(u=!0,i=Z(o,[1,o.shape[0],o.shape[1],o.shape[2]])),_(i.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),_(Pt(t,a),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`),sn("maxPool",r,s);const c={x:i},l={filterSize:e,strides:t,pad:r,dimRoundingMode:s},h=U.runKernel(Rd,c,l);return u?Z(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const qf=L({maxPool_:x4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b4(n,e=[1,1,1],t,r,s,o="NDHWC"){const a=E(n,"x","maxPool3d");let i=a,u=!1;a.rank===4&&(u=!0,i=Z(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),_(i.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),_(o==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),sn("maxPool3d",r,s);const c={x:i},l={filterSize:e,strides:t,pad:r,dimRoundingMode:s,dataFormat:o},h=U.runKernel(_d,c,l);return u?Z(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const w4=L({maxPool3d_:b4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v4(n,e,t,r,s=!1){const a={x:E(n,"x","maxPoolWithArgmax")},i={filterSize:e,strides:t,pad:r,includeBatchInIndex:s},u=U.runKernel(Ad,a,i);return{result:u[0],indexes:u[1]}}const $4=L({maxPoolWithArgmax_:v4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C4(n,e){let t=E(n,"a","maximum"),r=E(e,"b","maximum");[t,r]=Ze(t,r),t.dtype==="bool"&&(t=je(t,"int32"),r=je(r,"int32")),De(t.shape,r.shape);const s={a:t,b:r};return U.runKernel(kd,s)}const Yf=L({maximum_:C4});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S4(n,e=null,t=!1){const s={x:E(n,"x","mean")},o={axis:e,keepDims:t};return U.runKernel(Od,s,o)}const Da=L({mean_:S4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kr(n,e="float32"){if(jt(n),e==="complex64"){const r=Kr(n,"float32"),s=Kr(n,"float32");return dr(r,s)}const t=hr(ne(n),e);return U.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Br(n,e="float32"){if(jt(n),e==="complex64"){const r=Br(n,"float32"),s=Kr(n,"float32");return dr(r,s)}const t=sh(ne(n),e);return U.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T4(n,e,{indexing:t="xy"}={}){if(t!=="xy"&&t!=="ij")throw new TypeError(`${t} is not a valid third argument to meshgrid`);if(n===void 0)return[];let r=E(n,"x","meshgrid",n instanceof Qe?n.dtype:"float32");if(e===void 0)return[r];let s=E(e,"y","meshgrid",e instanceof Qe?e.dtype:"float32");const o=ne(r.shape),a=ne(s.shape);return t==="xy"?(r=Z(r,[1,-1]),s=Z(s,[-1,1]),[Le(Br([a,1],r.dtype),r),Le(s,Br([1,o],s.dtype))]):(r=Z(r,[-1,1]),s=Z(s,[1,-1]),[Le(r,Br([1,a],r.dtype)),Le(Br([o,1],s.dtype),s)])}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N4(n,e){let t=E(n,"a","minimum"),r=E(e,"b","minimum");[t,r]=Ze(t,r),t.dtype==="bool"&&(t=je(t,"int32"),r=je(r,"int32")),De(t.shape,r.shape);const s={a:t,b:r};return U.runKernel(Fd,s)}const Fa=L({minimum_:N4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E4(n,e,t){_(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);const r=E(n,"x","mirrorPad");if(r.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");_(e.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${e.length}.`);const s=t==="reflect"?1:0;for(let i=0;i<r.rank;i++)_(e[i].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),_(e[i][0]>=0&&e[i][0]<=r.shape[i]-s&&e[i][1]>=0&&e[i][1]<=r.shape[i]-s,()=>`Padding in dimension ${i} cannot be greater than or equal to ${r.shape[i]-s} or less than 0 for input of shape ${r.shape}`);const o={paddings:e,mode:t},a={x:r};return U.runKernel(Pd,a,o)}const I4=L({mirrorPad_:E4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k4(n,e){let t=E(n,"a","mod"),r=E(e,"b","mod");[t,r]=Ze(t,r);const s={a:t,b:r};return U.runKernel(Ld,s)}const R4=L({mod_:k4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _4(n,e=null,t=!1){n=E(n,"x","moments");const r=at(e,n.shape),s=Da(n,r,t);let o=s.shape;t||(o=Kt(s.shape,r));const a=gn(Te(je(n,"float32"),Z(s,o))),i=Da(a,r,t);return{mean:s,variance:i}}const A4=L({moments_:_4});function O4(n,e,t,r){const s=E(e,"data","multiRNNCell"),o=_a(t,"c","multiRNNCell"),a=_a(r,"h","multiRNNCell");let i=s;const u=[];for(let h=0;h<n.length;h++){const d=n[h](i,o[h],a[h]);u.push(d[0]),u.push(d[1]),i=d[1]}const c=[],l=[];for(let h=0;h<u.length;h+=2)c.push(u[h]),l.push(u[h+1]);return[c,l]}const D4=L({multiRNNCell_:O4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F4(n,e,t,r=!1){const s=E(n,"logits","multinomial"),o=s.size,a=s.rank;if(o<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${o}.`);if(a>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${a}`);t=t||Math.random();const u={logits:a===1?Z(s,[1,-1]):s},c={numSamples:e,seed:t,normalized:r},l=U.runKernel(Bd,u,c);return a===1?Z(l,[l.size]):l}const P4=L({multinomial_:F4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L4(n,e){let t=E(n,"a","notEqual","string_or_numeric"),r=E(e,"b","notEqual","string_or_numeric");[t,r]=Ze(t,r),De(t.shape,r.shape);const s={a:t,b:r};return U.runKernel(Ud,s)}const Qf=L({notEqual_:L4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B4(n,e,t=1,r=0,s="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const a={indices:E(n,"indices","oneHot","int32")},i={dtype:s,depth:e,onValue:t,offValue:r};return U.runKernel(Hd,a,i)}const V4=L({oneHot_:B4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M4(n){const t={x:E(n,"x","onesLike")};return U.runKernel(jd,t)}const U4=L({onesLike_:M4});function W4(n,e){const t=E(n,"v1","outerProduct"),r=E(e,"v2","outerProduct");_(t.rank===1&&r.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${t.rank} and ${r.rank}.`);const s=Z(t,[-1,1]),o=Z(r,[1,-1]);return Le(s,o)}const z4=L({outerProduct_:W4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G4(n,e,t=0){const r=E(n,"x","pad");if(r.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:e,constantValue:t},o={x:r};return U.runKernel(Xd,o,s)}const Do=L({pad_:G4});function j4(n,e,t=0){return _(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),Do(n,[e],t)}const H4=L({pad1d_:j4});function K4(n,e,t=0){return _(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Do(n,e,t)}const X4=L({pad2d_:K4});function q4(n,e,t=0){return _(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Do(n,e,t)}const Y4=L({pad3d_:q4});function Q4(n,e,t=0){return _(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Do(n,e,t)}const Z4=L({pad4d_:Q4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J4(n,e,t){const r=E(n,"x","spaceToBatchND");_(r.rank>=1+e.length,()=>`input rank ${r.rank} should be > than [blockShape] ${e.length}`),_(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),_(r.shape.reduce((a,i,u)=>u>0&&u<=e.length?a&&(i+t[u-1][0]+t[u-1][1])%e[u-1]===0:a,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);const s={x:r},o={blockShape:e,paddings:t};return U.runKernel(Tp,s,o)}const Zf=L({spaceToBatchND_:J4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ex(n,e,t,r,s,o,a){s==null&&(s=[1,1]),o==null&&(o=1),r===0&&(r="valid");const i=E(n,"x","maxPool");let u=i,c=!1;i.rank===3&&(c=!0,u=Z(i,[1,i.shape[0],i.shape[1],i.shape[2]])),_(Pt(o,s),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${o} and dilations '${s}'`);const l=Jr(u.shape,e,o,s,r),h=[l.dilationHeight,l.dilationWidth];let d;r==="same"?d=nx([l.filterHeight,l.filterWidth],h):d=[[0,0],[0,0]];const p=h[0]===1&&h[1]===1,[f,x]=tx([l.inHeight,l.inWidth],h,d),y=p?r:"valid",b=p?u:Zf(u,h,f),I=(t==="avg"?()=>kf(b,e,o,y,a):()=>qf(b,e,o,y,a))(),k=p?I:Rf(I,h,x);return c?Z(k,[k.shape[1],k.shape[2],k.shape[3]]):k}function tx(n,e,t){const r=t.map(l=>l[0]),s=t.map(l=>l[1]),o=n.concat(r,s),a=e.map((l,h)=>(l-o[h]%l)%l),i=s.map((l,h)=>l+a[h]),u=e.map((l,h)=>[r[h],i[h]]),c=e.map((l,h)=>[0,a[h]]);return[u,c]}function nx(n,e){const r=n.map((a,i)=>a+(a-1)*(e[i]-1)).map(a=>a-1),s=r.map(a=>Math.floor(a/2)),o=r.map((a,i)=>a-s[i]);return r.map((a,i)=>[s[i],o[i]])}const rx=L({pool_:ex});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sx(n,e){const t=E(n,"x","prelu"),r=E(e,"alpha","prelu"),s={x:t,alpha:r};return U.runKernel(Yd,s)}const Jf=L({prelu_:sx});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ox(n,e=null,t=!1){let r=E(n,"x","prod");r.dtype==="bool"&&(r=je(r,"int32"));const s={x:r},o={axis:e,keepDims:t};return U.runKernel(Qd,s,o)}const ax=L({prod_:ox});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ix(n,e,t,r){const s=n.map((l,h)=>E(l,`tensors${h}`,"raggedGather","int32")),o=E(e,"paramsDenseValues","raggedGather"),a=E(t,"indices","raggedGather","int32"),i={paramsNestedSplits:s,paramsDenseValues:o,indices:a},u={outputRaggedRank:r},c=U.runKernel(Zd,i,u);return{outputNestedSplits:c.slice(0,c.length-1),outputDenseValues:c[c.length-1]}}const ux=L({raggedGather_:ix});/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cx(n,e,t){const r=E(n,"starts","raggedRange"),s=E(e,"limits","raggedRange",r.dtype),o=E(t,"deltas","raggedRange",r.dtype),a={starts:r,limits:s,deltas:o},i=U.runKernel(Jd,a);return{rtNestedSplits:i[0],rtDenseValues:i[1]}}const lx=L({raggedRange_:cx});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hx(n,e,t,r,s){const o=E(n,"shape","raggedTensorToTensor","int32"),a=E(e,"values","raggedTensorToTensor"),i=E(t,"defaultValue","raggedTensorToTensor",a.dtype),u=r.map((h,d)=>E(h,`tensors${d}`,"raggedTensorToTensor","int32")),c={shape:o,values:a,defaultValue:i,rowPartitionTensors:u},l={rowPartitionTypes:s};return U.runKernel(ep,c,l)}const dx=L({raggedTensorToTensor_:hx});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function px(n,e,t){jt(n);const r=ne(n);let s=null;if(t==null||t==="float32")s=new Float32Array(r);else if(t==="int32")s=new Int32Array(r);else if(t==="bool")s=new Uint8Array(r);else throw new Error(`Unknown data type ${t}`);for(let o=0;o<r;o++)s[o]=e();return U.makeTensor(s,n,t)}const fx=L({rand_:px});var xa={exports:{}},mx=xa.exports,zc;function gx(){return zc||(zc=1,function(n){(function(e,t,r){function s(u){var c=this,l=i();c.next=function(){var h=2091639*c.s0+c.c*23283064365386963e-26;return c.s0=c.s1,c.s1=c.s2,c.s2=h-(c.c=h|0)},c.c=1,c.s0=l(" "),c.s1=l(" "),c.s2=l(" "),c.s0-=l(u),c.s0<0&&(c.s0+=1),c.s1-=l(u),c.s1<0&&(c.s1+=1),c.s2-=l(u),c.s2<0&&(c.s2+=1),l=null}function o(u,c){return c.c=u.c,c.s0=u.s0,c.s1=u.s1,c.s2=u.s2,c}function a(u,c){var l=new s(u),h=c&&c.state,d=l.next;return d.int32=function(){return l.next()*4294967296|0},d.double=function(){return d()+(d()*2097152|0)*11102230246251565e-32},d.quick=d,h&&(typeof h=="object"&&o(h,l),d.state=function(){return o(l,{})}),d}function i(){var u=4022871197,c=function(l){l=String(l);for(var h=0;h<l.length;h++){u+=l.charCodeAt(h);var d=.02519603282416938*u;u=d>>>0,d-=u,d*=u,u=d>>>0,d-=u,u+=d*4294967296}return(u>>>0)*23283064365386963e-26};return c}t&&t.exports?t.exports=a:this.alea=a})(mx,n)}(xa)),xa.exports}var ba={exports:{}},yx=ba.exports,Gc;function xx(){return Gc||(Gc=1,function(n){(function(e,t,r){function s(i){var u=this,c="";u.x=0,u.y=0,u.z=0,u.w=0,u.next=function(){var h=u.x^u.x<<11;return u.x=u.y,u.y=u.z,u.z=u.w,u.w^=u.w>>>19^h^h>>>8},i===(i|0)?u.x=i:c+=i;for(var l=0;l<c.length+64;l++)u.x^=c.charCodeAt(l)|0,u.next()}function o(i,u){return u.x=i.x,u.y=i.y,u.z=i.z,u.w=i.w,u}function a(i,u){var c=new s(i),l=u&&u.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,l&&(typeof l=="object"&&o(l,c),h.state=function(){return o(c,{})}),h}t&&t.exports?t.exports=a:this.xor128=a})(yx,n)}(ba)),ba.exports}var wa={exports:{}},bx=wa.exports,jc;function wx(){return jc||(jc=1,function(n){(function(e,t,r){function s(i){var u=this,c="";u.next=function(){var h=u.x^u.x>>>2;return u.x=u.y,u.y=u.z,u.z=u.w,u.w=u.v,(u.d=u.d+362437|0)+(u.v=u.v^u.v<<4^(h^h<<1))|0},u.x=0,u.y=0,u.z=0,u.w=0,u.v=0,i===(i|0)?u.x=i:c+=i;for(var l=0;l<c.length+64;l++)u.x^=c.charCodeAt(l)|0,l==c.length&&(u.d=u.x<<10^u.x>>>4),u.next()}function o(i,u){return u.x=i.x,u.y=i.y,u.z=i.z,u.w=i.w,u.v=i.v,u.d=i.d,u}function a(i,u){var c=new s(i),l=u&&u.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,l&&(typeof l=="object"&&o(l,c),h.state=function(){return o(c,{})}),h}t&&t.exports?t.exports=a:this.xorwow=a})(bx,n)}(wa)),wa.exports}var va={exports:{}},vx=va.exports,Hc;function $x(){return Hc||(Hc=1,function(n){(function(e,t,r){function s(i){var u=this;u.next=function(){var l=u.x,h=u.i,d,p;return d=l[h],d^=d>>>7,p=d^d<<24,d=l[h+1&7],p^=d^d>>>10,d=l[h+3&7],p^=d^d>>>3,d=l[h+4&7],p^=d^d<<7,d=l[h+7&7],d=d^d<<13,p^=d^d<<9,l[h]=p,u.i=h+1&7,p};function c(l,h){var d,p=[];if(h===(h|0))p[0]=h;else for(h=""+h,d=0;d<h.length;++d)p[d&7]=p[d&7]<<15^h.charCodeAt(d)+p[d+1&7]<<13;for(;p.length<8;)p.push(0);for(d=0;d<8&&p[d]===0;++d);for(d==8?p[7]=-1:p[d],l.x=p,l.i=0,d=256;d>0;--d)l.next()}c(u,i)}function o(i,u){return u.x=i.x.slice(),u.i=i.i,u}function a(i,u){i==null&&(i=+new Date);var c=new s(i),l=u&&u.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,l&&(l.x&&o(l,c),h.state=function(){return o(c,{})}),h}t&&t.exports?t.exports=a:this.xorshift7=a})(vx,n)}(va)),va.exports}var $a={exports:{}},Cx=$a.exports,Kc;function Sx(){return Kc||(Kc=1,function(n){(function(e,t,r){function s(i){var u=this;u.next=function(){var l=u.w,h=u.X,d=u.i,p,f;return u.w=l=l+1640531527|0,f=h[d+34&127],p=h[d=d+1&127],f^=f<<13,p^=p<<17,f^=f>>>15,p^=p>>>12,f=h[d]=f^p,u.i=d,f+(l^l>>>16)|0};function c(l,h){var d,p,f,x,y,b=[],S=128;for(h===(h|0)?(p=h,h=null):(h=h+"\0",p=0,S=Math.max(S,h.length)),f=0,x=-32;x<S;++x)h&&(p^=h.charCodeAt((x+32)%h.length)),x===0&&(y=p),p^=p<<10,p^=p>>>15,p^=p<<4,p^=p>>>13,x>=0&&(y=y+1640531527|0,d=b[x&127]^=p+y,f=d==0?f+1:0);for(f>=128&&(b[(h&&h.length||0)&127]=-1),f=127,x=4*128;x>0;--x)p=b[f+34&127],d=b[f=f+1&127],p^=p<<13,d^=d<<17,p^=p>>>15,d^=d>>>12,b[f]=p^d;l.w=y,l.X=b,l.i=f}c(u,i)}function o(i,u){return u.i=i.i,u.w=i.w,u.X=i.X.slice(),u}function a(i,u){i==null&&(i=+new Date);var c=new s(i),l=u&&u.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,l&&(l.X&&o(l,c),h.state=function(){return o(c,{})}),h}t&&t.exports?t.exports=a:this.xor4096=a})(Cx,n)}($a)),$a.exports}var Ca={exports:{}},Tx=Ca.exports,Xc;function Nx(){return Xc||(Xc=1,function(n){(function(e,t,r){function s(i){var u=this,c="";u.next=function(){var h=u.b,d=u.c,p=u.d,f=u.a;return h=h<<25^h>>>7^d,d=d-p|0,p=p<<24^p>>>8^f,f=f-h|0,u.b=h=h<<20^h>>>12^d,u.c=d=d-p|0,u.d=p<<16^d>>>16^f,u.a=f-h|0},u.a=0,u.b=0,u.c=-1640531527,u.d=1367130551,i===Math.floor(i)?(u.a=i/4294967296|0,u.b=i|0):c+=i;for(var l=0;l<c.length+20;l++)u.b^=c.charCodeAt(l)|0,u.next()}function o(i,u){return u.a=i.a,u.b=i.b,u.c=i.c,u.d=i.d,u}function a(i,u){var c=new s(i),l=u&&u.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,l&&(typeof l=="object"&&o(l,c),h.state=function(){return o(c,{})}),h}t&&t.exports?t.exports=a:this.tychei=a})(Tx,n)}(Ca)),Ca.exports}var Sa={exports:{}};const Ex={},Ix=Object.freeze(Object.defineProperty({__proto__:null,default:Ex},Symbol.toStringTag,{value:"Module"})),kx=Ig(Ix);var Rx=Sa.exports,qc;function _x(){return qc||(qc=1,function(n){(function(e,t,r){var s=256,o=6,a=52,i="random",u=r.pow(s,o),c=r.pow(2,a),l=c*2,h=s-1,d;function p(k,P,W){var H=[];P=P==!0?{entropy:!0}:P||{};var G=b(y(P.entropy?[k,I(t)]:k??S(),3),H),B=new f(H),V=function(){for(var R=B.g(o),q=u,te=0;R<c;)R=(R+te)*s,q*=s,te=B.g(1);for(;R>=l;)R/=2,q/=2,te>>>=1;return(R+te)/q};return V.int32=function(){return B.g(4)|0},V.quick=function(){return B.g(4)/4294967296},V.double=V,b(I(B.S),t),(P.pass||W||function(R,q,te,he){return he&&(he.S&&x(he,B),R.state=function(){return x(B,{})}),te?(r[i]=R,q):R})(V,G,"global"in P?P.global:this==r,P.state)}function f(k){var P,W=k.length,H=this,G=0,B=H.i=H.j=0,V=H.S=[];for(W||(k=[W++]);G<s;)V[G]=G++;for(G=0;G<s;G++)V[G]=V[B=h&B+k[G%W]+(P=V[G])],V[B]=P;(H.g=function(R){for(var q,te=0,he=H.i,de=H.j,ge=H.S;R--;)q=ge[he=h&he+1],te=te*s+ge[h&(ge[he]=ge[de=h&de+q])+(ge[de]=q)];return H.i=he,H.j=de,te})(s)}function x(k,P){return P.i=k.i,P.j=k.j,P.S=k.S.slice(),P}function y(k,P){var W=[],H=typeof k,G;if(P&&H=="object")for(G in k)try{W.push(y(k[G],P-1))}catch{}return W.length?W:H=="string"?k:k+"\0"}function b(k,P){for(var W=k+"",H,G=0;G<W.length;)P[h&G]=h&(H^=P[h&G]*19)+W.charCodeAt(G++);return I(P)}function S(){try{var k;return d&&(k=d.randomBytes)?k=k(s):(k=new Uint8Array(s),(e.crypto||e.msCrypto).getRandomValues(k)),I(k)}catch{var P=e.navigator,W=P&&P.plugins;return[+new Date,e,W,e.screen,I(t)]}}function I(k){return String.fromCharCode.apply(0,k)}if(b(r.random(),t),n.exports){n.exports=p;try{d=kx}catch{}}else r["seed"+i]=p})(typeof self<"u"?self:Rx,[],Math)}(Sa)),Sa.exports}var ki,Yc;function Ax(){if(Yc)return ki;Yc=1;var n=gx(),e=xx(),t=wx(),r=$x(),s=Sx(),o=Nx(),a=_x();return a.alea=n,a.xor128=e,a.xorwow=t,a.xorshift7=r,a.xor4096=s,a.tychei=o,ki=a,ki}var tc=Ax();/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nc{constructor(e,t,r,s,o){this.mean=e,this.stdDev=t,this.dtype=r,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const a=o||Math.random();this.random=tc.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const s=this.nextVal;return this.nextVal=NaN,s}let e,t,r=!1;for(;!r;){let s,o,a;do s=2*this.random()-1,o=2*this.random()-1,a=s*s+o*o;while(a>=1||a===0);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*s*i,t=this.mean+this.stdDev*o*i,(!this.truncated||this.isValidTruncated(e))&&(r=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Ox{constructor(e,t,r,s){this.alpha=e,this.beta=1/t,this.dtype=r;const o=s||Math.random();this.randu=tc.alea(o.toString()),this.randn=new nc(0,1,r,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,r,s,o,a;for(;;){do s=this.randn.nextValue(),a=1+this.c*s;while(a<=0);if(a*=a*a,e=s*s,t=1-.331*e*e,r=.5*e+this.d*(1-a+Math.log(a)),o=this.randu(),o<t||Math.log(o)<r)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}}class Dx{constructor(e=0,t=1,r,s){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=r,s==null&&(s=Math.random()),typeof s=="number"&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=tc.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fx(n,e,t=1,r="float32",s){if(jt(n),t==null&&(t=1),r==null&&(r="float32"),r!=="float32"&&r!=="int32")throw new Error(`Unsupported data type ${r}`);const o=new Ox(e,t,r,s),a=qe(n,r);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}const Px=L({randomGamma_:Fx});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lx(n,e=0,t=1,r,s){if(jt(n),r!=null&&r==="bool")throw new Error(`Unsupported data type ${r}`);const o=new nc(e,t,r,!1,s),a=qe(n,r);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}const em=L({randomNormal_:Lx});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bx(n,e,t){if(e!=null&&e==="bool")throw new Error(`Unsupported data type ${e}`);return em(n,0,1,e,t)}const Vx=L({randomStandardNormal_:Bx});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mx(n,e=0,t=1,r="float32",s){jt(n);const o=qe(n,r),a=new Dx(e,t,null,s);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}const rc=L({randomUniform_:Mx});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ux(n,e,t,r){return rc(n,e,t,"int32",r)}const Wx=L({randomUniformInt_:Ux});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $o(n,e,t=1,r="float32"){if(t===0)throw new Error("Cannot have a step of zero");const s={start:n,stop:e,step:t,dtype:r};return U.runKernel(tp,{},s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zx(n){const t={input:E(n,"input","real")};return U.runKernel(np,t)}const Co=L({real_:zx});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gx(n){const t={x:E(n,"x","reciprocal")};return U.runKernel(rp,t)}const jx=L({reciprocal_:Gx});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hx(n){const t={x:E(n,"x","relu")};return U.runKernel(sp,t)}const ei=L({relu_:Hx});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kx(n){const t={x:E(n,"x","relu6")};return U.runKernel(up,t)}const tm=L({relu6_:Kx});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xx(n,e){const r={x:E(n,"x","reverse")},s={dims:e};return U.runKernel(cp,r,s)}const Xr=L({reverse_:Xx});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qx(n){const e=E(n,"x","reverse");return _(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),Xr(e,0)}const Yx=L({reverse1d_:qx});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qx(n,e){const t=E(n,"x","reverse");return _(t.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${t.rank}.`),Xr(t,e)}const Zx=L({reverse2d_:Qx});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jx(n,e){const t=E(n,"x","reverse");return _(t.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${t.rank}.`),Xr(t,e)}const eb=L({reverse3d_:Jx});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tb(n,e){const t=E(n,"x","reverse");return _(t.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${t.rank}.`),Xr(t,e)}const nb=L({reverse4d_:tb});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rb(n){const t={x:E(n,"x","round")};return U.runKernel(lp,t)}const nm=L({round_:rb});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sb(n){const t={x:E(n,"x","rsqrt","float32")};return U.runKernel(hp,t)}const ob=L({rsqrt_:sb});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ab(n){const t={x:E(n,"x","selu")};return U.runKernel(gp,t)}const ib=L({selu_:ab});function ub(n,e,t,r,s,o=[1,1],a="NHWC"){const i=E(n,"x","separableConv2d"),u=E(e,"depthwiseFilter","separableConv2d"),c=E(t,"pointwiseFilter","separableConv2d");let l=i,h=!1;if(i.rank===3&&(h=!0,l=Z(i,[1,i.shape[0],i.shape[1],i.shape[2]])),a==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");_(l.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${l.rank}.`),_(u.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),_(c.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),_(c.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),_(c.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);const d=u.shape[2],p=u.shape[3];_(c.shape[2]===d*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${c.shape[2]}.`);const f=Yu(l,u,r,s,a,o),y=Ya(f,c,1,"valid",a);return h?Z(y,[y.shape[1],y.shape[2],y.shape[3]]):y}const cb=L({separableConv2d_:ub});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function lb(n,e){const t=E(n,"x","setdiff1d"),r=E(e,"y","setdiff1d");_(t.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${t.dtype}) and y (${r.dtype}).`),_(t.rank===1,()=>`x should be 1D tensor, but got x (${t.shape}).`),_(r.rank===1,()=>`y should be 1D tensor, but got y (${r.shape}).`);const s=await t.data(),o=await r.data(),a=new Set(o);let i=0;for(let l=0;l<s.length;l++)a.has(s[l])||i++;const u=new Ts([i],t.dtype),c=new Ts([i],"int32");for(let l=0,h=0;l<s.length;l++)a.has(s[l])||(u.values[h]=s[l],c.values[h]=l,h++);return[u.toTensor(),c.toTensor()]}const hb=lb;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function db(n){const t={x:E(n,"x","sign")};return U.runKernel(wp,t)}const pb=L({sign_:db});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fb(n){const t={x:E(n,"x","sin","float32")};return U.runKernel(xp,t)}const mb=L({sin_:fb});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gb(n){const t={x:E(n,"x","sinh")};return U.runKernel(bp,t)}const yb=L({sinh_:gb});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xb(n,e,t){const r=E(n,"x","slice1d");return _(r.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),Se(r,[e],[t])}const bb=L({slice1d_:xb});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wb(n,e,t){const r=E(n,"x","slice2d");return _(r.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),Se(r,e,t)}const vb=L({slice2d_:wb});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $b(n,e,t){const r=E(n,"x","slice3d");return _(r.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),Se(r,e,t)}const Cb=L({slice3d_:$b});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sb(n,e,t){const r=E(n,"x","slice4d");return _(r.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),Se(r,e,t)}const Tb=L({slice4d_:Sb});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nb(n,e=-1){const t=E(n,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);const r={logits:t},s={dim:e};return U.runKernel(Ep,r,s)}const Eb=L({softmax_:Nb});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ib(n){_(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const e={input:n};return U.runKernel(rd,e)}const sc=L({fft_:Ib});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kb(n){_(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const e={input:n};return U.runKernel(pd,e)}const Pa=L({ifft_:kb});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rb(n){const e=n.shape[n.shape.length-1],t=n.size/e;let r;if(e<=2){const s=Z(n,[t,e]);r=Pa(s)}else{const s=[t,2*(e-1)],o=Z(Co(n),[t,e]),a=Z(Ja(n),[t,e]),i=Xr(Se(o,[0,1],[t,e-2]),1),u=oe(Xr(Se(a,[0,1],[t,e-2]),1),Re(-1)),c=ht([o,i],1),l=ht([a,u],1),h=Z(dr(c,l),[s[0],s[1]]);r=Pa(h)}if(r=Co(r),n.rank===3&&n.shape[0]!==0){const s=r,o=n.shape[0];r=Z(r,[o,r.shape[0]/o,r.shape[1]]),s.dispose()}return r}const rm=L({irfft_:Rb});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _b(n,e,t=0){const s={x:E(n,"x","split")},o={numOrSizeSplits:e,axis:t};return U.runKernel(Np,s,o)}const So=L({split_:_b});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ab(n,e){_(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let t=n.shape[n.shape.length-1];const r=n.size/t;let s;if(e!=null&&e<t){const f=n.shape.map(y=>0),x=n.shape.map(y=>y);x[n.shape.length-1]=e,s=Se(n,f,x),t=e}else if(e!=null&&e>t){const f=n.shape.map(x=>x);f[n.shape.length-1]=e-t,s=ht([n,Kr(f)],n.shape.length-1),t=e}else s=n;const o=zt(s),a=Z(dr(s,o),[r,t]),i=sc(a),u=Math.floor(t/2)+1,c=Co(i),l=Ja(i),h=So(c,[u,t-u],c.shape.length-1),d=So(l,[u,t-u],l.shape.length-1),p=s.shape.slice();return p[s.shape.length-1]=u,Z(dr(h[0],d[0]),p)}const oc=L({rfft_:Ab});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ob(n,e){let t=E(n,"a","squaredDifference"),r=E(e,"b","squaredDifference");[t,r]=Ze(t,r),De(t.shape,r.shape);const s={a:t,b:r},o={};return U.runKernel(Op,s,o)}const sm=L({squaredDifference_:Ob});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Db(n,e){const t=E(n,"x","squeeze","string_or_numeric");return Z(t,mr(t.shape,e).newShape)}const rt=L({squeeze_:Db});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fb(n,e=0){const t=_a(n,"tensors","stack","string_or_numeric");_(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&_(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");const r=t,s={axis:e};return U.runKernel(Kd,r,s)}const Wn=L({stack_:Fb});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pb(n,e=0){const r={x:E(n,"x","step")},s={alpha:e};return U.runKernel(Xp,r,s)}const om=L({step_:Pb});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lb(n,e,t,r,s=0,o=0,a=0,i=0,u=0){const l={x:E(n,"x","stridedSlice","string_or_numeric")},h={begin:e,end:t,strides:r,beginMask:s,endMask:o,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:u};return U.runKernel(Fp,l,h)}const Bb=L({stridedSlice_:Lb});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vb(n){const t={x:E(n,"x","tan","float32")};return U.runKernel(Mp,t)}const Mb=L({tan_:Vb});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gt(n,e){Rs(n);const t=gr(n,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return yr(n,null,t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cr(n,e,t){if(Rs(n),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const r=gr(n,t);if(r.length!==2&&r.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return yr(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function am(n,e,t){if(Rs(n),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const r=gr(n,t);if(r.length!==3&&r.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return yr(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ub(n,e,t){if(Rs(n),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");const r=gr(n,t);if(r.length!==4&&r.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return yr(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wb(n,e,t){if(Rs(n),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");const r=gr(n,t);if(r.length!==5&&r.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return yr(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zb(n,e,t){if(Rs(n),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");const r=gr(n,t);if(r.length!==6&&r.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||r,yr(n,e,r,t)}function im(n,e,t){const r=e.rank>1?e.shape[e.rank-1]:1,s=e.rank>1?e.rank-1:1,o=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${n}, sliceDim: ${r}, and batchDim: ${s}.`;if(t.rank<s)throw new Error(o+` update.rank < ${s}. `);if(n.length<r+(t.rank-s))throw new Error(o+` Output shape length < ${r+(t.rank-s)}`);if(t.rank!==s+n.length-r)throw new Error(o+` update.rank != ${s+n.length-r}`);for(let a=0;a<s;++a)if(t.shape[a]!==e.shape[a])throw new Error(o+` updates.shape[${a}] (${t.shape[a]}) != indices.shape[${a}] (${e.shape[a]}).`);for(let a=0;a<t.rank-s;++a)if(t.shape[a+s]!==n[a+r])throw new Error(o+` updates.shape[${a+s}] (${t.shape[a+s]}) != shape[${a+s}] (${n[a+s]})`)}function ac(n,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}im(t,e,n)}function ti(n,e,t){const r=e.shape.length,s=r>1?e.shape[r-1]:1,o=t.length;let a=1;for(let h=s;h<o;++h)a*=t[h];const i=s<1?1:s,u=ne(e.shape)/i,c=[...lt(t.slice(0,s)),1],l=ne(t);return{sliceRank:s,numUpdates:u,sliceSize:a,strides:c,outputSize:l}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gb(n,e,t){const r=E(n,"tensor","tensorScatterupdate"),s=E(e,"indices","tensorScatterupdate","int32"),o=E(t,"updates","tensorScatterupdate");if(ac(o,s,r.shape),r.dtype!==o.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${r.dtype} and ${o.dtype}.`);const a={tensor:r,indices:s,updates:o},i={};return U.runKernel(pp,a,i)}const jb=L({tensorScatterUpdate_:Gb});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hb(n,e=1,t=!0){const r=E(n,"x","topk");if(r.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${e}`);const o={x:r},a={k:e,sorted:t},[i,u]=U.runKernel(Wp,o,a);return{values:i,indices:u}}const Kb=L({topk_:Hb});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xb(n,e=0,t=1,r,s){if(jt(n),r!=null&&r==="bool")throw new Error("Unsupported data type $ { dtype }");const o=new nc(e,t,r,!0,s),a=qe(n,r);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}const qb=L({truncatedNormal_:Xb});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yb(n,e=0){const t=E(n,"x","unique","string_or_numeric");_(t.rank>0,()=>"The input tensor must be at least 1D");const r={x:t},s={axis:e},[o,a]=U.runKernel(Gp,r,s);return{values:o,indices:a}}const Qb=L({unique_:Yb});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zb(n,e,t){const r=E(n,"x","unsortedSegmentSum"),s=E(e,"segmentIds","unsortedSegmentSum","int32");_(Cs(t),()=>"numSegments must be of dtype int");const o={x:r,segmentIds:s},a={numSegments:t};return U.runKernel(Hp,o,a)}const Jb=L({unsortedSegmentSum_:Zb});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ew(n,e=0){const t=E(n,"x","unstack","string_or_numeric");_(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);const r={value:t},s={axis:e};return U.runKernel(jp,r,s)}const es=L({unstack_:ew});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tw(n,e){return ec(n,e,"right")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nw(n,e=!0,t,r){return U.makeVariable(n,e,t,r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function um(n,e){const t=[];for(let o=0;o<e.length;o++)e[o]&&t.push(o);const r=qe(n,"int32"),s=qe([t.length,n.length],"int32");for(let o=0;o<t.length;o++){const a=r.indexToLoc(t[o]),i=o*n.length;s.values.set(a,i)}return s.toTensor()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function rw(n){const e=E(n,"condition","whereAsync","bool"),t=await e.data(),r=um(e.shape,t);return n!==e&&e.dispose(),r}const cm=rw;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function sw(n,e,t){const r=E(n,"tensor","boolMask"),s=E(e,"mask","boolMask","bool"),o=t??0,a=s.rank,i=r.shape;_(a>0,()=>"mask cannot be scalar"),Gt(i.slice(o,o+a),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let x=o;x<o+a;x++)u*=i[x];const c=i.slice(0,o).concat([u],i.slice(o+a)),l=Z(r,c),h=Z(s,[-1]),d=await cm(h),p=rt(d,[1]),f=Uf(l,p,o);return n!==r&&r.dispose(),e!==s&&s.dispose(),p.dispose(),l.dispose(),h.dispose(),d.dispose(),f}const ow=sw;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aw(n,e,t){const r=E(n,"x","transpose");if(e==null&&(e=r.shape.map((a,i)=>i).reverse()),_(r.rank===e.length,()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${e}.`),e.forEach(a=>{_(a>=0&&a<r.rank,()=>`All entries in 'perm' must be between 0 and ${r.rank-1} but got ${e}`)}),r.rank<=1)return r.clone();const s={x:r},o={perm:e};return r.dtype==="complex64"?ve(()=>{let a=Co(r),i=Ja(r);return a=U.runKernel(ma,{x:a},o),i=U.runKernel(ma,{x:i},o),t&&(i=In(i)),dr(a,i)}):U.runKernel(ma,s,o)}const yu=L({transpose_:aw});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iw(n,e,t,r,s=!0){const o=E(n,"v","movingAverage"),a=E(e,"x","movingAverage"),i=E(t,"decay","movingAverage");N2(o,a),_(Xe(o.shape,a.shape),()=>"Shape mismatch in v and x");const u=Re(1),c=Te(u,i);let l=oe(Te(a,o),c);if(s){_(r!=null,()=>"When using zeroDebias: true, step is required.");const h=E(r,"step","movingAverage");l=ke(l,Te(u,wo(i,h)))}return me(o,l)}const uw=L({movingAverage_:iw});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cw(n,e,t){jt(t);const r=E(n,"indices","scatterND","int32"),s=E(e,"updates","scatterND");ac(s,r,t);const o={indices:r,updates:s},a={shape:t};return U.runKernel(dp,o,a)}const lw=L({scatterND_:cw});function hw(n,e,t,r){if(n.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${n.dtype}.`);if(n.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${n.shape}.`);const s=n.rank>0?n.shape[0]:1,o=n.rank>1?n.shape[1]:1;if(t.length!==o)throw new Error(`outputShape has incorrect number of elements:, ${t.length}, should be: ${o}.`);const a=e.size;if(!(e.rank===0||e.rank===1&&a===s))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${s}]`);if(e.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dw(n,e,t,r=0){jt(t);const s=E(n,"sparseIndices","sparseToDense","int32"),o=E(e,"sparseValues","sparseToDense","string_or_numeric"),a=E(r,"defaultValue","sparseToDense",o.dtype);hw(s,o,t,a);const i={sparseIndices:s,sparseValues:o,defaultValue:a},u={outputShape:t};return U.runKernel(Ap,i,u)}const pw=L({sparseToDense_:dw});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fw(n,e){const t=E(e,"indices","gatherND","int32"),s={params:E(n,"x","gatherND","string_or_numeric"),indices:t};return U.runKernel(ld,s)}const mw=L({gatherND_:fw});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gw(n,e){if(e==null)return n.shape.slice();if(Xe(n.shape,e))return e;if(n.shape.length===e.length){const t=[];for(let r=0;r<n.shape.length;r++)e[r]==null&&n.shape[r]!=null?t.push(n.shape[r]):t.push(e[r]);return t}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yw(n,e,t,r){const s=E(n,"x","dropout");if(_(s.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`),_(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return n instanceof Qe?s.clone():s;const o=gw(s,t),a=1-e,i=ke(Mf(me(rc(o,0,1,"float32",r),a)),a);return oe(s,i)}const xw=L({dropout_:yw});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lm(n){return Math.floor(Math.pow(2,Math.ceil(Math.log(n)/Math.log(2))))}function ic(n,e,t){const r=1-n%2,s=new Float32Array(n);for(let o=0;o<n;++o){const a=2*Math.PI*o/(n+r-1);s[o]=e-t*Math.cos(a)}return gt(s,"float32")}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function bw(n,e,t=1){const r=E(n,"predictions","inTopK"),s=E(e,"targets","inTopK");_(r.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`),_(r.rank-1===s.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`),Gt(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const o=r.shape[r.shape.length-1];_(t>0&&t<=o,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${o}), but got ${t}`);const a=await r.data(),i=await s.data(),[u,c]=[a.length/o,o],l=lr("bool",u);for(let h=0;h<u;h++){const d=h*c,p=a.subarray(d,d+c),f=[];for(let x=0;x<p.length;x++)f.push({value:p[x],index:x});f.sort((x,y)=>y.value-x.value),l[h]=0;for(let x=0;x<t;x++)if(f[x].index===i[h]){l[h]=1;break}}return n!==r&&r.dispose(),e!==s&&s.dispose(),En(l,s.shape,"bool")}const ww=bw;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vw(n,e,t,r,s,o="NHWC",a){let i=n;n.rank===3&&(i=Z(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let u=e;u.rank===3&&(u=Z(e,[1,e.shape[0],e.shape[1],e.shape[2]])),_(i.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),_(u.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),_(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);const c=o==="NHWC"?i.shape[3]:i.shape[1],l=o==="NHWC"?u.shape[3]:u.shape[1];_(c===t[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${t[2]}.`),_(l===t[3],()=>`Error in conv2dDerFilter: depth of dy (${l}) must match output depth for filter (${t[3]}).`),sn("conv2dDerFilter",s,a);const h={x:i,dy:u},d={strides:r,pad:s,dataFormat:o,dimRoundingMode:a,filterShape:t};return U.runKernel(Oh,h,d)}const $w=L({conv2DBackpropFilter_:vw});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ni(n,e,t){if(t==null||t==="linear")return n;if(t==="relu")return oe(n,om(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function ri(n,e){let t=e;const r=Df(n.shape,e.shape);return r.length>0&&(t=Ge(t,r)),Z(t,n.shape)}function si(n,e,t,r){if(e==="linear")return n;if(e==="relu")return ei(n);if(e==="elu")return Pf(n);if(e==="relu6")return tm(n);if(e==="prelu")return Jf(n,t);if(e==="leakyrelu")return zf(n,r);if(e==="sigmoid")return Mr(n);throw new Error(`Unknown fused activation ${e}.`)}const oi=(n,e)=>!(n>0)||e==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cw({x:n,filter:e,strides:t,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:a,bias:i,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:l}){if(u=u||"linear",oi(U.state.gradientDepth,u)===!1){_(s==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let W=Ya(n,e,t,r,s,o,a);return i!=null&&(W=me(W,i)),si(W,u,c,l)}const h=E(n,"x","conv2d","float32"),d=E(e,"filter","conv2d","float32");let p=h,f=!1;h.rank===3&&(f=!0,p=Z(h,[1,h.shape[0],h.shape[1],h.shape[2]])),_(p.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),_(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),sn("fused conv2d",r,a);const x=s==="NHWC"?p.shape[3]:p.shape[1];_(d.shape[2]===x,()=>`Error in conv2d: depth of input (${x}) must match input depth for filter ${d.shape[2]}.`),_(Pt(t,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`);const y=Ht(p.shape,d.shape,t,o,r,a);let b;i!=null&&(b=E(i,"bias","fused conv2d"),[b]=Ze(b,h),s==="NHWC"?De(y.outShape,b.shape):(_(b.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${b.shape.length}.`),_(b.shape.length===0||b.shape[0]===y.outChannels||b.shape[0]===1,()=>`Error in fused conv2d: bias shape (${b.shape}) is not compatible with the number of output channels (${y.outChannels})`)));let S;if(c!=null){const W=c.shape;if(_(W.length<=1||W.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${W.length}.`),W.length===1)_(W[0]===1||W[0]===y.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${W}) is not compatible with the number of output channels (${y.outChannels}).`);else if(W.length===3)try{De(W,y.outShape)}catch{const G=`Error in fused conv2d: PReLU activation weights (${W}) is not compatible with the output shape of the conv2d (${y.outShape}).`;throw Error(G)}S=E(c,"prelu weights","fused conv2d")}const I=(W,H)=>{_(s==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`);const[G,B,V,R]=H,q=ni(W,V,u);_(bo(o),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`);const te=Of(B.shape,q,G,t,r),he=$w(B,q,G.shape,t,r),de=[te,he];if(R!=null){const ge=ri(R,q);de.push(ge)}return de},k={x:p,filter:d,bias:b,preluActivationWeights:S},P={strides:t,pad:r,dataFormat:s,dilations:o,dimRoundingMode:a,activation:u,leakyreluAlpha:l};return i==null?Un((H,G,B)=>{let V=U.runKernel(tu,k,P);return B([G,H,V]),f&&(V=Z(V,[V.shape[1],V.shape[2],V.shape[3]])),{value:V,gradFunc:I}})(p,d):Un((H,G,B,V)=>{let R=U.runKernel(tu,k,P);return V([G,H,R,B]),f&&(R=Z(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:I}})(p,d,b)}const Sw=L({fusedConv2d_:Cw});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tw(n,e,t,r,s,o=[1,1],a){let i=n;n.rank===3&&(i=Z(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let u=e;u.rank===3&&(u=Z(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const c={x:i,dy:u},l={strides:r,pad:s,dimRoundingMode:a,dilations:o,filterShape:t};return U.runKernel(jh,c,l)}const Nw=L({depthwiseConv2dNativeBackpropFilter_:Tw});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ew(n,e,t,r,s,o=[1,1],a){let i=e,u=!1;e.rank===3&&(u=!0,i=Z(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const c={dy:i,filter:t},l={strides:r,pad:s,dimRoundingMode:a,dilations:o,inputShape:n},h=U.runKernel(Hh,c,l);return u?Z(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const Iw=L({depthwiseConv2dNativeBackpropInput_:Ew});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kw({x:n,filter:e,strides:t,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:a,bias:i,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:l}){if(oi(U.state.gradientDepth,u)===!1){let P=Yu(n,e,t,r,s,o,a);return i!=null&&(P=me(P,i)),si(P,u,c,l)}const h=E(n,"x","depthwiseConv2d","float32"),d=E(e,"filter","depthwiseConv2d","float32");let p=h,f=!1;h.rank===3&&(f=!0,p=Z(h,[1,h.shape[0],h.shape[1],h.shape[2]])),_(p.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`),_(d.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),_(p.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),o==null&&(o=[1,1]),_(Pt(t,o),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),sn("fused depthwiseConv2d",r,a);const x=Ht(p.shape,d.shape,t,o,r,a,!0);let y;i!=null&&(y=E(i,"bias","fused conv2d"),[y]=Ze(y,h),De(x.outShape,y.shape));let b;c!=null&&(b=E(c,"prelu weights","fused depthwiseConv2d"));const S=(P,W)=>{_(bo(o),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[H,G,B,V]=W,R=ni(P,B,u),q=Iw(G.shape,R,H,t,r,o,a),te=Nw(G,R,H.shape,t,r,o,a);if(V!=null){const he=ri(y,R);return[q,te,he]}return[q,te]},I={x:p,filter:d,bias:y,preluActivationWeights:b},k={strides:t,pad:r,dataFormat:s,dilations:o,dimRoundingMode:a,activation:u,leakyreluAlpha:l};return i==null?Un((W,H,G)=>{let B=U.runKernel(nu,I,k);return G([H,W,B]),f&&(B=Z(B,[B.shape[1],B.shape[2],B.shape[3]])),{value:B,gradFunc:S}})(p,d):Un((W,H,G,B)=>{let V=U.runKernel(nu,I,k);return B([H,W,V,G]),f&&(V=Z(V,[V.shape[1],V.shape[2],V.shape[3]])),{value:V,gradFunc:S}})(p,d,y)}const Rw=L({fusedDepthwiseConv2d_:kw});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _w({a:n,b:e,transposeA:t=!1,transposeB:r=!1,bias:s,activation:o="linear",preluActivationWeights:a,leakyreluAlpha:i=.2}){if(oi(U.state.gradientDepth,o)===!1){let R=Le(n,e,t,r);return s!=null&&(R=me(R,s)),si(R,o,a,i)}let u=E(n,"a","fused matMul"),c=E(e,"b","fused matMul");[u,c]=Ze(u,c);const l=t?u.shape[u.rank-2]:u.shape[u.rank-1],h=r?c.shape[c.rank-1]:c.shape[c.rank-2],d=t?u.shape[u.rank-1]:u.shape[u.rank-2],p=r?c.shape[c.rank-2]:c.shape[c.rank-1],f=u.shape.slice(0,-2),x=c.shape.slice(0,-2),y=ne(f),b=ne(x);_(l===h,()=>`Error in fused matMul: inner shapes (${l}) and (${h}) of Tensors with shapes ${u.shape} and ${c.shape} and transposeA=${t} and transposeB=${r} must match.`);const I=De(u.shape.slice(0,-2),c.shape.slice(0,-2)).concat([d,p]),k=t?Z(u,[y,l,d]):Z(u,[y,d,l]),P=r?Z(c,[b,p,h]):Z(c,[b,h,p]);let W;s!=null&&(W=E(s,"bias","fused matMul"),[W]=Ze(W,u),De(I,W.shape));let H;a!=null&&(H=E(a,"prelu weights","fused matMul"));const G=(R,q)=>{const[te,he,de,ge]=q,be=ni(Z(R,de.shape),de,o);let $e,Ie;if(!t&&!r?($e=Le(be,he,!1,!0),Ie=Le(te,be,!0,!1)):!t&&r?($e=Le(be,he,!1,!1),Ie=Le(be,te,!0,!1)):t&&!r?($e=Le(he,be,!1,!0),Ie=Le(te,be,!1,!1)):($e=Le(he,be,!0,!0),Ie=Le(be,te,!0,!0)),s!=null){const _e=ri(ge,be);return[$e,Ie,_e]}else return[$e,Ie]},B={a:k,b:P,bias:W,preluActivationWeights:H},V={transposeA:t,transposeB:r,activation:o,leakyreluAlpha:i};return s==null?Un((q,te,he)=>{const de=U.runKernel(eu,B,V);return he([q,te,de]),{value:Z(de,I),gradFunc:G}})(k,P):Un((q,te,he,de)=>{const ge=U.runKernel(eu,B,V);return de([q,te,ge,he]),{value:Z(ge,I),gradFunc:G}})(k,P,W)}const Aw=L({fusedMatMul_:_w});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ow=Object.freeze(Object.defineProperty({__proto__:null,conv2d:Sw,depthwiseConv2d:Rw,matMul:Aw},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dw(n){return ic(n,.54,.46)}const Fw=L({hammingWindow_:Dw});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pw(n){return ic(n,.5,.5)}const hm=L({hannWindow_:Pw});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lw(n,e,t,r=!1,s=0){let o=0;const a=[];for(;o+e<=n.size;)a.push(Se(n,o,e)),o+=t;if(r)for(;o<n.size;){const i=o+e-n.size,u=ht([Se(n,o,e-i),Oo([i],s)]);a.push(u),o+=t}return a.length===0?cr([],[0,e]):Z(ht(a),[a.length,e])}const dm=L({frame_:Lw});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bw(n,e,t,r,s=hm){r==null&&(r=lm(e));const o=dm(n,e,t),a=oe(o,s(e));return oc(a,r)}const Vw=L({stft_:Bw});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mw(n,e,t,r,s="bilinear",o=0){const a=E(n,"image","cropAndResize"),i=E(e,"boxes","cropAndResize","float32"),u=E(t,"boxInd","cropAndResize","int32"),c=i.shape[0];_(a.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),_(i.rank===2&&i.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${i.shape}.`),_(u.rank===1&&u.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${i.shape}.`),_(r.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),_(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),_(s==="bilinear"||s==="nearest",()=>`method must be bilinear or nearest, but was ${s}`);const l={image:a,boxes:i,boxInd:u},h={method:s,extrapolationValue:o,cropSize:r};return U.runKernel(Uh,l,h)}const Uw=L({cropAndResize_:Mw});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ww(n){const e=E(n,"image","flipLeftRight","float32");_(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const t={image:e};return U.runKernel(od,t,{})}const zw=L({flipLeftRight_:Ww});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gw(n){const e=E(n,"image","grayscaleToRGB"),t=e.rank-1,r=e.shape[t];_(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),_(r===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`);const s=new Array(e.rank);return s.fill(1,0,t),s[t]=3,go(e,s)}const jw=L({grayscaleToRGB_:Gw});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hw(n){const e=E(n,"image","RGBToGrayscale"),t=e.rank-1,r=e.shape[t];_(e.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${e.rank}.`),_(r===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${r}.`);const s=e.dtype,o=je(e,"float32"),a=gt([.2989,.587,.114]);let i;switch(e.rank){case 2:i=xs("ij,j->i",o,a);break;case 3:i=xs("ijk,k->ij",o,a);break;case 4:i=xs("ijkl,l->ijk",o,a);break;case 5:i=xs("ijklm,m->ijkl",o,a);break;case 6:i=xs("ijklmn,n->ijklm",o,a);break;default:throw new Error("Not a valid tensor rank.")}return i=tn(i,-1),je(i,s)}const Kw=L({rgbToGrayscale_:Hw});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xw(n,e,t=0,r=.5){const s=E(n,"image","rotateWithOffset","float32");_(s.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`);const o={image:s},a={radians:e,fillValue:t,center:r};return U.runKernel(qp,o,a)}const qw=L({rotateWithOffset_:Xw});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Os(n,e,t,r,s,o){r==null&&(r=.5),s==null&&(s=Number.NEGATIVE_INFINITY),o==null&&(o=0);const a=n.shape[0];return t=Math.min(t,a),_(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),_(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),_(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),_(e.rank===1,()=>"scores must be a 1D tensor"),_(e.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${e.shape[0]}`),_(0<=o&&o<=1,()=>`softNmsSigma must be in [0, 1], but was '${o}'`),{maxOutputSize:t,iouThreshold:r,scoreThreshold:s,softNmsSigma:o}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yw(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY){const o=E(n,"boxes","nonMaxSuppression","float32"),a=E(e,"scores","nonMaxSuppression","float32"),i=Os(o,a,t,r,s);t=i.maxOutputSize,r=i.iouThreshold,s=i.scoreThreshold;const u={maxOutputSize:t,iouThreshold:r,scoreThreshold:s};return U.runKernel(Wd,{boxes:o,scores:a},u)}const Qw=L({nonMaxSuppression_:Yw});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zw(n,e,t){const r=Jw(n,e,t),s=r<0?-(r+1):r;n.splice(s,0,e)}function Jw(n,e,t){return tv(n,e,t||ev)}function ev(n,e){return n>e?1:n<e?-1:0}function tv(n,e,t){let r=0,s=n.length,o=0,a=!1;for(;r<s;){o=r+(s-r>>>1);const i=t(e,n[o]);i>0?r=o+1:(s=o,a=!i)}return a?r:-r-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pm(n,e,t,r,s){return uc(n,e,t,r,s,0)}function fm(n,e,t,r,s,o){return uc(n,e,t,r,s,0,!1,o,!0)}function mm(n,e,t,r,s,o){return uc(n,e,t,r,s,o,!0)}function uc(n,e,t,r,s,o,a=!1,i=!1,u=!1){const c=[];for(let y=0;y<e.length;y++)e[y]>s&&c.push({score:e[y],boxIndex:y,suppressBeginIndex:0});c.sort(Qc);const l=o>0?-.5/o:0,h=[],d=[];for(;h.length<t&&c.length>0;){const y=c.pop(),{score:b,boxIndex:S,suppressBeginIndex:I}=y;if(b<s)break;let k=!1;for(let P=h.length-1;P>=I;--P){const W=nv(n,S,h[P]);if(W>=r){k=!0;break}if(y.score=y.score*rv(r,l,W),y.score<=s)break}y.suppressBeginIndex=h.length,k||(y.score===b?(h.push(S),d.push(y.score)):y.score>s&&Zw(c,y,Qc))}const p=h.length,f=t-p;i&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const x={selectedIndices:h};return a&&(x.selectedScores=d),u&&(x.validOutputs=p),x}function nv(n,e,t){const r=n.subarray(e*4,e*4+4),s=n.subarray(t*4,t*4+4),o=Math.min(r[0],r[2]),a=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),c=Math.min(s[0],s[2]),l=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(i-o)*(u-a),f=(h-c)*(d-l);if(p<=0||f<=0)return 0;const x=Math.max(o,c),y=Math.max(a,l),b=Math.min(i,h),S=Math.min(u,d),I=Math.max(b-x,0)*Math.max(S-y,0);return I/(p+f-I)}function rv(n,e,t){const r=Math.exp(e*t*t);return t<=n?r:0}function Qc(n,e){return n.score-e.score||n.score===e.score&&e.boxIndex-n.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function sv(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY){const o=E(n,"boxes","nonMaxSuppressionAsync"),a=E(e,"scores","nonMaxSuppressionAsync"),i=Os(o,a,t,r,s);t=i.maxOutputSize,r=i.iouThreshold,s=i.scoreThreshold;const u=await Promise.all([o.data(),a.data()]),c=u[0],l=u[1],{selectedIndices:h}=pm(c,l,t,r,s);return o!==n&&o.dispose(),a!==e&&a.dispose(),gt(h,"int32")}const ov=sv;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function av(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY,o=0){const a=E(n,"boxes","nonMaxSuppression"),i=E(e,"scores","nonMaxSuppression"),u=Os(a,i,t,r,s,o);t=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,o=u.softNmsSigma;const c={boxes:a,scores:i},l={maxOutputSize:t,iouThreshold:r,scoreThreshold:s,softNmsSigma:o},h=U.runKernel(Gd,c,l);return{selectedIndices:h[0],selectedScores:h[1]}}const iv=L({nonMaxSuppressionWithScore_:av});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function uv(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY,o=0){const a=E(n,"boxes","nonMaxSuppressionAsync"),i=E(e,"scores","nonMaxSuppressionAsync"),u=Os(a,i,t,r,s,o);t=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,o=u.softNmsSigma;const c=await Promise.all([a.data(),i.data()]),l=c[0],h=c[1],{selectedIndices:d,selectedScores:p}=mm(l,h,t,r,s,o);return a!==n&&a.dispose(),i!==e&&i.dispose(),{selectedIndices:gt(d,"int32"),selectedScores:gt(p)}}const cv=uv;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lv(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY,o=!1){const a=E(n,"boxes","nonMaxSuppression"),i=E(e,"scores","nonMaxSuppression"),u=Os(a,i,t,r,s,null),c=u.maxOutputSize,l=u.iouThreshold,h=u.scoreThreshold,d={boxes:a,scores:i},p={maxOutputSize:c,iouThreshold:l,scoreThreshold:h,padToMaxOutputSize:o},f=U.runKernel(zd,d,p);return{selectedIndices:f[0],validOutputs:f[1]}}const hv=L({nonMaxSuppressionPadded_:lv});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function dv(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY,o=!1){const a=E(n,"boxes","nonMaxSuppressionAsync"),i=E(e,"scores","nonMaxSuppressionAsync"),u=Os(a,i,t,r,s,null),c=u.maxOutputSize,l=u.iouThreshold,h=u.scoreThreshold,[d,p]=await Promise.all([a.data(),i.data()]),{selectedIndices:f,validOutputs:x}=fm(d,p,c,l,h,o);return a!==n&&a.dispose(),i!==e&&i.dispose(),{selectedIndices:gt(f,"int32"),validOutputs:Re(x,"int32")}}const pv=dv;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fv(n,e,t=!1,r=!1){const s=E(n,"images","resizeBilinear");_(s.rank===3||s.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`),_(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),_(r===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let o=s,a=!1;s.rank===3&&(a=!0,o=Z(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const i={images:o},u={alignCorners:t,halfPixelCenters:r,size:e},c=U.runKernel(ip,i,u);return a?Z(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const mv=L({resizeBilinear_:fv});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gv(n,e,t=!1,r=!1){const s=E(n,"images","resizeNearestNeighbor");_(s.rank===3||s.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`),_(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),_(s.dtype==="float32"||s.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),_(r===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let o=s,a=!1;s.rank===3&&(a=!0,o=Z(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const i={images:o},u={alignCorners:t,halfPixelCenters:r,size:e},c=U.runKernel(ap,i,u);return a?Z(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const yv=L({resizeNearestNeighbor_:gv});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xv(n,e="binary",t=!1,r=.5){const s=E(n,"image","threshold"),o=.2989,a=.587,i=.114,u=s.shape[0]*s.shape[1];let c=oe(gt([r]),255),l,h,d,p;if(_(s.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`),_(s.shape[2]===3||s.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`),_(s.dtype==="int32"||s.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`),_(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),s.shape[2]===3){[l,h,d]=So(s,[1,1,1],-1);const y=oe(l,o),b=oe(h,a),S=oe(d,i);p=me(me(y,b),S)}else p=n;if(e==="otsu"){const y=_f(je(nm(p),"int32"),En([]),256);c=bv(y,u)}const f=t?Ju(p,c):Za(p,c);return je(oe(f,255),"int32")}function bv(n,e){let t=gt([-1]),r=gt([0]),s=gt([0]),o,a,i,u,c,l;for(let h=0;h<n.size-1;h++){o=Se(n,0,h+1),a=Se(n,h+1),c=ke(Ge(o),e),l=ke(Ge(a),e);const d=Ge(oe(o,$o(0,o.size)));i=ke(d,Ge(o));const p=Oo(a.shape,o.size),f=me($o(0,a.size),p),x=oe(a,f);u=ke(Ge(x),Ge(a));const y=Te(i,u),b=Te(i,u),S=oe(c,l);s=oe(oe(S,y),b);const I=Za(s,r);r=ur(I,s,r),t=ur(I,gt([h]),t)}return t}const wv=L({threshold_:xv});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vv(n,e,t="nearest",r="constant",s=0,o){const a=E(n,"image","transform","float32"),i=E(e,"transforms","transform","float32");_(a.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`),_(i.rank===2&&(i.shape[0]===a.shape[0]||i.shape[0]===1)&&i.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),_(o==null||o.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${o}.`);const u={image:a,transforms:i},c={interpolation:t,fillMode:r,fillValue:s,outputShape:o};return U.runKernel(zp,u,c)}const $v=L({transform_:vv});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cv(n,e,t){const r=E(n,"a","bandPart");_(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const s=r.shape,[o,a]=r.shape.slice(-2);let i,u;typeof e=="number"?(_(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),_(e<=o,()=>`bandPart(): numLower (${e}) must not be greater than the number of rows (${o}).`),i=E(e<0?o:e,"numLower","bandPart")):(_(e.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),i=ur(gu(e,0),o,Fa(e,o))),typeof t=="number"?(_(t%1===0,()=>`bandPart(): numUpper must be an integer, got ${t}.`),_(t<=a,()=>`bandPart(): numUpper (${t}) must not be greater than the number of columns (${a}).`),u=E(t<0?a:t,"numUpper","bandPart")):(_(t.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),u=ur(gu(t,0),a,Fa(t,a)));const c=Z($o(0,o,1,"int32"),[-1,1]),l=$o(0,a,1,"int32"),h=Te(c,l),d=Oa(Ju(h,i),Wf(h,In(u))),p=Kr([o,a],r.dtype);return Z(Wn(es(Z(r,[-1,o,a])).map(f=>ur(d,f,p))),s)}const Sv=L({bandPart_:Cv});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tv(n){let e;if(Array.isArray(n)){e=!1,_(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const s=n[0].shape[0];for(let o=1;o<n.length;++o)_(n[o].shape[0]===s,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[o].shape[0]} vs. ${s})`)}else e=!0,n=So(n,n.shape[0],0).map(s=>rt(s,[0]));_(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const t=[],r=n;for(let s=0;s<n.length;++s)t.push(U.tidy(()=>{let o=r[s];if(s>0)for(let a=0;a<s;++a){const i=oe(Ge(oe(t[a],o)),t[a]);o=Te(o,i)}return ke(o,Qa(o,"euclidean"))}));return e?Wn(t,0):t}const Nv=L({gramSchmidt_:Tv});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ev(n,e=!1){if(_(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return Zc(n,e);{const t=n.shape.slice(0,n.shape.length-2).reduce((u,c)=>u*c),r=es(Z(n,[t,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),s=[],o=[];r.forEach(u=>{const[c,l]=Zc(u,e);s.push(c),o.push(l)});const a=Z(Wn(s,0),n.shape),i=Z(Wn(o,0),n.shape);return[a,i]}}function Zc(n,e=!1){return U.tidy(()=>{_(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const t=n.shape[0],r=n.shape[1];let s=Vf(t),o=ir(n);const a=cr([[1]],[1,1]);let i=ir(a);const u=t>=r?r:t;for(let c=0;c<u;++c){const l=o,h=i,d=s;[i,o,s]=U.tidy(()=>{const p=Se(o,[c,c],[t-c,1]),f=Qa(p),x=Se(o,[c,c],[1,1]),y=ur(Za(x,0),cr([[-1]]),cr([[1]])),b=Te(x,oe(y,f)),S=ke(p,b);S.shape[0]===1?i=ir(a):i=ht([a,Se(S,[1,0],[S.shape[0]-1,S.shape[1]])],0);const I=In(ke(Le(y,b),f)),k=Se(o,[c,0],[t-c,r]),P=oe(I,i),W=yu(i);if(c===0)o=Te(k,Le(P,Le(W,k)));else{const B=Te(k,Le(P,Le(W,k)));o=ht([Se(o,[0,0],[c,r]),B],0)}const H=yu(P),G=Se(s,[0,c],[t,s.shape[1]-c]);if(c===0)s=Te(G,Le(Le(G,i),H));else{const B=Te(G,Le(Le(G,i),H));s=ht([Se(s,[0,0],[t,c]),B],1)}return[i,o,s]}),Ke([l,h,d])}return!e&&t>r&&(s=Se(s,[0,0],[t,r]),o=Se(o,[0,0],[r,r])),[s,o]})}const Iv=L({qr_:Ev});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Tt;(function(n){n[n.NONE=0]="NONE",n[n.MEAN=1]="MEAN",n[n.SUM=2]="SUM",n[n.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(Tt||(Tt={}));function kv(n,e,t=Tt.SUM_BY_NONZERO_WEIGHTS){const r=E(n,"losses","computeWeightedLoss");let s=null;e!=null&&(s=E(e,"weights","computeWeightedLoss"));const o=s==null?r:oe(r,s);if(t===Tt.NONE)return o;if(t===Tt.SUM)return Ge(o);if(t===Tt.MEAN){if(s==null)return Da(o);{const a=r.size/s.size,i=ke(Ge(o),Ge(s));return a>1?ke(i,Re(a)):i}}if(t===Tt.SUM_BY_NONZERO_WEIGHTS){if(s==null)return ke(Ge(o),Re(r.size));{const a=oe(s,Br(r.shape)),i=je(Ge(Qf(a,Re(0))),"float32");return ke(Ge(o),i)}}throw Error(`Unknown reduction: ${t}`)}const jn=L({computeWeightedLoss_:kv});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rv(n,e,t,r=Tt.SUM_BY_NONZERO_WEIGHTS){const s=E(n,"labels","absoluteDifference"),o=E(e,"predictions","absoluteDifference");let a=null;t!=null&&(a=E(t,"weights","absoluteDifference")),Gt(s.shape,o.shape,"Error in absoluteDifference: ");const i=Ut(Te(s,o));return jn(i,a,r)}const _v=L({absoluteDifference_:Rv});function Av(n,e,t,r,s=Tt.SUM_BY_NONZERO_WEIGHTS){const o=E(n,"labels","cosineDistance"),a=E(e,"predictions","cosineDistance");let i=null;r!=null&&(i=E(r,"weights","cosineDistance")),Gt(o.shape,a.shape,"Error in cosineDistance: ");const u=Re(1),c=Te(u,Ge(oe(o,a),t,!0));return jn(c,i,s)}const Ov=L({cosineDistance_:Av});function Dv(n,e,t,r=Tt.SUM_BY_NONZERO_WEIGHTS){let s=E(n,"labels","hingeLoss");const o=E(e,"predictions","hingeLoss");let a=null;t!=null&&(a=E(t,"weights","hingeLoss")),Gt(s.shape,o.shape,"Error in hingeLoss: ");const i=Re(1);s=Te(oe(Re(2),s),i);const u=ei(Te(i,oe(s,o)));return jn(u,a,r)}const Fv=L({hingeLoss_:Dv});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pv(n,e,t,r=1,s=Tt.SUM_BY_NONZERO_WEIGHTS){const o=E(n,"labels","huberLoss"),a=E(e,"predictions","huberLoss");let i=null;t!=null&&(i=E(t,"weights","huberLoss")),Gt(o.shape,a.shape,"Error in huberLoss: ");const u=Re(r),c=Ut(Te(a,o)),l=Fa(c,u),h=Te(c,l),d=me(oe(Re(.5),gn(l)),oe(u,h));return jn(d,i,s)}const Lv=L({huberLoss_:Pv});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bv(n,e,t,r=1e-7,s=Tt.SUM_BY_NONZERO_WEIGHTS){const o=E(n,"labels","logLoss"),a=E(e,"predictions","logLoss");let i=null;t!=null&&(i=E(t,"weights","logLoss")),Gt(o.shape,a.shape,"Error in logLoss: ");const u=Re(1),c=Re(r),l=In(oe(o,vo(me(a,c)))),h=oe(Te(u,o),vo(me(Te(u,a),c))),d=Te(l,h);return jn(d,i,s)}const Vv=L({logLoss_:Bv});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mv(n,e,t,r=Tt.SUM_BY_NONZERO_WEIGHTS){const s=E(n,"labels","meanSquaredError"),o=E(e,"predictions","meanSquaredError");let a=null;t!=null&&(a=E(t,"weights","meanSquaredError")),Gt(s.shape,o.shape,"Error in meanSquaredError: ");const i=sm(s,o);return jn(i,a,r)}const Uv=L({meanSquaredError_:Mv});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wv(n,e){const t=E(n,"labels","sigmoidCrossEntropyWithLogits"),r=E(e,"logits","sigmoidCrossEntropyWithLogits");Gt(t.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=ei(r),o=oe(r,t),a=Gf(Mn(In(Ut(r))));return me(Te(s,o),a)}function zv(n,e,t,r=0,s=Tt.SUM_BY_NONZERO_WEIGHTS){let o=E(n,"multiClassLabels","sigmoidCrossEntropy");const a=E(e,"logits","sigmoidCrossEntropy");let i=null;if(t!=null&&(i=E(t,"weights","sigmoidCrossEntropy")),Gt(o.shape,a.shape,"Error in sigmoidCrossEntropy: "),r>0){const c=Re(r),l=Re(1),h=Re(.5);o=me(oe(o,Te(l,c)),oe(h,c))}const u=Wv(o,a);return jn(u,i,s)}const Gv=L({sigmoidCrossEntropy_:zv});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jv(n,e,t=-1){if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${t}`);return Un((s,o,a)=>{const u=Hf(o,[t],!0),c=Te(je(o,"float32"),u);a([s,c]);const l=In(oe(c,s));return{value:Ge(l,[t]),gradFunc:(p,f)=>{const[x,y]=f,b=Kt(p.shape,[t]);return[oe(Z(p,b),Te(je(x,"float32"),Mn(y))),oe(Z(p,b),Te(Mn(y),je(x,"float32")))]}}})(n,e)}function Hv(n,e,t,r=0,s=Tt.SUM_BY_NONZERO_WEIGHTS){let o=E(n,"onehotLabels","softmaxCrossEntropy");const a=E(e,"logits","softmaxCrossEntropy");let i=null;if(t!=null&&(i=E(t,"weights","softmaxCrossEntropy")),Gt(o.shape,a.shape,"Error in softmaxCrossEntropy: "),r>0){const c=Re(r),l=Re(1),h=Re(o.shape[1]);o=me(oe(o,Te(l,c)),ke(c,h))}const u=jv(o,a);return jn(u,i,s)}const Kv=L({softmaxCrossEntropy_:Hv});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xv(n,e,t,r){const s=E(n,"indices","sparseFillEmptyRows","int32"),o=E(e,"values","sparseFillEmptyRows"),a=E(t,"denseShape","sparseFillEmptyRows","int32"),i=E(r,"defaultValue","sparseFillEmptyRows",o.dtype);if(s.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${s.shape}`);if(o.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${o.shape}`);if(a.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${a.shape}`);if(i.rank!==0)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);const u={indices:s,values:o,denseShape:a,defaultValue:i},c=U.runKernel(Ip,u);return{outputIndices:c[0],outputValues:c[1],emptyRowIndicator:c[2],reverseIndexMap:c[3]}}const qv=L({sparseFillEmptyRows_:Xv});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yv(n,e,t){const r=E(n,"inputIndices","sparseReshape","int32"),s=E(e,"inputShape","sparseReshape","int32"),o=E(t,"newShape","sparseReshape","int32");if(r.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${r.shape}`);if(s.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(o.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${o.shape}`);const a={inputIndices:r,inputShape:s,newShape:o},i=U.runKernel(kp,a);return{outputIndices:i[0],outputShape:i[1]}}const Qv=L({sparseReshape_:Yv});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zv(n,e,t){const r=E(n,"data","sparseSegmentMean"),s=E(e,"indices","sparseSegmentMean","int32"),o=E(t,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${s.shape}`);if(o.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${o.shape}`);const a={data:r,indices:s,segmentIds:o};return U.runKernel(Rp,a)}const Jv=L({sparseSegmentMean_:Zv});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e$(n,e,t){const r=E(n,"data","sparseSegmentSum"),s=E(e,"indices","sparseSegmentSum","int32"),o=E(t,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${s.shape}`);if(o.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${o.shape}`);const a={data:r,indices:s,segmentIds:o};return U.runKernel(_p,a)}const t$=L({sparseSegmentSum_:e$});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n$(n,e,t,r,s,o,a,i){const u=E(n,"data","stringNGrams","string");if(u.dtype!=="string")throw new Error("Data must be of datatype string");if(u.shape.length!==1)throw new Error(`Data must be a vector, saw: ${u.shape}`);const c=E(e,"dataSplits","stringNGrams");if(c.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const l={separator:t,nGramWidths:r,leftPad:s,rightPad:o,padWidth:a,preserveShortSequences:i},h={data:u,dataSplits:c},d=U.runKernel(Pp,h,l);return{nGrams:d[0],nGramsSplits:d[1]}}const r$=L({stringNGrams_:n$});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s$(n,e,t=!0){const r=E(n,"input","stringSplit","string"),s=E(e,"delimiter","stringSplit","string");if(r.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(s.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);const o={skipEmpty:t},a={input:r,delimiter:s},i=U.runKernel(Lp,a,o);return{indices:i[0],values:i[1],shape:i[2]}}const o$=L({stringSplit_:s$});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a$(n,e){const t=E(n,"input","stringToHashBucketFast","string"),r={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const s={input:t};return U.runKernel(Bp,s,r)}const i$=L({stringToHashBucketFast_:a$});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u$(n,e,t,r=!0){const s=E(n,"input","staticRegexReplace","string"),o={pattern:e,rewrite:t,replaceGlobal:r};return U.runKernel(Dp,{x:s},o)}const c$=L({staticRegexReplace_:u$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l$={fft:sc,ifft:Pa,rfft:oc,irfft:rm},h$={hammingWindow:Fw,hannWindow:hm,frame:dm,stft:Vw},Ds={flipLeftRight:zw,grayscaleToRGB:jw,resizeNearestNeighbor:yv,resizeBilinear:mv,rgbToGrayscale:Kw,rotateWithOffset:qw,cropAndResize:Uw,nonMaxSuppression:Qw,nonMaxSuppressionAsync:ov,nonMaxSuppressionWithScore:iv,nonMaxSuppressionWithScoreAsync:cv,nonMaxSuppressionPadded:hv,nonMaxSuppressionPaddedAsync:pv,threshold:wv,transform:$v},d$={bandPart:Sv,gramSchmidt:Nv,qr:Iv},p$={absoluteDifference:_v,computeWeightedLoss:jn,cosineDistance:Ov,hingeLoss:Fv,huberLoss:Lv,logLoss:Vv,meanSquaredError:Uv,sigmoidCrossEntropy:Gv,softmaxCrossEntropy:Kv},f$={sparseFillEmptyRows:qv,sparseReshape:Qv,sparseSegmentMean:Jv,sparseSegmentSum:t$},m$={stringNGrams:r$,stringSplit:o$,stringToHashBucketFast:i$,staticRegexReplace:c$};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g$=new Map,y$=new Map;class x${getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Dr{constructor(){this.classNameMap={}}static getMap(){return Dr.instance==null&&(Dr.instance=new Dr),Dr.instance}static register(e){Dr.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function b$(n,e,t){_(n.className!=null,()=>"Class being registered does not have the static className property defined."),_(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),_(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof e>"u"&&(e="Custom"),typeof t>"u"&&(t=n.className);const r=t,s=e+">"+r;return Dr.register(n),g$.set(s,n),y$.set(n,s),n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ts extends x${minimize(e,t=!1,r){const{value:s,grads:o}=this.computeGradients(e,r);if(r!=null){const a=r.map(i=>({name:i.name,tensor:o[i.name]}));this.applyGradients(a)}else this.applyGradients(o);return Ke(o),t?s:(s.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return n4(e,t)}dispose(){this.iterations_!=null&&Ke(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Re(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(ts,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class w$ extends ts{static get className(){return"Adadelta"}constructor(e,t,r=null){super(),this.learningRate=e,this.rho=t,this.epsilon=r,this.accumulatedGrads=[],this.accumulatedUpdates=[],r==null&&(this.epsilon=U.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=U.registeredVariables[r],a=!1;this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${r}/accum_grad`,variable:ve(()=>zt(o).variable(a))}),this.accumulatedUpdates[s]==null&&(this.accumulatedUpdates[s]={originalName:`${r}/accum_var`,variable:ve(()=>zt(o).variable(a))});const i=Array.isArray(e)?e[s].tensor:e[r];if(i==null)return;const u=this.accumulatedGrads[s].variable,c=this.accumulatedUpdates[s].variable;ve(()=>{const l=me(oe(u,this.rho),oe(gn(i),1-this.rho)),h=oe(ke(Vn(me(c,this.epsilon)),Vn(me(u,this.epsilon))),i),d=me(oe(c,this.rho),oe(gn(h),1-this.rho));u.assign(l),c.assign(d);const p=me(oe(h,-this.learningRate),o);o.assign(p)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Ke(this.accumulatedGrads.map(e=>e.variable)),Ke(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=e.length/2,r=!1;this.accumulatedGrads=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.accumulatedUpdates=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(r)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class v$ extends ts{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=U.registeredVariables[r];this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${r}/accumulator`,variable:ve(()=>Oo(o.shape,this.initialAccumulatorValue).variable(!1))});const a=Array.isArray(e)?e[s].tensor:e[r];if(a==null)return;const i=this.accumulatedGrads[s].variable;ve(()=>{const u=me(i,gn(a));i.assign(u);const c=me(oe(ke(a,Vn(me(u,U.backend.epsilon()))),-this.learningRate),o);o.assign(c)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Ke(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulatedGrads=e.map(r=>({originalName:r.name,variable:r.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $$ extends ts{static get className(){return"Adam"}constructor(e,t,r,s=null){super(),this.learningRate=e,this.beta1=t,this.beta2=r,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],ve(()=>{this.accBeta1=Re(t).variable(),this.accBeta2=Re(r).variable()}),s==null&&(this.epsilon=U.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(r=>r.name):Object.keys(e);ve(()=>{const r=Te(1,this.accBeta1),s=Te(1,this.accBeta2);t.forEach((o,a)=>{const i=U.registeredVariables[o],u=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${o}/m`,variable:ve(()=>zt(i).variable(u))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${o}/v`,variable:ve(()=>zt(i).variable(u))});const c=Array.isArray(e)?e[a].tensor:e[o];if(c==null)return;const l=this.accumulatedFirstMoment[a].variable,h=this.accumulatedSecondMoment[a].variable,d=me(oe(l,this.beta1),oe(c,1-this.beta1)),p=me(oe(h,this.beta2),oe(gn(c),1-this.beta2)),f=ke(d,r),x=ke(p,s);l.assign(d),h.assign(p);const y=me(oe(ke(f,me(Vn(x),this.epsilon)),-this.learningRate),i);i.assign(y)}),this.accBeta1.assign(oe(this.accBeta1,this.beta1)),this.accBeta2.assign(oe(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Ke(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Ke(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),ve(()=>{this.accBeta1.assign(wo(this.beta1,this.iterations_+1)),this.accBeta2.assign(wo(this.beta2,this.iterations_+1))});const t=e.length/2,r=!1;this.accumulatedFirstMoment=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(r)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class C$ extends ts{static get className(){return"Adamax"}constructor(e,t,r,s=null,o=0){super(),this.learningRate=e,this.beta1=t,this.beta2=r,this.epsilon=s,this.decay=o,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],ve(()=>{this.iteration=Re(0).variable(),this.accBeta1=Re(t).variable()}),s==null&&(this.epsilon=U.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(r=>r.name):Object.keys(e);ve(()=>{const r=Te(1,this.accBeta1),s=ke(-this.learningRate,me(oe(this.iteration,this.decay),1));t.forEach((o,a)=>{const i=U.registeredVariables[o],u=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${o}/m`,variable:zt(i).variable(u)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${o}/v`,variable:zt(i).variable(u)});const c=Array.isArray(e)?e[a].tensor:e[o];if(c==null)return;const l=this.accumulatedFirstMoment[a].variable,h=this.accumulatedWeightedInfNorm[a].variable,d=me(oe(l,this.beta1),oe(c,1-this.beta1)),p=oe(h,this.beta2),f=Ut(c),x=Yf(p,f);l.assign(d),h.assign(x);const y=me(oe(ke(s,r),ke(d,me(x,this.epsilon))),i);i.assign(y)}),this.iteration.assign(me(this.iteration,1)),this.accBeta1.assign(oe(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Ke(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Ke(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gm extends ts{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=Array.isArray(e)?e[s].tensor:e[r];if(o==null)return;const a=U.registeredVariables[r];ve(()=>{const i=me(oe(this.c,o),a);a.assign(i)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Tn(Re(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class S$ extends gm{static get className(){return"Momentum"}constructor(e,t,r=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=r,this.accumulations=[],this.m=Re(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=U.registeredVariables[r];this.accumulations[s]==null&&(this.accumulations[s]={originalName:`${r}/momentum`,variable:ve(()=>zt(o).variable(!1))});const a=this.accumulations[s].variable,i=Array.isArray(e)?e[s].tensor:e[r];i!=null&&ve(()=>{let u;const c=me(oe(this.m,a),i);this.useNesterov?u=me(oe(this.c,me(i,oe(c,this.m))),o):u=me(oe(this.c,c),o),a.assign(c),o.assign(u)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Ke(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulations=e.map(r=>({originalName:r.name,variable:r.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class T$ extends ts{static get className(){return"RMSProp"}constructor(e,t=.9,r=0,s=null,o=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=r,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=o,s==null&&(this.epsilon=U.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=U.registeredVariables[r],a=!1;this.accumulatedMeanSquares[s]==null&&(this.accumulatedMeanSquares[s]={originalName:`${r}/rms`,variable:ve(()=>zt(o).variable(a))}),this.accumulatedMoments[s]==null&&(this.accumulatedMoments[s]={originalName:`${r}/momentum`,variable:ve(()=>zt(o).variable(a))}),this.accumulatedMeanGrads[s]==null&&this.centered&&(this.accumulatedMeanGrads[s]={originalName:`${r}/mg`,variable:ve(()=>zt(o).variable(a))});const i=Array.isArray(e)?e[s].tensor:e[r];if(i==null)return;const u=this.accumulatedMeanSquares[s].variable,c=this.accumulatedMoments[s].variable;ve(()=>{const l=me(oe(u,this.decay),oe(gn(i),1-this.decay));if(this.centered){const h=this.accumulatedMeanGrads[s].variable,d=me(oe(h,this.decay),oe(i,1-this.decay)),p=ke(oe(i,this.learningRate),Vn(Te(l,me(gn(d),this.epsilon)))),f=me(oe(c,this.momentum),p);u.assign(l),h.assign(d),c.assign(f);const x=Te(o,f);o.assign(x)}else{const h=me(oe(u,this.decay),oe(gn(i),1-this.decay)),d=me(oe(c,this.momentum),ke(oe(i,this.learningRate),Vn(me(h,this.epsilon))));u.assign(h),c.assign(d);const p=Te(o,d);o.assign(p)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Ke(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Ke(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Ke(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,r=!1;this.accumulatedMeanSquares=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.accumulatedMoments=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N$=[w$,v$,$$,C$,S$,T$,gm];function E$(){for(const n of N$)b$(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I$="model",k$=".json",R$=".weights.bin";function Jc(n){return new Promise(e=>setTimeout(e)).then(n)}class qr{constructor(e){if(!j().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(qr.URL_SCHEME)&&(e=e.slice(qr.URL_SCHEME.length)),(e==null||e.length===0)&&(e=I$),this.modelJsonFileName=e+k$,this.weightDataFileName=e+R$}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=bn.join(e.weightData),r=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const s=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],o=yf(e,s),a=window.URL.createObjectURL(new Blob([JSON.stringify(o)],{type:"application/json"})),i=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(i.download=this.modelJsonFileName,i.href=a,await Jc(()=>i.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){const u=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;u.download=this.weightDataFileName,u.href=r,await Jc(()=>u.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Ro(e)}}}}qr.URL_SCHEME="downloads://";class _${constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{const r=new FileReader;r.onload=s=>{const o=JSON.parse(s.target.result),a=o.modelTopology;if(a==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(o.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:a});return}const u=Xu(o,c=>this.loadWeights(c));e(u)},r.onerror=s=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),r.readAsText(this.jsonFile)})}loadWeights(e){const t=[],r=[];for(const a of e)t.push(...a.weights),r.push(...a.paths);const s=this.checkManifestAndWeightFiles(e),o=r.map(a=>this.loadWeightsFile(a,s[a]));return Promise.all(o).then(a=>[t,a])}loadWeightsFile(e,t){return new Promise((r,s)=>{const o=new FileReader;o.onload=a=>{const i=a.target.result;r(i)},o.onerror=a=>s(`Failed to weights data from file of path '${e}'.`),o.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){const t=[],r=this.weightsFiles.map(o=>Wc(o.name)),s={};for(const o of e)o.paths.forEach(a=>{const i=Wc(a);if(t.indexOf(i)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${i}'`);if(t.push(i),r.indexOf(i)===-1)throw new Error(`Weight file with basename '${i}' is not provided.`);s[a]=this.weightsFiles[r.indexOf(i)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return s}}const A$=n=>j().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(qr.URL_SCHEME)?O$(n.slice(qr.URL_SCHEME.length)):null;He.registerSaveRouter(A$);function O$(n="model"){return new qr(n)}function D$(n){return new _$(n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function el(n,e,t,r){a(n),t=t??0,r=r??1,i(t,r);let s=0;const o=u=>(u.then(c=>{const l=t+ ++s/n.length*(r-t);return e(l),c}),u);function a(u){_(u!=null&&Array.isArray(u)&&u.length>0,()=>"promises must be a none empty array")}function i(u,c){_(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${u}`),_(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${c}`),_(c>=u,()=>`startFraction must be no more than endFraction, but got startFraction ${u} and endFraction ${c}`)}return Promise.all(n.map(o))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function ym(n,e){e==null&&(e={});const t=e.fetchFunc==null?j().platform.fetch:e.fetchFunc,r=n.map(h=>t(h,e.requestInit,{isBinary:!0})),i=(e.onProgress==null?await Promise.all(r):await el(r,e.onProgress,0,.5)).map(h=>h.arrayBuffer());return e.onProgress==null?await Promise.all(i):await el(i,e.onProgress,.5,1)}function F$(n,e){var t;const r=e.fetchFunc==null?j().platform.fetch:e.fetchFunc;let s=0,o;return(t=e.onProgress)===null||t===void 0||t.call(e,0),new ReadableStream({pull:async a=>{for(var i;s<n.length;){o||(o=(await r(n[s],e.requestInit,{isBinary:!0})).body.getReader());const{done:u,value:c}=await o.read();if(u){s++,o=void 0,(i=e.onProgress)===null||i===void 0||i.call(e,s/n.length);continue}a.enqueue(c);return}a.close()}})}async function P$(n,e="",t,r){return xm(a=>ym(a,{requestInit:r}))(n,e,t)}function xm(n){return async(e,t="",r)=>{const s=e.map(()=>!1),o={},a=r!=null?r.map(()=>!1):[],i=[];if(e.forEach((p,f)=>{let x=0;p.weights.forEach(y=>{const b="quantization"in y?y.quantization.dtype:y.dtype,S=zr[b]*ne(y.shape),I=()=>{s[f]=!0,o[f]==null&&(o[f]=[]),o[f].push({manifestEntry:y,groupOffset:x,sizeBytes:S})};r!=null?r.forEach((k,P)=>{k===y.name&&(I(),a[P]=!0)}):I(),i.push(y.name),x+=S})}),!a.every(p=>p)){const p=r.filter((f,x)=>!a[x]);throw new Error(`Could not find weights in manifest with names: ${p.join(", ")}. 
Manifest JSON has weights with names: ${i.join(", ")}.`)}const u=s.reduce((p,f,x)=>(f&&p.push(x),p),[]),c=[];u.forEach(p=>{e[p].paths.forEach(f=>{const x=t+(t.endsWith("/")?"":"/")+f;c.push(x)})});const l=await n(c),h={};let d=0;return u.forEach(p=>{const f=e[p].paths.length,x=new bn(l.slice(d,d+f));o[p].forEach(b=>{const S=x.slice(b.groupOffset,b.groupOffset+b.sizeBytes),I=ff(S,[b.manifestEntry]);for(const k in I)h[k]=I[k]}),d+=f}),h}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L$="application/octet-stream",B$="application/json";class cc{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(_(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=j().platform.fetch,_(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&_(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const r=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],s=yf(e,r);if(t.body.append("model.json",new Blob([JSON.stringify(s)],{type:B$}),"model.json"),e.weightData!=null){const a=bn.join(e.weightData);t.body.append("model.weights.bin",new Blob([a],{type:L$}),"model.weights.bin")}const o=await this.fetch(this.path,t);if(o.ok)return{modelArtifactsInfo:Ro(e),responses:[o]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${o.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}const r=t.modelTopology,s=t.weightsManifest;if(r==null&&s==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const e=await this.loadModelJSON();return Xu(e,t=>this.loadWeights(t))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),r=cu(e.weightsManifest),s=()=>F$(t,this.loadOptions);return Object.assign(Object.assign({},e),{weightSpecs:r,getWeightStream:s})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[r,s]=V$(t),o=this.weightPathPrefix||r,a=[],i=[];for(const u of e)for(const c of u.paths)this.weightUrlConverter!=null?i.push(this.weightUrlConverter(c)):a.push(o+c+s);return this.weightUrlConverter&&a.push(...await Promise.all(i)),a}async loadWeights(e){const t=await this.getWeightUrls(e),r=cu(e),s=await ym(t,this.loadOptions);return[r,s]}}cc.URL_SCHEME_REGEX=/^https?:\/\//;function V$(n){const e=n.lastIndexOf("/"),t=n.lastIndexOf("?"),r=n.substring(0,e),s=t>e?n.substring(t):"";return[r+"/",s]}function xu(n){return n.match(cc.URL_SCHEME_REGEX)!=null}const bm=(n,e)=>{if(typeof fetch>"u"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(n)?t=n.every(r=>xu(r)):t=xu(n),t)return lc(n,e)}return null};He.registerSaveRouter(bm);He.registerLoadRouter(bm);function lc(n,e){return new cc(n,e)}function M$(n,e){return lc(n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ri{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class wm{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class U${constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function W$(n,e,t,r){const s=arguments;return new U$(vm(...s))}function vm(n,e,t,r){return arguments.length===1?n.modelTopology!=null||n.weightSpecs!=null?new Ri(n):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Ri({modelTopology:n})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Ri({modelTopology:n,weightSpecs:e,weightData:t,trainingConfig:r}))}function z$(n){return new wm(n)}function G$(n){return new wm(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $m=Object.freeze(Object.defineProperty({__proto__:null,CompositeArrayBuffer:bn,browserFiles:D$,browserHTTPRequest:M$,concatenateArrayBuffers:W2,copyModel:l0,decodeWeights:ff,decodeWeightsStream:gf,encodeWeights:P2,fromMemory:W$,fromMemorySync:vm,getLoadHandlers:Y2,getModelArtifactsForJSON:Xu,getModelArtifactsForJSONSync:xf,getModelArtifactsInfoForJSON:Ro,getSaveHandlers:q2,getWeightSpecs:cu,http:lc,isHTTPScheme:xu,listModels:u0,loadWeights:P$,moveModel:h0,registerLoadRouter:X2,registerSaveRouter:K2,removeModel:c0,weightsLoaderFactory:xm,withSaveHandler:z$,withSaveHandlerSync:G$},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let kr;function j$(n,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(n==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let t=!1,r=!1,s=!1,o=!1,a=!1,i=!1;if(n.data instanceof Uint8Array)t=!0;else if(typeof ImageData<"u"&&n instanceof ImageData)r=!0;else if(typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement)s=!0;else if(typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement)o=!0;else if(n.getContext!=null)a=!0;else if(typeof ImageBitmap<"u"&&n instanceof ImageBitmap)i=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${n.constructor.name}`);if(ru(Ji,U.backendName)!=null){const f={pixels:n},x={numChannels:e};return U.runKernel(Ji,f,x)}const[c,l]=s?[n.videoWidth,n.videoHeight]:[n.width,n.height];let h;if(a)h=n.getContext("2d").getImageData(0,0,c,l).data;else if(r||t)h=n.data;else if(o||s||i){if(kr==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")kr=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else kr=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});kr.canvas.width=c,kr.canvas.height=l,kr.drawImage(n,0,0,c,l),h=kr.getImageData(0,0,c,l).data}let d;if(e===4)d=new Int32Array(h);else{const f=c*l;d=new Int32Array(f*e);for(let x=0;x<f;x++)for(let y=0;y<e;++y)d[x*e+y]=h[x*4+y]}return am(d,[l,c,e],"int32")}function H$(n){if(n.rank!==2&&n.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const e=n.rank===2?1:n.shape[2];if(e>4||e===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${e}`);if(n.dtype!=="float32"&&n.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`)}async function Cm(n,e){let t=E(n,"img","toPixels");if(!(n instanceof Qe)){const c=t;t=je(c,"int32"),c.dispose()}H$(t);const[r,s]=t.shape.slice(0,2),o=t.rank===2?1:t.shape[2],a=await t.data(),i=t.dtype==="float32"?255:1,u=new Uint8ClampedArray(s*r*4);for(let c=0;c<r*s;++c){const l=[0,0,0,255];for(let d=0;d<o;d++){const p=a[c*o+d];if(t.dtype==="float32"){if(p<0||p>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${p}.`)}else if(t.dtype==="int32"&&(p<0||p>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${p}.`);o===1?(l[0]=p*i,l[1]=p*i,l[2]=p*i):l[d]=p*i}const h=c*4;u[h+0]=Math.round(l[0]),u[h+1]=Math.round(l[1]),u[h+2]=Math.round(l[2]),u[h+3]=Math.round(l[3])}return t!==n&&t.dispose(),u}const Sm=L({fromPixels_:j$});function Tm(n,e){const t=n.shape.length,r=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[r-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[r-1]} vs. ${t}`);if(ne(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const s=e.shape,o=s[s.length-1];let a=1;for(let h=0;h<s.length-1;++h)a*=s[h];const i=n.shape,u=s.slice();u.pop();let c=1;for(let h=o;h<t;++h)c*=i[h],u.push(i[h]);const l=[...lt(n.shape).map(h=>h/c),1].slice(0,o);return[u,a,c,l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bu=-2,K$=-1;function Nm(n,e,t){const r=n.shape.length;_(r===e.length,()=>`Error in slice${r}D: Length of begin ${e} must match the rank of the array (${r}).`),_(r===t.length,()=>`Error in slice${r}D: Length of size ${t} must match the rank of the array (${r}).`);for(let s=0;s<r;++s)_(e[s]+t[s]<=n.shape[s],()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${e[s]+t[s]}) would overflow input.shape[${s}] (${n.shape[s]})`)}function X$(n){const e=[];let t=0;for(;n>0;)n&1&&e.push(t),n/=2,t++;return e}function Em(n,e,t){const r=[];for(let s=0;s<n.length;s++)r[s]=Math.ceil((e[s]-n[s])/t[s]);return r}function Im(n,e,t,r){const s=[...n];for(let o=s.length;o<r.length;o++)s.push(1);for(let o=0;o<t;o++)o===0?s[e]=1:(s.splice(e,0,1),s.pop());return s}function km(n,e,t){return t<=n?t:t-(e-1)}function Rm(n,e){const t=[];for(let r=0;r<n;r++)t.push(e+r);return t}function q$(n,e,t,r,s,o,a,i,u){const c=n.length;let l=new Array(c),h=new Array(c),d=new Array(c);if(e.length&&t>0){const p=e[0],f=t+1;l=_m(a,p,f,r,n),h=Am(i,p,f,s,n),d=Im(o,p,f,n)}else for(let p=0;p<c;p++)l[p]=Dm(a,r,o,n,p,u),h[p]=Fm(i,s,o,n,p,u),d[p]=Om(o,p,u);return{begin:l,end:h,strides:d}}function _m(n,e,t,r,s){const o=[...s],a=Rm(t,e);for(let i=0;i<o.length;i++)if(a.indexOf(i)>-1)o[i]=0;else{const u=km(e,t,i);let c=r[u];n&1<<u&&(c=0),o[i]=c}return o}function Am(n,e,t,r,s){const o=[...s],a=Rm(t,e);for(let i=0;i<o.length;i++)if(a.indexOf(i)>-1)o[i]=Number.MAX_SAFE_INTEGER;else{const u=km(e,t,i);let c=r[u];n&1<<u&&(c=Number.MAX_SAFE_INTEGER),o[i]=c}for(let i=0;i<o.length;i++){const u=s[i];o[i]<0&&(o[i]+=u),o[i]=Ea(0,o[i],s[i])}return o}function Om(n,e,t){let r=n[e];return(t&1<<e||r==null)&&(r=1),r}function Dm(n,e,t,r,s,o){let a=e[s];const i=t[s]||1;(n&1<<s||o&1<<s||a==null)&&(i>0?a=Number.MIN_SAFE_INTEGER:a=Number.MAX_SAFE_INTEGER);const u=r[s];return a<0&&(a+=u),a=Ea(0,a,u-1),a}function Fm(n,e,t,r,s,o){let a=e[s];const i=t[s]||1;(n&1<<s||o&1<<s||a==null)&&(i>0?a=Number.MAX_SAFE_INTEGER:a=Number.MIN_SAFE_INTEGER);const u=r[s];return a<0&&(a+=u),i>0?a=Ea(0,a,u):a=Ea(-1,a,u-1),a}function hc(n,e,t){let r=t.length;for(let s=0;s<t.length;s++)if(t[s]>1){r=s;break}for(let s=r+1;s<t.length;s++)if(e[s]>0||t[s]!==n[s])return!1;return!0}function dc(n,e){let t=n.length>0?n[n.length-1]:1;for(let r=0;r<n.length-1;r++)t+=n[r]*e[r];return t}function Pm(n,e,t){let r;const s=n.shape.length;typeof e=="number"?r=[e,...new Array(s-1).fill(0)]:e.length<s?r=e.concat(new Array(s-e.length).fill(0)):r=e.slice(),r.forEach(a=>{_(a!==-1,()=>"slice() does not support negative begin indexing.")});let o;return t==null?o=new Array(s).fill(-1):typeof t=="number"?o=[t,...new Array(s-1).fill(-1)]:t.length<s?o=t.concat(new Array(s-t.length).fill(-1)):o=t,o=o.map((a,i)=>a>=0?a:(_(a===-1,()=>`Negative size values should be exactly -1 but got ${a} for the slice() size at index ${i}.`),n.shape[i]-r[i])),[r,o]}function Lm(n,e,t,r,s,o,a,i,u){let c;if(r==null?(c=new Array(e.length),c.fill(1)):c=r,a!=null&&a&a-1)throw new Error("Multiple ellipses in slice is not allowed.");let l=!1;const h={dims:c.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:t.slice(),strides:c.slice(),beginMask:s,endMask:o,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:u};for(let I=0;I<h.dims;I++)l&&1<<I&i&&h.numAddAxisAfterEllipsis++,1<<I&a&&(l=!0);l||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};Y$(h,d);let p=!0,f=!0,x=!0;const y=[],b=[];for(let I=0;I<n.length;++I){if(d.strides[I]===0)throw Error(`strides[${I}] must be non-zero`);const k=!!(d.shrinkAxisMask&1<<I),P=n[I];if(P===-1){y.push(k?1:-1);continue}const W=[d.beginMask&1<<I,d.endMask&1<<I],H=[d.strides[I]>0?0:-1,d.strides[I]>0?P:P-1];if(k&&d.strides[I]<=0)throw Error("only stride 1 allowed on non-range indexing.");x=x&&d.strides[I]===1;const G=!!(d.beginMask&1<<I&&d.endMask&1<<I);if(d.beginValid&&d.endValid){if(k){const q=d.begin[I]<0?P+d.begin[I]:d.begin[I];if(d.begin[I]=q,d.end[I]=d.begin[I]+1,q<0||q>=P)throw Error(`slice index ${d.begin[I]} of dimension ${I} out of bounds.`)}else d.begin[I]=tl(d.begin[I],0,d.strides[I],P,W,H),d.end[I]=tl(d.end[I],1,d.strides[I],P,W,H);const R=d.strides[I]===1&&d.begin[I]===0&&d.end[I]===P;p=p&&R,f=f&&(I===0&&d.strides[I]===1||R)}else p=p&&d.strides[I]===1&&G,f=f&&(I===0&&d.strides[I]===1||G);let B,V=!1;if(d.beginValid&&d.endValid?(B=d.end[I]-d.begin[I],V=!0):k?(B=1,V=!0):G&&P>=0&&(d.strides[I]<0?B=-P:B=P,V=!0),V){let R;B===0||B<0!=d.strides[I]<0?R=0:R=Math.trunc(B/d.strides[I])+(B%d.strides[I]!==0?1:0),y.push(R)}else y.push(-1)}for(let I=0;I<d.finalShapeGatherIndices.length;++I){const k=d.finalShapeGatherIndices[I];k>=0?b.push(y[k]):k===bu&&b.push(1)}return{finalShapeSparse:b.filter((I,k)=>d.finalShapeGatherIndices[k]!==bu),finalShape:b,isIdentity:p,sliceDim0:f,isSimpleSlice:x,begin:d.begin,end:d.end,strides:d.strides}}function Y$(n,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let t=0;e.beginValid=n.begin!=null,e.endValid=n.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let r=0;r<n.dims;r++)if(1<<r&n.ellipsisMask){const s=Math.min(e.dims-(n.dims-r)+1+n.numAddAxisAfterEllipsis,e.dims);for(;t<s;t++)e.begin[t]=0,e.end[t]=0,e.strides[t]=1,e.beginMask|=1<<t,e.endMask|=1<<t,e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[t]=r}else if(1<<r&n.newAxisMask)e.finalShapeGatherIndices.push(bu),e.finalShapeGatherIndicesSparse.push(-1);else{if(t===e.begin.length)throw Error(`Index out of range using input dim ${t}; input has only ${e.dims} dims, ${e.begin.length}.`);n.begin!=null&&(e.begin[t]=n.begin[r]),n.end!=null&&(e.end[t]=n.end[r]),e.strides[t]=n.strides[r],n.beginMask&1<<r&&(e.beginMask|=1<<t),n.endMask&1<<r&&(e.endMask|=1<<t),n.shrinkAxisMask&1<<r?(e.finalShapeGatherIndices.push(K$),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<t):(e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(r)),e.inputShapeGatherIndicesSparse[t]=r,t++}}function tl(n,e,t,r,s,o){if(s[e])return t>0?o[e]:o[e+1&1];{const a=n<0?r+n:n;return a<o[0]?o[0]:a>o[1]?o[1]:a}}const Q$=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:Nm,computeFlatOffset:dc,computeOutShape:Em,getNormalizedAxes:q$,isSliceContinous:hc,maskToAxes:X$,parseSliceParams:Pm,sliceInfo:Lm,startForAxis:Dm,startIndicesWithElidedDims:_m,stopForAxis:Fm,stopIndicesWithElidedDims:Am,stridesForAxis:Om,stridesWithElidedDims:Im},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z$=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n();function J$(){return new Promise(n=>Z$(()=>n()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bm(n,e){const t=n[0].length;n.forEach((s,o)=>{_(s.length===t,()=>`Error in concat${t}D: rank of tensors[${o}] must be the same as the rank of the rest (${t})`)}),_(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);const r=n[0];n.forEach((s,o)=>{for(let a=0;a<t;a++)_(a===e||s[a]===r[a],()=>`Error in concat${t}D: Shape of tensors[${o}] (${s}) does not match the shape of the rest (${r}) along the non-concatenated axis ${o}.`)})}function Yr(n,e){const t=n[0].slice();for(let r=1;r<n.length;r++)t[e]+=n[r][e];return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var fn;(function(n){n[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS"})(fn||(fn={}));function Vm(n,e,t){let r=new Array;if(t==null&&e==null)return r;if(e==null)for(;r.length<n+t.length;)r.push(-1);else r=e.slice();if(t==null)return r;if(n+t.length!==r.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${n+t.length}, but shape.rank = ${r.length}`);for(let s=1;s<t.length;++s){const o=t[s],a=r[r.length-t.length+s],i=r[a];if(o>=0)if(i>=0){if(i!==o)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${s+n}] = ${o} but shape[${s+n}] = ${i}`)}else r[a]=o}return r}function Mm(n){const e={FIRST_DIM_SIZE:fn.FIRST_DIM_SIZE,VALUE_ROWIDS:fn.VALUE_ROWIDS,ROW_LENGTHS:fn.ROW_LENGTHS,ROW_SPLITS:fn.ROW_SPLITS,ROW_LIMITS:fn.ROW_LIMITS,ROW_STARTS:fn.ROW_STARTS},t=[];for(const r of n)if(r in e)t.push(e[r]);else break;return t}function Um(n){return n.length===0?0:n[0]===fn.FIRST_DIM_SIZE?n.length-1:n.length}function Wm(n,e){if(n==null||e==null)return;const t=n.length,r=e.length;if(t>=r)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${t} must be less than ragged tensor input flatValues.rank = ${r})`);for(let s=0;s<Math.min(t,r-1);++s){const o=n[s],a=e[s+1];if(o>=0&&a>=0&&o!==1&&o!==a)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${s-n.length}] = ${o} but ragged tensor input.flatValues.shape[${s-n.length}] = ${a}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pc=30;function ai(n){return n<=pc?n:Yi(n,Math.floor(Math.sqrt(n)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zm(n,e,t){const r=t*(typeof n=="number"?n:n[0]),s=e*(typeof n=="number"?n:n[1]);return[r,s]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fc(n,e,t,r=!0){let s=[];if(r)s=s.concat(e.slice(0)),s.push(n[0]/t),s=s.concat(n.slice(1));else{s=s.concat(n[0]);const o=e.length;for(let a=0;a<o;++a)s=s.concat([n[a+1]/e[a],e[a]]);s=s.concat(n.slice(o+1))}return s}function mc(n,e,t=!0){const r=[];if(t){r.push(e);for(let s=e+1;s<n;++s)s<=2*e?(r.push(s),r.push(s-(e+1))):r.push(s)}else{const s=[],o=[];for(let a=1;a<n;++a)a>=e*2+1||a%2===1?o.push(a):s.push(a);r.push(...s),r.push(0),r.push(...o)}return r}function gc(n,e,t,r=!0){const s=[];r?s.push(n[0]/t):s.push(n[0]*t);for(let o=1;o<n.length;++o)o<=e.length?r?s.push(e[o-1]*n[o]):s.push(n[o]/e[o-1]):s.push(n[o]);return s}function Gm(n,e){const t=[0];for(let r=0;r<e;++r)t.push(n[r][0]);return t}function jm(n,e,t){const r=n.slice(0,1);for(let s=0;s<t;++s)r.push(n[s+1]-e[s][0]-e[s][1]);return r}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hm=1.7580993408473768,Km=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xm=.3275911,qm=.254829592,Ym=-.284496736,Qm=1.421413741,Zm=-1.453152027,Jm=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wu(n,e){if(n.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${e.length}.`);const t=new Float32Array(n.length*2);for(let r=0;r<t.length;r+=2)t[r]=n[r/2],t[r+1]=e[r/2];return t}function eC(n){const e=new Float32Array(n.length/2),t=new Float32Array(n.length/2);for(let r=0;r<n.length;r+=2)e[r/2]=n[r],t[r/2]=n[r+1];return{real:e,imag:t}}function tC(n){const e=Math.ceil(n.length/4),t=new Float32Array(e),r=new Float32Array(e);for(let s=0;s<n.length;s+=4)t[Math.floor(s/4)]=n[s],r[Math.floor(s/4)]=n[s+1];return{real:t,imag:r}}function nC(n){const e=Math.floor(n.length/4),t=new Float32Array(e),r=new Float32Array(e);for(let s=2;s<n.length;s+=4)t[Math.floor(s/4)]=n[s],r[Math.floor(s/4)]=n[s+1];return{real:t,imag:r}}function rC(n,e){const t=n[e*2],r=n[e*2+1];return{real:t,imag:r}}function sC(n,e,t,r){n[r*2]=e,n[r*2+1]=t}function oC(n,e){const t=new Float32Array(n/2),r=new Float32Array(n/2);for(let s=0;s<Math.ceil(n/2);s++){const o=(e?2:-2)*Math.PI*(s/n);t[s]=Math.cos(o),r[s]=Math.sin(o)}return{real:t,imag:r}}function aC(n,e,t){const r=(t?2:-2)*Math.PI*(n/e),s=Math.cos(r),o=Math.sin(r);return{real:s,imag:o}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _i="->",iC=/->/g,nl=",",rl="...";function e1(n,e){n=n.replace(/\s/g,"");const t=(n.length-n.replace(iC,"").length)/_i.length;if(t<1)throw new Error("Equations without an arrow are not supported.");if(t>1)throw new Error(`Equation must contain exactly one arrow ("${_i}").`);const[r,s]=n.split(_i);_(r.indexOf(rl)===-1,()=>`The ellipsis notation ("${rl}") is not supported yet.`);const o=r.split(nl),a=o.length;if(e!==a)throw new Error(`Expected ${a} input tensors, received ${e}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let d=0;d<s.length;++d){const p=s[d];if(!o.some(f=>f.indexOf(p)!==-1))throw new Error(`Output subscripts contain the label ${p} not present in the input subscripts.`);i.indexOf(p)===-1&&i.push(p)}for(let d=0;d<r.length;++d){const p=r[d];i.indexOf(p)===-1&&p!==nl&&i.push(p)}const u=new Array(o.length);for(let d=0;d<a;++d){if(new Set(o[d].split("")).size!==o[d].length)throw new Error(`Found duplicate axes in input component ${o[d]}. Support for duplicate axes in input is not implemented yet.`);u[d]=[];for(let p=0;p<o[d].length;++p)u[d].push(i.indexOf(o[d][p]))}const c=i.length,l=s.length,h=[];for(let d=l;d<c;++d)h.push(d);return{allDims:i,summedDims:h,idDims:u}}function t1(n,e){let t=new Array(n);t.fill(-1);for(let s=0;s<e.length;++s)t[e[s]]=s;const r=[];for(let s=0;s<n;++s)t[s]===-1&&r.push(s);return t=t.filter(s=>s!==-1),{permutationIndices:t,expandDims:r}}function n1(n,e,t){const r=new Array(n);for(let s=0;s<t.length;++s){const o=t[s].shape;for(let a=0;a<e[s].length;++a)r[e[s][a]]===void 0?r[e[s][a]]=o[a]:_(r[e[s][a]]===o[a],()=>`Expected dimension ${r[e[s][a]]} at axis ${a} of input shaped ${JSON.stringify(o)}, but got dimension ${o[a]}`)}}function r1(n,e){const t=n,r=[];let s=0;n.length===0&&t.push(-1),s=n.length+1;for(let a=0;a<s;++a)r.push([]);const o=[];for(let a=0;a<t.length;++a){const i=t[a],u=uC(e,i);for(const c of u)o.indexOf(c)===-1&&(r[a].push(c),o.push(c))}return{path:t,steps:r}}function s1(n){return n.every((e,t)=>e===t)}function uC(n,e){const t=[];for(let r=0;r<n.length;++r)(n[r].length===0||n[r].indexOf(e)!==-1||e===-1)&&t.push(r);return t}function o1(n,e,t=0){let r=[];if(typeof e=="number")_(n.shape[t]%e===0,()=>"Number of splits must evenly divide the axis."),r=new Array(e).fill(n.shape[t]/e);else{const s=e.reduce((a,i)=>(i===-1&&(a+=1),a),0);_(s<=1,()=>"There should be only one negative value in split array.");const o=e.indexOf(-1);if(o!==-1){const a=e.reduce((i,u)=>u>0?i+u:i);e[o]=n.shape[t]-a}_(n.shape[t]===e.reduce((a,i)=>a+i),()=>"The sum of sizes must match the size of the axis dimension."),r=e}return r}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a1(n){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${n}`}function i1(n,e){return`indices(${n}, 0) is invalid: ${e} < 0`}function u1(n,e,t){return`indices(${n}, 0) is invalid: ${e} >= ${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c1(n,e){return`only one output dimension may be -1, not both ${n} and ${e}`}function l1(n,e){return`size ${n} must be non-negative, not ${e}`}function h1(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function d1(n,e){const t=ne(n),r=ne(e);return`Input to reshape is a SparseTensor with ${t}
  dense values, but the requested shape requires a multiple of ${r}. inputShape=${n} outputShape= ${e}`}function p1(n,e){const t=ne(n),r=ne(e);return`Input to reshape is a tensor with ${t} dense values, but the requested shape has ${r}. inputShape=${n} outputShape=${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vu(){return"segment ids must be >= 0"}function f1(){return"segment ids are not increasing"}function m1(n,e){return`Segment id ${n} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function g1(n,e,t){return`Bad: indices[${n}] == ${e} out of range [0, ${t})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y1(n,e){let t=!1,r;for(n<=pc?(r=n,t=!0):r=Yi(n,Math.floor(Math.sqrt(n)));!t;)r>e||r===n?t=!0:r=Yi(n,r+1);return r}function x1(n,e,t){const r=[],s=n.length;for(let o=0;o<s;o++)o!==e?r.push(n[o]):r.push(t);return r}function b1(n,e,t,r){const s=e.shape.length,o=n.shape.length;if(r!==0&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>o)throw new Error(`batchDims (${r}) must be less than rank(x) (
    ${o}).`);if(t<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${t}).`);for(let h=0;h<r;++h)if(n.shape[h]!==e.shape[h])throw new Error(`x.shape[${h}]: ${n.shape[h]} should be equal to indices.shape[${h}]: ${e.shape[h]}.`);const a=n.shape[t],i=[];let u=1,c=1,l=1;for(let h=0;h<r;++h)i.push(n.shape[h]),u*=n.shape[h];for(let h=r;h<t;h++)i.push(n.shape[h]),c*=n.shape[h];for(let h=r;h<s;h++)i.push(e.shape[h]);for(let h=t+1;h<o;h++)i.push(n.shape[h]),l*=n.shape[h];return{batchSize:u,sliceSize:l,outerSize:c,dimSize:a,outputShape:i}}const cC=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:b1,computeOutShape:x1,segOpComputeOptimalWindowSize:y1},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Es(n){try{return n.map(e=>Ss(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function w1(n){return n.map(e=>Vr(e))}const lC=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:qm,ERF_A2:Ym,ERF_A3:Qm,ERF_A4:Zm,ERF_A5:Jm,ERF_P:Xm,PARALLELIZE_THRESHOLD:pc,get RowPartitionType(){return fn},SELU_SCALE:Km,SELU_SCALEALPHA:Hm,applyActivation:si,assertAndGetBroadcastShape:De,assertAxesAreInnerMostDims:wn,assertParamsConsistent:Bm,assignToTypedArray:sC,axesAreInnerMostDims:Qu,calculateShapes:ti,checkEinsumDimSizes:n1,checkPadOnDimRoundingMode:sn,combineLocations:Lf,combineRaggedTensorToTensorShapes:Vm,complexWithEvenIndex:tC,complexWithOddIndex:nC,computeConv2DInfo:Ht,computeConv3DInfo:Ao,computeDefaultPad:qu,computeDilation2DInfo:If,computeOptimalWindowSize:ai,computeOutAndReduceShapes:Rn,computeOutShape:Yr,computePool2DInfo:Jr,computePool3DInfo:_o,convertConv2DDataFormat:As,decodeEinsumEquation:e1,eitherStridesOrDilationsAreOne:Pt,expandShapeToKeepDim:Kt,exponent:aC,exponents:oC,fromStringArrayToUint8:w1,fromUint8ToStringArray:Es,getAxesPermutation:on,getBroadcastDims:Aa,getComplexWithIndex:rC,getEinsumComputePath:r1,getEinsumPermutation:t1,getFusedBiasGradient:ri,getFusedDyActivation:ni,getImageCenter:zm,getInnerMostAxes:an,getPermuted:mc,getRaggedRank:Um,getReductionAxes:Df,getReshaped:fc,getReshapedPermuted:gc,getRowPartitionTypesHelper:Mm,getSliceBeginCoords:Gm,getSliceSize:jm,getSparseFillEmptyRowsIndicesDenseShapeMismatch:a1,getSparseFillEmptyRowsNegativeIndexErrorMessage:i1,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:u1,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:h1,getSparseReshapeInputOutputMismatchErrorMessage:p1,getSparseReshapeInputOutputMultipleErrorMessage:d1,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:c1,getSparseReshapeNegativeOutputDimErrorMessage:l1,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:g1,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:vu,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:f1,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:m1,getUndoAxesPermutation:Zu,isIdentityPermutation:s1,log:o2,mergeRealAndImagArrays:wu,prepareAndValidate:Tm,prepareSplitSize:o1,segment_util:cC,shouldFuse:oi,slice_util:Q$,splitRealAndImagArrays:eC,stridesOrDilationsArePositive:Hr,tupleValuesAreOne:bo,upcastType:kn,validateDefaultValueShape:Wm,validateInput:ac,validateUpdateShape:im,warn:mn},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */E$();/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hC=j();hC.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var Ot;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF"})(Ot||(Ot={}));var sl;(function(n){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(sl||(sl={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dC={};function v1(n){return dC[n]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w(n,e,t,r,s){const o=e.inputParams[n];if(o&&o.inputIndexStart!==void 0){const i=o.inputIndexStart,u=o.inputIndexEnd===0?void 0:o.inputIndexEnd===void 0?i+1:o.inputIndexEnd,c=i<0?e.inputNames.length+i:i;if(o.type==="tensor")return ut(e.inputNames[c],t,r,s);if(o.type==="tensors"){const d=e.inputs.slice(i,u);return e.inputNames.slice(i,u).filter((f,x)=>{var y;return((y=d[x])===null||y===void 0?void 0:y.op)!=="NoOp"}).map(f=>ut(f,t,r,s))}const l=ut(e.inputNames[c],t,r,s),h=l.dataSync();return o.type==="number"?h[0]:Qi(l.shape,h)}const a=e.attrParams[n];return a&&a.value}function ut(n,e,t,r){const[s,o]=Dt(n,t);if(r!=null){const i=r.getHashTableHandleByName(s);if(i!=null)return i}const a=t.currentContextIds.find(i=>!!e[La(s,i)]);return a!==void 0?e[La(s,a)][o]:void 0}function ol(n,e,t){return e[La(n,t.currentContextId)]}function Dn(n,e){const[t,r,s]=Dt(n,e);return[La(t,e&&e.currentContextId),r,s]}function La(n,e){return e?`${n}-${e}`:n}function Dt(n,e){if(n==="")return["",0,void 0];const t=e!=null&&e.parseNodeNameCache!=null;if(t){const o=e.parseNodeNameCache.get(n);if(o!=null)return o}const r=n.split(":");let s;if(r.length===1)s=[n,0,void 0];else{const o=r[0],a=r.length===3?r[1]:void 0,i=Number(r[r.length-1]);s=[o,i,a]}return t&&e.parseNodeNameCache.set(n,s),s}function Ta(n,e,t){let r=w("pad",n,e,t);if(r==="explicit"){r=w("explicitPaddings",n,e,t);const s=[[0,0],[0,0],[0,0],[0,0]];for(let o=0;o<4;o++)s[o][0]=r[o*2],s[o][1]=r[o*2+1];return s}return r}function Fn(n){return n.kept?n:ir(n)}/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pC=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],fC=Object.freeze(Object.defineProperty({__proto__:null,json:pC},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mC=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],gC=Object.freeze(Object.defineProperty({__proto__:null,json:mC},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yC=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],xC=Object.freeze(Object.defineProperty({__proto__:null,json:yC},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bC=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],wC=Object.freeze(Object.defineProperty({__proto__:null,json:bC},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vC=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],$C=Object.freeze(Object.defineProperty({__proto__:null,json:vC},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CC=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],SC=Object.freeze(Object.defineProperty({__proto__:null,json:CC},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TC=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],NC=Object.freeze(Object.defineProperty({__proto__:null,json:TC},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EC=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],IC=Object.freeze(Object.defineProperty({__proto__:null,json:EC},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kC=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],RC=Object.freeze(Object.defineProperty({__proto__:null,json:kC},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _C=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],AC=Object.freeze(Object.defineProperty({__proto__:null,json:_C},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OC=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],DC=Object.freeze(Object.defineProperty({__proto__:null,json:OC},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FC=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],PC=Object.freeze(Object.defineProperty({__proto__:null,json:FC},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LC=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],BC=Object.freeze(Object.defineProperty({__proto__:null,json:LC},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VC=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],MC=Object.freeze(Object.defineProperty({__proto__:null,json:VC},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UC=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],WC=Object.freeze(Object.defineProperty({__proto__:null,json:UC},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zC=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],GC=Object.freeze(Object.defineProperty({__proto__:null,json:zC},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jC=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],HC=Object.freeze(Object.defineProperty({__proto__:null,json:jC},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KC=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],XC=Object.freeze(Object.defineProperty({__proto__:null,json:KC},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qC=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],YC=Object.freeze(Object.defineProperty({__proto__:null,json:qC},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class al{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[fC,gC,xC,wC,$C,SC,NC,IC,RC,AC,DC,PC,BC,MC,WC,GC,HC,XC,YC],t=[].concat(...e.map(r=>r.json));this.opMappers=t.reduce((r,s)=>(r[s.tfOpName]=s,r),{})}transformGraph(e,t={}){const r=e.node,s=[],o=[],a=[],i=r.reduce((x,y)=>(x[y.name]=this.mapNode(y),y.op.startsWith("Placeholder")?s.push(x[y.name]):y.op==="Const"?o.push(x[y.name]):(y.input==null||y.input.length===0)&&a.push(x[y.name]),x),{});let u=[];const c=[];let l={},h={};t!=null&&(l=this.mapSignatureEntries(t.inputs),h=this.mapSignatureEntries(t.outputs));const d=Object.keys(i);d.forEach(x=>{const y=i[x];y.inputNames.forEach((b,S)=>{const[I,,k]=Dn(b),P=i[I];if(P.outputs!=null){const W=P.outputs.indexOf(k);if(W!==-1){const H=`${I}:${W}`;y.inputNames[S]=H}}y.inputs.push(P),P.children.push(y)})}),Object.keys(h).length===0?d.forEach(x=>{const y=i[x];y.children.length===0&&c.push(y)}):Object.keys(h).forEach(x=>{const[y]=Dn(x),b=i[y];b!=null&&(b.signatureKey=h[x],c.push(b))}),Object.keys(l).length>0?Object.keys(l).forEach(x=>{const[y]=Dn(x),b=i[y];b&&(b.signatureKey=l[x],u.push(b))}):u=s;let p={};e.library!=null&&e.library.function!=null&&(p=e.library.function.reduce((x,y)=>(x[y.signature.name]=this.mapFunction(y),x),{}));const f={nodes:i,inputs:u,outputs:c,weights:o,placeholders:s,signature:t,functions:p};return a.length>0&&(f.initNodes=a),f}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,r)=>(t[e[r].name]=r,t),{})}mapNode(e){const t=v1(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});const r={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(s=>s.startsWith("^")?s.slice(1):s),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(r.inputParams=t.inputs.reduce((s,o)=>(s[o.name]={type:o.type,inputIndexStart:o.start,inputIndexEnd:o.end},s),{})),t.attrs!=null&&(r.attrParams=t.attrs.reduce((s,o)=>{const a=o.type;let i;switch(o.type){case"string":i=$u(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=$u(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"string[]":i=ku(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=ku(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"number":i=Su(e.attr,o.tfName,o.defaultValue||0),i===void 0&&o.tfDeprecatedName&&(i=Su(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"number[]":i=Iu(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=Iu(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool":i=Cu(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=Cu(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool[]":i=_u(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=_u(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape":i=Eu(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=Eu(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape[]":i=Ru(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=Ru(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype":i=Tu(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=Tu(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype[]":i=Nu(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=Nu(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"func":i=il(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=il(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${o.type} for op: ${e.op}`)}return s[o.name]={value:i,type:a},s},{})),r}mapFunction(e){const t=e.nodeDef,r=[],s=[];let o={};t!=null&&(o=t.reduce((h,d)=>(h[d.name]=this.mapNode(d),d.op==="Const"&&s.push(h[d.name]),h),{}));const a=[],i=[];e.signature.inputArg.forEach(h=>{const[d]=Dn(h.name),p={name:d,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:yc(h.type),type:"dtype"}},children:[]};p.signatureKey=h.name,a.push(p),o[d]=p}),Object.keys(o).forEach(h=>{const d=o[h];d.inputNames.forEach((p,f)=>{const[x,,y]=Dn(p),b=o[x];if(b.outputs!=null){const S=b.outputs.indexOf(y);if(S!==-1){const I=`${x}:${S}`;d.inputNames[f]=I}}d.inputs.push(b),b.children.push(d)})});const c=e.ret;e.signature.outputArg.forEach(h=>{const[d,p]=Dn(c[h.name]),f=o[d];f!=null&&(f.defaultOutput=p,i.push(f))});const l=this.mapArgsToSignature(e);return{nodes:o,inputs:a,outputs:i,weights:s,placeholders:r,signature:l}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,r)=>(t[r.name]=this.mapArgToTensorInfo(r),t),{}),outputs:e.signature.outputArg.reduce((t,r)=>(t[r.name]=this.mapArgToTensorInfo(r,e.ret),t),{})}}mapArgToTensorInfo(e,t){let r=e.name;return t!=null&&(r=t[r]),{name:r,dtype:e.type}}}function QC(n){const e=j().global;if(typeof e.atob<"u")return e.atob(n);if(typeof Buffer<"u")return new Buffer(n,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function $1(n,e){const t=Array.isArray(n)?String.fromCharCode.apply(null,n):QC(n);return e?t:t.toLowerCase()}function $u(n,e,t,r=!1){const s=n[e];return s!=null?$1(s.s,r):t}function Cu(n,e,t){const r=n[e];return r?r.b:t}function Su(n,e,t){const r=n[e]||{},s=r.i!=null?r.i:r.f!=null?r.f:t;return typeof s=="number"?s:parseInt(s,10)}function yc(n){switch(typeof n=="string"&&(n=Ot[n]),n){case Ot.DT_FLOAT:case Ot.DT_HALF:return"float32";case Ot.DT_INT32:case Ot.DT_INT64:case Ot.DT_INT8:case Ot.DT_UINT8:return"int32";case Ot.DT_BOOL:return"bool";case Ot.DT_DOUBLE:return"float32";case Ot.DT_STRING:return"string";case Ot.DT_COMPLEX64:case Ot.DT_COMPLEX128:return"complex64";default:return null}}function il(n,e,t){const r=n[e];return r&&r.func?r.func.name:t}function Tu(n,e,t){const r=n[e];return r&&r.type?yc(r.type):t}function Nu(n,e,t){const r=n[e];return r&&r.list&&r.list.type?r.list.type.map(s=>yc(s)):t}function C1(n){if(!n.unknownRank)return n.dim!=null?n.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function Eu(n,e,t){const r=n[e];return r&&r.shape?C1(r.shape):t}function Iu(n,e,t){const r=n[e];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(s=>typeof s=="number"?s:parseInt(s,10)):t}function ku(n,e,t,r=!1){const s=n[e];return s&&s.list&&s.list.s?s.list.s.map(o=>$1(o,r)):t}function Ru(n,e,t){const r=n[e];return r&&r.list&&r.list.shape?r.list.shape.map(s=>C1(s)):t}function _u(n,e,t){const r=n[e];return r&&r.list&&r.list.b?r.list.b:t}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZC{constructor(e,t,r){this.node=e,this.tensorMap=t,this.context=r,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(s=>this.getInput(s)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((s,o)=>(s[o]=this.getAttr(o),s),{}))}getInput(e){return ut(e,this.tensorMap,this.context)}getAttr(e,t){const r=this.node.rawAttrs[e];if(r.tensor!=null)return ut(e,this.tensorMap,this.context);if(r.i!=null||r.f!=null)return Su(this.node.rawAttrs,e,t);if(r.s!=null)return $u(this.node.rawAttrs,e,t);if(r.b!=null)return Cu(this.node.rawAttrs,e,t);if(r.shape!=null)return Eu(this.node.rawAttrs,e,t);if(r.type!=null)return Tu(this.node.rawAttrs,e,t);if(r.list!=null){if(r.list.i!=null||r.list.f!=null)return Iu(this.node.rawAttrs,e,t);if(r.list.s!=null)return ku(this.node.rawAttrs,e,t);if(r.list.shape!=null)return Ru(this.node.rawAttrs,e,t);if(r.list.b!=null)return _u(this.node.rawAttrs,e,t);if(r.list.type!=null)return Nu(this.node.rawAttrs,e,t)}return t}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dt=Object.freeze(Object.defineProperty({__proto__:null,OP_SCOPE_SUFFIX:pf,abs:Ut,acos:S0,acosh:N0,add:me,addN:I0,all:R0,any:A0,argMax:D0,argMin:P0,asin:B0,asinh:M0,atan:W0,atan2:G0,atanh:H0,avgPool:kf,avgPool3d:e3,basicLSTMCell:i3,batchNorm:qa,batchNorm2d:d3,batchNorm3d:f3,batchNorm4d:g3,batchToSpaceND:Rf,bincount:_f,bitwiseAnd:b3,booleanMaskAsync:ow,broadcastArgs:v3,broadcastTo:mo,buffer:qe,cast:je,ceil:S3,clipByValue:Af,clone:ir,complex:dr,concat:ht,concat1d:E3,concat2d:k3,concat3d:_3,concat4d:O3,conv1d:P3,conv2d:Ya,conv2dTranspose:V3,conv3d:U3,conv3dTranspose:j3,cos:K3,cosh:q3,cosineWindow:ic,cumprod:Q3,cumsum:J3,denseBincount:ty,depthToSpace:ry,depthwiseConv2d:Yu,diag:ay,dilation2d:uy,div:ke,divNoNan:py,dot:my,dropout:xw,einsum:xs,elu:Pf,enclosingPowerOfTwo:lm,ensureShape:by,equal:Ff,erf:vy,euclideanNorm:Ry,exp:Mn,expandDims:tn,expm1:Dy,eye:Vf,fft:sc,fill:Oo,floor:Mf,floorDiv:Ef,fused:Ow,gather:Uf,gatherND:mw,greater:Za,greaterEqual:Wf,ifft:Pa,imag:Ja,image:Ds,inTopKAsync:ww,irfft:rm,isFinite:zy,isInf:jy,isNaN:Ky,leakyRelu:zf,less:gu,lessEqual:Ju,linalg:d$,linspace:Qy,localResponseNormalization:Jy,log:vo,log1p:Gf,logSigmoid:a4,logSoftmax:c4,logSumExp:Hf,logicalAnd:Oa,logicalNot:Kf,logicalOr:Xf,logicalXor:m4,losses:p$,lowerBound:y4,matMul:Le,max:$s,maxPool:qf,maxPool3d:w4,maxPoolWithArgmax:$4,maximum:Yf,mean:Da,meshgrid:T4,min:mu,minimum:Fa,mirrorPad:I4,mod:R4,moments:A4,movingAverage:uw,mul:oe,multiRNNCell:D4,multinomial:P4,neg:In,norm:Qa,notEqual:Qf,oneHot:V4,ones:Br,onesLike:U4,op:L,outerProduct:z4,pad:Do,pad1d:H4,pad2d:X4,pad3d:Y4,pad4d:Z4,pool:rx,pow:wo,prelu:Jf,print:Nf,prod:ax,raggedGather:ux,raggedRange:lx,raggedTensorToTensor:dx,rand:fx,randomGamma:Px,randomNormal:em,randomStandardNormal:Vx,randomUniform:rc,randomUniformInt:Wx,range:$o,real:Co,reciprocal:jx,relu:ei,relu6:tm,reshape:Z,reverse:Xr,reverse1d:Yx,reverse2d:Zx,reverse3d:eb,reverse4d:nb,rfft:oc,round:nm,rsqrt:ob,scalar:Re,scatterND:lw,searchSorted:ec,selu:ib,separableConv2d:cb,setdiff1dAsync:hb,sigmoid:Mr,sign:pb,signal:h$,sin:mb,sinh:yb,slice:Se,slice1d:bb,slice2d:vb,slice3d:Cb,slice4d:Tb,softmax:Eb,softplus:jf,spaceToBatchND:Zf,sparse:f$,sparseToDense:pw,spectral:l$,split:So,sqrt:Vn,square:gn,squaredDifference:sm,squeeze:rt,stack:Wn,step:om,stridedSlice:Bb,string:m$,sub:Te,sum:Ge,tan:Mb,tanh:fu,tensor:En,tensor1d:gt,tensor2d:cr,tensor3d:am,tensor4d:Ub,tensor5d:Wb,tensor6d:zb,tensorScatterUpdate:jb,tile:go,topk:Kb,transpose:yu,truncatedNormal:qb,unique:Qb,unsortedSegmentSum:Jb,unstack:es,upperBound:tw,variable:nw,where:ur,whereAsync:cm,zeros:Kr,zerosLike:zt},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JC=(n,e,t,r=dt)=>{switch(n.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(w("a",n,e,t),w("b",n,e,t))];case"AddN":return[r.addN(w("tensors",n,e,t))];case"FloorMod":case"Mod":return[r.mod(w("a",n,e,t),w("b",n,e,t))];case"Mul":return[r.mul(w("a",n,e,t),w("b",n,e,t))];case"RealDiv":case"Div":return[r.div(w("a",n,e,t),w("b",n,e,t))];case"DivNoNan":return[r.divNoNan(w("a",n,e,t),w("b",n,e,t))];case"FloorDiv":return[r.floorDiv(w("a",n,e,t),w("b",n,e,t))];case"Sub":return[r.sub(w("a",n,e,t),w("b",n,e,t))];case"Minimum":return[r.minimum(w("a",n,e,t),w("b",n,e,t))];case"Maximum":return[r.maximum(w("a",n,e,t),w("b",n,e,t))];case"Pow":return[r.pow(w("a",n,e,t),w("b",n,e,t))];case"SquaredDifference":return[r.squaredDifference(w("a",n,e,t),w("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eS=(n,e,t,r=dt)=>{switch(n.op){case"Abs":case"ComplexAbs":return[r.abs(w("x",n,e,t))];case"Acos":return[r.acos(w("x",n,e,t))];case"Acosh":return[r.acosh(w("x",n,e,t))];case"Asin":return[r.asin(w("x",n,e,t))];case"Asinh":return[r.asinh(w("x",n,e,t))];case"Atan":return[r.atan(w("x",n,e,t))];case"Atan2":return[r.atan2(w("x",n,e,t),w("y",n,e,t))];case"Atanh":return[r.atanh(w("x",n,e,t))];case"Ceil":return[r.ceil(w("x",n,e,t))];case"Complex":return[r.complex(w("real",n,e,t),w("imag",n,e,t))];case"Cos":return[r.cos(w("x",n,e,t))];case"Cosh":return[r.cosh(w("x",n,e,t))];case"Elu":return[r.elu(w("x",n,e,t))];case"Erf":return[r.erf(w("x",n,e,t))];case"Exp":return[r.exp(w("x",n,e,t))];case"Expm1":return[r.expm1(w("x",n,e,t))];case"Floor":return[r.floor(w("x",n,e,t))];case"Log":return[r.log(w("x",n,e,t))];case"Log1p":return[r.log1p(w("x",n,e,t))];case"Imag":return[r.imag(w("x",n,e,t))];case"Neg":return[r.neg(w("x",n,e,t))];case"Reciprocal":return[r.reciprocal(w("x",n,e,t))];case"Real":return[r.real(w("x",n,e,t))];case"Relu":return[r.relu(w("x",n,e,t))];case"Round":return[r.round(w("x",n,e,t))];case"Selu":return[r.selu(w("x",n,e,t))];case"Sigmoid":return[r.sigmoid(w("x",n,e,t))];case"Sin":return[r.sin(w("x",n,e,t))];case"Sign":return[r.sign(w("x",n,e,t))];case"Sinh":return[r.sinh(w("x",n,e,t))];case"Softplus":return[r.softplus(w("x",n,e,t))];case"Sqrt":return[r.sqrt(w("x",n,e,t))];case"Square":return[r.square(w("x",n,e,t))];case"Tanh":return[r.tanh(w("x",n,e,t))];case"Tan":return[r.tan(w("x",n,e,t))];case"ClipByValue":return[r.clipByValue(w("x",n,e,t),w("clipValueMin",n,e,t),w("clipValueMax",n,e,t))];case"Relu6":return[r.relu6(w("x",n,e,t))];case"Rsqrt":return[r.rsqrt(ut(n.inputNames[0],e,t))];case"LeakyRelu":return[r.leakyRelu(w("x",n,e,t),w("alpha",n,e,t))];case"Prelu":return[r.prelu(w("x",n,e,t),w("alpha",n,e,t))];case"IsNan":return[r.isNaN(ut(n.inputNames[0],e,t))];case"IsInf":return[r.isInf(ut(n.inputNames[0],e,t))];case"IsFinite":return[r.isFinite(ut(n.inputNames[0],e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function en(n,e,t=""){if(!(typeof n=="number"||typeof e=="number")){_(n.length===e.length,()=>t+` Shapes ${n} and ${e} must match`);for(let r=0;r<n.length;r++){const s=n[r],o=e[r];_(s<0||o<0||s===o,()=>t+` Shapes ${n} and ${e} must match`)}}}function ul(n){return!(typeof n=="number"||n.some(e=>e<0))}function co(n,e,t){let r=Au(n,t);const s=!ul(r);if(s&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(s&&e.forEach(o=>{r=Au(o.shape,r)}),!ul(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function Au(n,e){if(typeof n=="number")return e;if(typeof e=="number")return n;if(n.length!==e.length)throw new Error(`Incompatible ranks during merge: ${n} vs. ${e}`);const t=[];for(let r=0;r<n.length;++r){const s=n[r],o=e[r];if(s>=0&&o>=0&&s!==o)throw new Error(`Incompatible shape during merge: ${n} vs. ${e}`);t[r]=s>=0?s:o}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tS{constructor(e,t,r,s,o,a,i){this.name=e,this.dtype=t,this.maxSize=r,this.elementShape=s,this.identicalElementShapes=o,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Re(0),Tn(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const r=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),en(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),r.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(r.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);r.tensor=t,Tn(t),r.written=!0,this.tensors[e]=r}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((r,s)=>this.write(r,t[s]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let s=0;s<this.size();s++)e.push(s)}if(e.length===0)return En([],[0].concat(this.elementShape));const r=this.readMany(e);return en(this.elementShape,r[0].shape,"TensorArray shape mismatch: "),Wn(r,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return En([],[0].concat(this.elementShape));const t=[];for(let s=0;s<this.size();s++)t.push(s);const r=this.readMany(t);return en(this.elementShape,r[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${r[0].shape})`),ht(r,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const r=Math.max(...e);if(!this.dynamicSize&&r>=this.maxSize)throw new Error(`Max index must be < array size (${r}  vs. ${this.maxSize})`);this.writeMany(e,es(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let r=0;const s=e.map(u=>(r+=u,r));if(r!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const o=r===0?0:t.size/r,a=[];ve(()=>{t=Z(t,[1,r,o]);for(let u=0;u<e.length;++u){const l=[0,u===0?0:s[u-1],0],h=[1,e[u],o];a[u]=Z(Se(t,l,h),this.elementShape)}return a});const i=[];for(let u=0;u<e.length;u++)i[u]=u;this.writeMany(i,a)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qr{get id(){return this.idTensor.id}constructor(e,t,r,s=-1){this.tensors=e,this.elementShape=t,this.elementDtype=r,e!=null&&e.forEach(o=>{if(r!==o.dtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${o.dtype}`);en(t,o.shape,"TensorList shape mismatch: "),Tn(o)}),this.idTensor=Re(0),this.maxNumElements=s,Tn(this.idTensor)}copy(){return new Qr([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,r=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(r!==-1&&this.tensors.length!==r)throw new Error(`Operation expected a list with ${r} elements but got a list with ${this.tensors.length} elements.`);en(e,this.elementShape,"TensorList shape mismatch: ");const s=co(this.elementShape,this.tensors,e);return ve(()=>{const o=this.tensors.map(a=>Z(a,s));return Wn(o,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const r=co(this.elementShape,this.tensors,e),s=this.tensors.pop();return s.kept=!1,en(s.shape,e,"TensorList shape mismatch: "),Z(s,r)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(en(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Tn(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new Qr([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let r=0;r<Math.min(this.tensors.length,e);++r)t.tensors[r]=this.tensors[r];return t}getItem(e,t,r){if(r!==this.elementDtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);en(this.tensors[e].shape,t,"TensorList shape mismatch: ");const s=co(this.elementShape,this.tensors,t);return Z(this.tensors[e],s)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);en(this.elementShape,t.shape,"TensorList shape mismatch: "),Tn(t),this.tensors[e]!=null&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,r){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);en(this.elementShape,r,"TensorList shape mismatch: "),e=e.slice(0,this.size());const s=co(this.elementShape,this.tensors,r);return e.length===0?En([],[0].concat(s)):ve(()=>{const o=e.map(a=>Z(this.tensors[a],s));return Wn(o,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);en(this.elementShape,t,"TensorList shape mismatch: ");const r=co(this.elementShape,this.tensors,t);return this.size()===0?En([],[0].concat(r)):ve(()=>{const s=this.tensors.map(o=>Z(o,r));return ht(s,0)})}}function nS(n,e,t){const r=n.dtype;if(n.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${n.shape}`);if(n.dtype!==t)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${t}`);const s=n.shape.slice(1);en(s,e,"TensorList shape mismatch: ");const o=es(n);return new Qr(o,e,r)}function rS(n,e,t,r){return new Qr([],n,e,r)}function sS(n,e,t,r){if(e.length!==n.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${n.shape[0]}`);const s=Math.max(...e);if(r!=null&&r!==-1&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const o=new Qr([],t,n.dtype,r),a=es(n,0);return e.forEach((i,u)=>{o.setItem(i,a[u])}),o}function oS(n,e,t){let r=0;const s=e.map(l=>(r+=l,r));if(r!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${n.shape}`);const o=n.shape.slice(1),a=Au(o,t),i=r===0?0:n.size/r,u=ve(()=>{const l=[];n=Z(n,[1,r,i]);for(let h=0;h<e.length;++h){const p=[0,h===0?0:s[h-1],0],f=[1,e[h],i];l[h]=Z(Se(n,p,f),a)}return n.dispose(),l}),c=new Qr([],t,n.dtype,e.length);for(let l=0;l<u.length;l++)c.setItem(l,u[l]);return c}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aS=async(n,e,t)=>{switch(n.op){case"If":case"StatelessIf":{const r=w("thenBranch",n,e,t),s=w("elseBranch",n,e,t),o=w("cond",n,e,t),a=w("args",n,e,t);return(await o.data())[0]?t.functionMap[r].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap):t.functionMap[s].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap)}case"While":case"StatelessWhile":{const r=w("body",n,e,t),s=w("cond",n,e,t),o=w("args",n,e,t),a=await t.functionMap[s].executeFunctionAsync(o,t.tensorArrayMap,t.tensorListMap),i=o.map(l=>l.id);let u=await a[0].data();a.forEach(l=>{!l.kept&&i.indexOf(l.id)===-1&&l.dispose()});let c=o;for(;u[0];){const l=c;c=await t.functionMap[r].executeFunctionAsync(c,t.tensorArrayMap,t.tensorListMap);const h=c.map(p=>p.id);l.forEach(p=>{!p.kept&&i.indexOf(p.id)===-1&&h.indexOf(p.id)===-1&&p.dispose()});const d=await t.functionMap[s].executeFunctionAsync(c,t.tensorArrayMap,t.tensorListMap);u=await d[0].data(),d.forEach(p=>{!p.kept&&i.indexOf(p.id)===-1&&h.indexOf(p.id)===-1&&p.dispose()})}return c}case"LoopCond":{const r=w("pred",n,e,t);return[Fn(r)]}case"Switch":{const r=w("pred",n,e,t);let s=w("data",n,e,t);return s.kept||(s=Fn(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const r=n.inputNames.find(s=>ut(s,e,t)!==void 0);if(r){const s=ut(r,e,t);return[Fn(s)]}return}case"Enter":{const r=w("frameName",n,e,t),s=w("tensor",n,e,t);return t.enterFrame(r),[Fn(s)]}case"Exit":{const r=w("tensor",n,e,t);return t.exitFrame(),[Fn(r)]}case"NextIteration":{const r=w("tensor",n,e,t);return t.nextIteration(),[Fn(r)]}case"TensorArrayV3":{const r=w("size",n,e,t),s=w("dtype",n,e,t),o=w("elementShape",n,e,t),a=w("dynamicSize",n,e,t),i=w("clearAfterRead",n,e,t),u=w("identicalElementShapes",n,e,t),c=w("name",n,e,t),l=new tS(c,s,r,o,u,a,i);return t.addTensorArray(l),[l.idTensor,Re(1)]}case"TensorArrayWriteV3":{const r=w("tensorArrayId",n,e,t),s=w("index",n,e,t),o=w("tensor",n,e,t),a=t.getTensorArray(r.id);return a.write(s,o),[a.idTensor]}case"TensorArrayReadV3":{const r=w("tensorArrayId",n,e,t),s=w("index",n,e,t);return[t.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{const r=w("tensorArrayId",n,e,t),s=w("indices",n,e,t),o=w("dtype",n,e,t);return[t.getTensorArray(r.id).gather(s,o)]}case"TensorArrayScatterV3":{const r=w("tensorArrayId",n,e,t),s=w("indices",n,e,t),o=w("tensor",n,e,t),a=t.getTensorArray(r.id);return a.scatter(s,o),[a.idTensor]}case"TensorArrayConcatV3":{const r=w("tensorArrayId",n,e,t),s=t.getTensorArray(r.id),o=w("dtype",n,e,t);return[s.concat(o)]}case"TensorArraySplitV3":{const r=w("tensorArrayId",n,e,t),s=w("tensor",n,e,t),o=w("lengths",n,e,t),a=t.getTensorArray(r.id);return a.split(o,s),[a.idTensor]}case"TensorArraySizeV3":{const r=w("tensorArrayId",n,e,t),s=t.getTensorArray(r.id);return[Re(s.size(),"int32")]}case"TensorArrayCloseV3":{const r=w("tensorArrayId",n,e,t),s=t.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const r=w("tensorListId",n,e,t),s=w("index",n,e,t),o=w("tensor",n,e,t),a=t.getTensorList(r.id);return a.setItem(s,o),[a.idTensor]}case"TensorListGetItem":{const r=w("tensorListId",n,e,t),s=w("index",n,e,t),o=w("elementShape",n,e,t),a=w("elementDType",n,e,t);return[t.getTensorList(r.id).getItem(s,o,a)]}case"TensorListScatterV2":case"TensorListScatter":{const r=w("indices",n,e,t),s=w("tensor",n,e,t),o=w("elementShape",n,e,t),a=w("numElements",n,e,t),i=sS(s,r,o,a);return t.addTensorList(i),[i.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=w("elementShape",n,e,t),s=w("elementDType",n,e,t);let o;n.op==="TensorListReserve"?o="numElements":o="maxNumElements";const a=w(o,n,e,t),i=n.op==="TensorListReserve"?-1:a,u=rS(r,s,a,i);return t.addTensorList(u),[u.idTensor]}case"TensorListGather":{const r=w("tensorListId",n,e,t),s=w("indices",n,e,t),o=w("elementShape",n,e,t),a=w("elementDType",n,e,t);return[t.getTensorList(r.id).gather(s,a,o)]}case"TensorListStack":{const r=w("tensorListId",n,e,t),s=w("elementShape",n,e,t),o=w("elementDType",n,e,t),a=w("numElements",n,e,t);return[t.getTensorList(r.id).stack(s,o,a)]}case"TensorListFromTensor":{const r=w("tensor",n,e,t),s=w("elementShape",n,e,t),o=w("elementDType",n,e,t),a=nS(r,s,o);return t.addTensorList(a),[a.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=w("tensorListId",n,e,t),s=t.getTensorList(r.id),o=w("dtype",n,e,t),a=w("elementShape",n,e,t);return[s.concat(o,a)]}case"TensorListPushBack":{const r=w("tensorListId",n,e,t),s=w("tensor",n,e,t),o=t.getTensorList(r.id);return o.pushBack(s),[o.idTensor]}case"TensorListPopBack":{const r=w("tensorListId",n,e,t),s=w("elementShape",n,e,t),o=w("elementDType",n,e,t);return[t.getTensorList(r.id).popBack(s,o)]}case"TensorListSplit":{const r=w("tensor",n,e,t),s=w("elementShape",n,e,t),o=w("lengths",n,e,t),a=oS(r,o,s);return t.addTensorList(a),[a.idTensor]}case"TensorListLength":{const r=w("tensorListId",n,e,t),s=t.getTensorList(r.id);return[Re(s.size(),"int32")]}case"TensorListResize":{const r=w("tensorListId",n,e,t),s=w("size",n,e,t),a=t.getTensorList(r.id).resize(s);return t.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cl(n,e,t){const[r,s]=w("fusedOps",n,e,t),o=r==="biasadd",a=!o,i=s==="prelu",u=r==="fusedbatchnorm",c=w("numArgs",n,e,t);if(o){if(i&&c!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&o&&c!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const l=w("strides",n,e,t),h=Ta(n,e,t),d=w("dataFormat",n,e,t).toUpperCase(),p=w("dilations",n,e,t);let[f,x]=w("args",n,e,t);a&&(x=f,f=void 0);const y=w("leakyreluAlpha",n,e,t);return{stride:l,pad:h,dataFormat:d,dilations:p,biasArg:f,preluArg:x,activationFunc:s,leakyreluAlpha:y}}const iS=(n,e,t,r=dt)=>{switch(n.op){case"Conv1D":{const s=w("stride",n,e,t),o=w("pad",n,e,t),a=w("dataFormat",n,e,t).toUpperCase(),i=w("dilation",n,e,t);return[r.conv1d(w("x",n,e,t),w("filter",n,e,t),s,o,a,i)]}case"Conv2D":{const s=w("strides",n,e,t),o=Ta(n,e,t),a=w("dataFormat",n,e,t).toUpperCase(),i=w("dilations",n,e,t);return[r.conv2d(w("x",n,e,t),w("filter",n,e,t),[s[1],s[2]],o,a,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:s,pad:o,dataFormat:a,dilations:i,biasArg:u,preluArg:c,activationFunc:l,leakyreluAlpha:h}=cl(n,e,t);return[r.fused.conv2d({x:w("x",n,e,t),filter:w("filter",n,e,t),strides:[s[1],s[2]],pad:o,dataFormat:a,dilations:[i[1],i[2]],bias:u,activation:l,preluActivationWeights:c,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:s,pad:o,dataFormat:a,dilations:i,biasArg:u,preluArg:c,activationFunc:l,leakyreluAlpha:h}=cl(n,e,t);return[r.fused.depthwiseConv2d({x:w("x",n,e,t),filter:w("filter",n,e,t),strides:[s[1],s[2]],pad:o,dataFormat:a,dilations:[i[1],i[2]],bias:u,activation:l,preluActivationWeights:c,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=w("outputShape",n,e,t),o=w("strides",n,e,t),a=Ta(n,e,t);return[r.conv2dTranspose(w("x",n,e,t),w("filter",n,e,t),s,[o[1],o[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=w("strides",n,e,t),o=Ta(n,e,t),a=w("dilations",n,e,t),i=w("dataFormat",n,e,t).toUpperCase();return[r.depthwiseConv2d(w("input",n,e,t),w("filter",n,e,t),[s[1],s[2]],o,i,[a[1],a[2]])]}case"Conv3D":{const s=w("strides",n,e,t),o=w("pad",n,e,t),a=w("dataFormat",n,e,t).toUpperCase(),i=w("dilations",n,e,t);return[r.conv3d(w("x",n,e,t),w("filter",n,e,t),[s[1],s[2],s[3]],o,a,[i[1],i[2],i[3]])]}case"AvgPool":{const s=w("strides",n,e,t),o=w("pad",n,e,t),a=w("kernelSize",n,e,t);return[r.avgPool(w("x",n,e,t),[a[1],a[2]],[s[1],s[2]],o)]}case"MaxPool":{const s=w("strides",n,e,t),o=w("pad",n,e,t),a=w("kernelSize",n,e,t);return[r.maxPool(w("x",n,e,t),[a[1],a[2]],[s[1],s[2]],o)]}case"MaxPoolWithArgmax":{const s=w("strides",n,e,t),o=w("pad",n,e,t),a=w("kernelSize",n,e,t),i=w("includeBatchInIndex",n,e,t),{result:u,indexes:c}=r.maxPoolWithArgmax(w("x",n,e,t),[a[1],a[2]],[s[1],s[2]],o,i);return[u,c]}case"AvgPool3D":{const s=w("strides",n,e,t),o=w("pad",n,e,t),a=w("kernelSize",n,e,t);return[r.avgPool3d(w("x",n,e,t),[a[1],a[2],a[3]],[s[1],s[2],s[3]],o)]}case"MaxPool3D":{const s=w("strides",n,e,t),o=w("pad",n,e,t),a=w("kernelSize",n,e,t);return[r.maxPool3d(w("x",n,e,t),[a[1],a[2],a[3]],[s[1],s[2],s[3]],o)]}case"Dilation2D":{const s=w("strides",n,e,t),o=w("pad",n,e,t),a=w("dilations",n,e,t),i=s[1],u=s[2],c=a[1],l=a[2];return[r.dilation2d(w("x",n,e,t),w("filter",n,e,t),[i,u],o,[c,l],"NHWC")]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uS=(n,e,t,r=dt)=>{switch(n.op){case"Fill":{const s=w("shape",n,e,t),o=w("dtype",n,e,t),a=w("value",n,e,t);return[r.fill(s,a,o)]}case"LinSpace":{const s=w("start",n,e,t),o=w("stop",n,e,t),a=w("num",n,e,t);return[r.linspace(s,o,a)]}case"Multinomial":{const s=w("logits",n,e,t),o=w("numSamples",n,e,t),a=w("seed",n,e,t);return[r.multinomial(s,o,a)]}case"OneHot":{const s=w("indices",n,e,t),o=w("depth",n,e,t),a=w("onValue",n,e,t),i=w("offValue",n,e,t),u=w("dtype",n,e,t);return[r.oneHot(s,o,a,i,u)]}case"Ones":return[r.ones(w("shape",n,e,t),w("dtype",n,e,t))];case"OnesLike":return[r.onesLike(w("x",n,e,t))];case"RandomStandardNormal":return[r.randomStandardNormal(w("shape",n,e,t),w("dtype",n,e,t),w("seed",n,e,t))];case"RandomUniform":return[r.randomUniform(w("shape",n,e,t),w("minval",n,e,t),w("maxval",n,e,t),w("dtype",n,e,t))];case"RandomUniformInt":return[r.randomUniformInt(w("shape",n,e,t),w("minval",n,e,t),w("maxval",n,e,t),w("seed",n,e,t))];case"Range":{const s=w("start",n,e,t),o=w("stop",n,e,t),a=w("step",n,e,t);return[r.range(s,o,a,w("dtype",n,e,t))]}case"TruncatedNormal":{const s=w("shape",n,e,t),o=w("mean",n,e,t),a=w("stdDev",n,e,t),i=w("seed",n,e,t);return[r.truncatedNormal(s,o,a,w("dtype",n,e,t),i)]}case"Zeros":return[r.zeros(w("shape",n,e,t),w("dtype",n,e,t))];case"ZerosLike":return[r.zerosLike(w("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ai(n,e,t){const r=w("boxes",n,e,t),s=w("scores",n,e,t),o=w("maxOutputSize",n,e,t),a=w("iouThreshold",n,e,t),i=w("scoreThreshold",n,e,t),u=w("softNmsSigma",n,e,t);return{boxes:r,scores:s,maxOutputSize:o,iouThreshold:a,scoreThreshold:i,softNmsSigma:u}}const cS=async(n,e,t,r,s=dt)=>{switch(n.op){case"NonMaxSuppressionV5":{const{boxes:o,scores:a,maxOutputSize:i,iouThreshold:u,scoreThreshold:c,softNmsSigma:l}=Ai(n,e,t),h=await s.image.nonMaxSuppressionWithScoreAsync(o,a,i,u,c,l);return[h.selectedIndices,h.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:o,scores:a,maxOutputSize:i,iouThreshold:u,scoreThreshold:c}=Ai(n,e,t),l=w("padToMaxOutputSize",n,e,t),h=await s.image.nonMaxSuppressionPaddedAsync(o,a,i,u,c,l);return[h.selectedIndices,h.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:o,scores:a,maxOutputSize:i,iouThreshold:u,scoreThreshold:c}=Ai(n,e,t);return[await s.image.nonMaxSuppressionAsync(o,a,i,u,c)]}case"Where":{const o=s.cast(w("condition",n,e,t),"bool"),a=[await s.whereAsync(o)];return o.dispose(),a}case"ListDiff":return s.setdiff1dAsync(w("x",n,e,t),w("y",n,e,t));default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lS=(n,e,t,r=dt)=>{switch(n.op){case"LowerBound":{const s=w("sortedSequence",n,e,t),o=w("values",n,e,t);return[r.lowerBound(s,o)]}case"TopKV2":{const s=w("x",n,e,t),o=w("k",n,e,t),a=w("sorted",n,e,t),i=r.topk(s,o,a);return[i.values,i.indices]}case"UpperBound":{const s=w("sortedSequence",n,e,t),o=w("values",n,e,t);return[r.upperBound(s,o)]}case"Unique":{const s=w("x",n,e,t),o=r.unique(s);return[o.values,o.indices]}case"UniqueV2":{const s=w("x",n,e,t),o=w("axis",n,e,t),a=r.unique(s,o);return[a.values,a.indices]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hS=(n,e,t,r=dt)=>{switch(n.op){case"Const":return e[n.name];case"PlaceholderWithDefault":const s=w("default",n,e,t);return[ut(n.name,e,t)||s];case"Placeholder":return[ut(n.name,e,t)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const l=w("x",n,e,t);return[Fn(l)]}case"IdentityN":return w("x",n,e,t).map(l=>Fn(l));case"Snapshot":const o=w("x",n,e,t);return[Fn(o)];case"Shape":return[r.tensor1d(w("x",n,e,t).shape,"int32")];case"ShapeN":return w("x",n,e,t).map(l=>r.tensor1d(l.shape));case"Size":return[r.scalar(w("x",n,e,t).size,"int32")];case"Rank":return[r.scalar(w("x",n,e,t).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":const a=w("x",n,e,t),i=w("data",n,e,t),u=w("message",n,e,t),c=w("summarize",n,e,t);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(u);for(let l=0;l<i.length;l++)console.log(Array.prototype.slice.call(i[l].dataSync()).slice(0,c));return[a];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dS{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Re(0),this.tensorMap=new Map,Tn(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Re(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const r=await e.data();return this.tensorMap.forEach(s=>s.dispose()),this.tensorMap.clear(),ve(()=>{const s=es(t),o=r.length,a=s.length;_(o===a,()=>`The number of elements doesn't match, keys has ${o} elements, the values has ${a} elements.`);for(let i=0;i<o;i++){const u=r[i],c=s[i];Tn(c),this.tensorMap.set(u,c)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);const r=await e.data();return ve(()=>{const s=[];for(let o=0;o<r.length;o++){const a=r[o],i=this.findWithDefault(a,t);s.push(i)}return Wn(s)})}findWithDefault(e,t){const r=this.tensorMap.get(e);return r??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pS=async(n,e,t,r)=>{switch(n.op){case"HashTable":case"HashTableV2":{const s=r.getHashTableHandleByName(n.name);if(s!=null)return[s];{const o=w("keyDType",n,e,t),a=w("valueDType",n,e,t),i=new dS(o,a);return r.addHashTable(n.name,i),[i.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const s=w("tableHandle",n,e,t,r),o=w("keys",n,e,t),a=w("values",n,e,t);return[await r.getHashTableById(s.id).import(o,a)]}case"LookupTableFind":case"LookupTableFindV2":{const s=w("tableHandle",n,e,t,r),o=w("keys",n,e,t),a=w("defaultValue",n,e,t);return[await r.getHashTableById(s.id).find(o,a)]}case"LookupTableSize":case"LookupTableSizeV2":{const s=w("tableHandle",n,e,t,r);return[r.getHashTableById(s.id).tensorSize()]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fS=(n,e,t,r=dt)=>{switch(n.op){case"ResizeBilinear":{const s=w("images",n,e,t),o=w("size",n,e,t),a=w("alignCorners",n,e,t),i=w("halfPixelCenters",n,e,t);return[r.image.resizeBilinear(s,[o[0],o[1]],a,i)]}case"ResizeNearestNeighbor":{const s=w("images",n,e,t),o=w("size",n,e,t),a=w("alignCorners",n,e,t),i=w("halfPixelCenters",n,e,t);return[r.image.resizeNearestNeighbor(s,[o[0],o[1]],a,i)]}case"CropAndResize":{const s=w("image",n,e,t),o=w("boxes",n,e,t),a=w("boxInd",n,e,t),i=w("cropSize",n,e,t),u=w("method",n,e,t),c=w("extrapolationValue",n,e,t);return[r.image.cropAndResize(s,o,a,i,u,c)]}case"ImageProjectiveTransformV3":{const s=w("images",n,e,t),o=w("transforms",n,e,t),a=w("outputShape",n,e,t),i=w("fillValue",n,e,t),u=w("interpolation",n,e,t),c=w("fillMode",n,e,t);return[r.image.transform(s,o,u.toLowerCase(),c.toLowerCase(),i,a)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mS=(n,e,t,r=dt)=>{switch(n.op){case"Equal":return[r.equal(w("a",n,e,t),w("b",n,e,t))];case"NotEqual":return[r.notEqual(w("a",n,e,t),w("b",n,e,t))];case"Greater":return[r.greater(w("a",n,e,t),w("b",n,e,t))];case"GreaterEqual":return[r.greaterEqual(w("a",n,e,t),w("b",n,e,t))];case"Less":return[r.less(w("a",n,e,t),w("b",n,e,t))];case"LessEqual":return[r.lessEqual(w("a",n,e,t),w("b",n,e,t))];case"LogicalAnd":return[r.logicalAnd(w("a",n,e,t),w("b",n,e,t))];case"LogicalNot":return[r.logicalNot(w("a",n,e,t))];case"LogicalOr":return[r.logicalOr(w("a",n,e,t),w("b",n,e,t))];case"Select":case"SelectV2":return[r.where(w("condition",n,e,t),w("a",n,e,t),w("b",n,e,t))];case"BitwiseAnd":return[r.bitwiseAnd(w("a",n,e,t),w("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gS=(n,e,t,r=dt)=>{switch(n.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(w("a",n,e,t),w("b",n,e,t),w("transposeA",n,e,t),w("transposeB",n,e,t))];case"Einsum":return[r.einsum(w("equation",n,e,t),...w("tensors",n,e,t))];case"Transpose":return[r.transpose(w("x",n,e,t),w("perm",n,e,t))];case"_FusedMatMul":const[s,o]=w("fusedOps",n,e,t),a=s==="biasadd",i=o==="prelu",u=w("numArgs",n,e,t),c=w("leakyreluAlpha",n,e,t);if(a){if(i&&u!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&u!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[l,h]=w("args",n,e,t);return[r.fused.matMul({a:w("a",n,e,t),b:w("b",n,e,t),transposeA:w("transposeA",n,e,t),transposeB:w("transposeB",n,e,t),bias:l,activation:o,preluActivationWeights:h,leakyreluAlpha:c})];case"MatrixBandPart":return[r.linalg.bandPart(w("a",n,e,t),w("numLower",n,e,t),w("numUpper",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yS=(n,e,t,r=dt)=>{switch(n.op){case"EuclideanNorm":return[r.euclideanNorm(w("x",n,e,t),w("axis",n,e,t),w("keepDims",n,e,t))];case"FusedBatchNorm":case"FusedBatchNormV2":return[r.batchNorm(w("x",n,e,t),w("mean",n,e,t),w("variance",n,e,t),w("offset",n,e,t),w("scale",n,e,t),w("epsilon",n,e,t))];case"FusedBatchNormV3":return[r.batchNorm(w("x",n,e,t),w("mean",n,e,t),w("variance",n,e,t),w("offset",n,e,t),w("scale",n,e,t),w("epsilon",n,e,t))];case"LRN":return[r.localResponseNormalization(w("x",n,e,t),w("radius",n,e,t),w("bias",n,e,t),w("alpha",n,e,t),w("beta",n,e,t))];case"Softmax":return[r.softmax(w("x",n,e,t))];case"LogSoftmax":return[r.logSoftmax(w("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xS=(n,e,t,r=dt)=>{switch(n.op){case"RaggedGather":{const{outputNestedSplits:s,outputDenseValues:o}=r.raggedGather(w("paramsNestedSplits",n,e,t),w("paramsDenseValues",n,e,t),w("indices",n,e,t),w("outputRaggedRank",n,e,t));return s.concat(o)}case"RaggedRange":{const{rtNestedSplits:s,rtDenseValues:o}=r.raggedRange(w("starts",n,e,t),w("limits",n,e,t),w("splits",n,e,t));return[s,o]}case"RaggedTensorToTensor":return[r.raggedTensorToTensor(w("shape",n,e,t),w("values",n,e,t),w("defaultValue",n,e,t),w("rowPartitionTensors",n,e,t),w("rowPartitionTypes",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bS=(n,e,t,r=dt)=>{switch(n.op){case"Max":{const i=w("axis",n,e,t),u=w("keepDims",n,e,t);return[r.max(w("x",n,e,t),i,u)]}case"Mean":{const i=w("axis",n,e,t),u=w("keepDims",n,e,t);return[r.mean(w("x",n,e,t),i,u)]}case"Min":{const i=w("axis",n,e,t),u=w("keepDims",n,e,t);return[r.min(w("x",n,e,t),i,u)]}case"Sum":{const i=w("axis",n,e,t),u=w("keepDims",n,e,t);return[r.sum(w("x",n,e,t),i,u)]}case"All":{const i=w("axis",n,e,t),u=w("keepDims",n,e,t);return[r.all(w("x",n,e,t),i,u)]}case"Any":{const i=w("axis",n,e,t),u=w("keepDims",n,e,t);return[r.any(w("x",n,e,t),i,u)]}case"ArgMax":{const i=w("axis",n,e,t);return[r.argMax(w("x",n,e,t),i)]}case"ArgMin":{const i=w("axis",n,e,t);return[r.argMin(w("x",n,e,t),i)]}case"Prod":{const i=w("axis",n,e,t),u=w("keepDims",n,e,t);return[r.prod(w("x",n,e,t),i,u)]}case"Cumprod":{const i=w("axis",n,e,t),u=w("exclusive",n,e,t),c=w("reverse",n,e,t);return[r.cumprod(w("x",n,e,t),i,u,c)]}case"Cumsum":{const i=w("axis",n,e,t),u=w("exclusive",n,e,t),c=w("reverse",n,e,t);return[r.cumsum(w("x",n,e,t),i,u,c)]}case"Bincount":const s=w("x",n,e,t),o=w("weights",n,e,t),a=w("size",n,e,t);return[r.bincount(s,o,a)];case"DenseBincount":{const i=w("x",n,e,t),u=w("weights",n,e,t),c=w("size",n,e,t),l=w("binaryOutput",n,e,t);return[r.denseBincount(i,u,c,l)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wS=(n,e,t,r=dt)=>{switch(n.op){case"ConcatV2":case"Concat":{const s=w("n",n,e,t),o=w("axis",n,e,t);let a=w("tensors",n,e,t);return a=a.slice(0,s),[r.concat(a,o)]}case"Gather":{const s=w("x",n,e,t),o=w("indices",n,e,t);return[r.gather(s,r.cast(o,"int32"),0)]}case"GatherV2":{const s=w("axis",n,e,t),o=w("batchDims",n,e,t),a=w("x",n,e,t),i=w("indices",n,e,t);return[r.gather(a,r.cast(i,"int32"),s,o)]}case"Reverse":{const s=w("dims",n,e,t),o=[];for(let i=0;i<s.length;i++)s[i]&&o.push(i);const a=w("x",n,e,t);return[r.reverse(a,o)]}case"ReverseV2":{const s=w("axis",n,e,t),o=w("x",n,e,t);return[r.reverse(o,s)]}case"Slice":{const s=w("begin",n,e,t),o=w("size",n,e,t);return[r.slice(w("x",n,e,t),s,o)]}case"StridedSlice":{const s=w("begin",n,e,t),o=w("end",n,e,t),a=w("strides",n,e,t),i=w("beginMask",n,e,t),u=w("endMask",n,e,t),c=w("ellipsisMask",n,e,t),l=w("newAxisMask",n,e,t),h=w("shrinkAxisMask",n,e,t),d=w("x",n,e,t);return[r.stridedSlice(d,s,o,a,i,u,c,l,h)]}case"Pack":return ve(()=>{const s=w("axis",n,e,t),o=w("tensors",n,e,t),a=o[0].shape,i=r.squeeze(o[0]).shape,u=o.map(c=>{const l=Xe(c.shape,a);if(!l&&!Xe(r.squeeze(c).shape,i))throw new Error("the input tensors shape does not match");return l?c:r.reshape(c,a)});return[r.stack(u,s)]});case"Unpack":{const s=w("axis",n,e,t),o=w("tensor",n,e,t);return r.unstack(o,s)}case"Tile":{const s=w("reps",n,e,t);return[r.tile(w("x",n,e,t),s)]}case"Split":case"SplitV":{const s=w("axis",n,e,t),o=w("numOrSizeSplits",n,e,t),a=w("x",n,e,t);return r.split(a,o,s)}case"ScatterNd":{const s=w("indices",n,e,t),o=w("values",n,e,t),a=w("shape",n,e,t);return[r.scatterND(s,o,a)]}case"GatherNd":{const s=w("x",n,e,t),o=w("indices",n,e,t);return[r.gatherND(s,o)]}case"SparseToDense":{const s=w("sparseIndices",n,e,t),o=w("outputShape",n,e,t),a=w("sparseValues",n,e,t),i=w("defaultValue",n,e,t);return[r.sparseToDense(s,a,o,a.dtype===i.dtype?i:r.cast(i,a.dtype))]}case"TensorScatterUpdate":{const s=w("indices",n,e,t),o=w("values",n,e,t),a=w("tensor",n,e,t);return[r.tensorScatterUpdate(a,s,o)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vS=(n,e,t,r=dt)=>{switch(n.op){case"SparseFillEmptyRows":{const{outputIndices:s,outputValues:o,emptyRowIndicator:a,reverseIndexMap:i}=r.sparse.sparseFillEmptyRows(w("indices",n,e,t),w("values",n,e,t),w("denseShape",n,e,t),w("defaultValue",n,e,t));return[s,o,a,i]}case"SparseReshape":{const{outputIndices:s,outputShape:o}=r.sparse.sparseReshape(w("inputIndices",n,e,t),w("inputShape",n,e,t),w("newShape",n,e,t));return[s,o]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(w("data",n,e,t),w("indices",n,e,t),w("segmentIds",n,e,t))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(w("data",n,e,t),w("indices",n,e,t),w("segmentIds",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $S=(n,e,t,r=dt)=>{switch(n.op){case"FFT":return[r.fft(w("x",n,e,t))];case"IFFT":return[r.ifft(w("x",n,e,t))];case"RFFT":return[r.rfft(w("x",n,e,t))];case"IRFFT":return[r.irfft(w("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CS=(n,e,t,r=dt)=>{switch(n.op){case"StaticRegexReplace":return[r.string.staticRegexReplace(w("input",n,e,t),w("pattern",n,e,t),w("rewrite",n,e,t),w("replaceGlobal",n,e,t))];case"StringNGrams":{const{nGrams:s,nGramsSplits:o}=r.string.stringNGrams(w("data",n,e,t),w("dataSplits",n,e,t),w("separator",n,e,t),w("nGramWidths",n,e,t),w("leftPad",n,e,t),w("rightPad",n,e,t),w("padWidth",n,e,t),w("preserveShortSequences",n,e,t));return[s,o]}case"StringSplit":{const{indices:s,values:o,shape:a}=r.string.stringSplit(w("input",n,e,t),w("delimiter",n,e,t),w("skipEmpty",n,e,t));return[s,o,a]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(w("input",n,e,t),w("numBuckets",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SS=(n,e,t,r=dt)=>{switch(n.op){case"Cast":return[r.cast(w("x",n,e,t),w("dtype",n,e,t))];case"ExpandDims":{const s=w("axis",n,e,t);return[r.expandDims(w("x",n,e,t),s)]}case"Squeeze":{const s=w("axis",n,e,t);return[r.squeeze(w("x",n,e,t),s)]}case"Reshape":return[r.reshape(w("x",n,e,t),w("shape",n,e,t))];case"EnsureShape":return[r.ensureShape(w("x",n,e,t),w("shape",n,e,t))];case"MirrorPad":return[r.mirrorPad(w("x",n,e,t),w("padding",n,e,t),w("mode",n,e,t))];case"PadV2":case"Pad":return[r.pad(w("x",n,e,t),w("padding",n,e,t),w("constantValue",n,e,t))];case"SpaceToBatchND":{const s=w("blockShape",n,e,t),o=w("paddings",n,e,t);return[r.spaceToBatchND(w("x",n,e,t),s,o)]}case"BatchToSpaceND":{const s=w("blockShape",n,e,t),o=w("crops",n,e,t);return[r.batchToSpaceND(w("x",n,e,t),s,o)]}case"DepthToSpace":{const s=w("blockSize",n,e,t),o=w("dataFormat",n,e,t).toUpperCase();return[r.depthToSpace(w("x",n,e,t),s,o)]}case"BroadcastTo":return[r.broadcastTo(w("x",n,e,t),w("shape",n,e,t))];case"BroadcastArgs":return[r.broadcastArgs(w("s0",n,e,t),w("s1",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ll(n,e,t,r,s=ve){const o=((a,i,u)=>{switch(a.category){case"arithmetic":return s(()=>JC(a,i,u));case"basic_math":return s(()=>eS(a,i,u));case"control":return aS(a,i,u);case"convolution":return s(()=>iS(a,i,u));case"creation":return s(()=>uS(a,i,u));case"dynamic":return cS(a,i,u);case"evaluation":return s(()=>lS(a,i,u));case"image":return s(()=>fS(a,i,u));case"graph":return s(()=>hS(a,i,u));case"logical":return s(()=>mS(a,i,u));case"matrices":return s(()=>gS(a,i,u));case"normalization":return s(()=>yS(a,i,u));case"ragged":return s(()=>xS(a,i,u));case"reduction":return s(()=>bS(a,i,u));case"slice_join":return s(()=>wS(a,i,u));case"sparse":return s(()=>vS(a,i,u));case"spectral":return s(()=>$S(a,i,u));case"string":return s(()=>CS(a,i,u));case"transformation":return s(()=>SS(a,i,u));case"hash_table":return pS(a,i,u,r);case"custom":const c=v1(a.op);if(c&&c.customExecutor)return c.customExecutor(new ZC(a,i,u));throw TypeError(`Custom op ${a.op} is not registered.`);default:throw TypeError(`Unknown op '${a.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(n,e,t);return Ur(o)?o.then(a=>[].concat(a)):[].concat(o)}class hl{constructor(e={},t={},r={},s={},o){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=r,this.functionMap=s,this.parseNodeNameCache=o,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const r=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(r))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dl(n,e,t,r){const s=new Set,o=[];let a=null,i=null;const u=new Set,c=new Set(Object.keys(n).map(d=>Dt(d)[0]));r=r||[];const l=new Set(r.map(d=>Dt(d.name)[0])),h=[...e];for(;h.length>0;){const d=h.pop();if((Fr(d)||AS(d)||OS(d))&&a==null&&(a=d,i=a.children.map(p=>p.name).filter(p=>s.has(p))),s.add(d.name),t[d.name]==null&&!c.has(d.name)&&!l.has(d.name)){if(d.inputs.length===0){o.push(d.name);continue}d.inputs.forEach(p=>{u.has(p.name)||(u.add(p.name),h.push(p))})}}return{inputs:n,outputs:e,usedNodes:s,missingInputs:o,dynamicNode:a,syncInputs:i}}function TS(n,e){const{usedNodes:t,inputs:r}=e,s=Object.keys(r).map(y=>Dt(y)[0]).map(y=>n.nodes[y]),o=n.initNodes||[],a=y=>t.has(typeof y=="string"?y:y.name);function i(y){return[...new Map(y.map(b=>[b.name,b])).values()]}const u=i([...s,...n.weights,...o]).filter(a),c=i([...u,...Object.values(n.nodes)]).filter(a),l=new Map(c.map(y=>[y.name,y])),h={};for(const y of c){h[y.name]=h[y.name]||0;for(const b of y.children)a(b)||(h[b.name]=Number.POSITIVE_INFINITY),h[b.name]=(h[b.name]||0)+1}const d=Object.entries(h).filter(([,y])=>y===0).map(([y])=>y),p=[...d];for(;d.length>0;){const y=d.pop(),b=l.get(y);for(const S of b.children.filter(a))--h[S.name]===0&&(p.push(S.name),d.push(S.name))}const f=p.map(y=>l.get(y)),x=NS(f,u);return ES(x,u),x}function NS(n,e){const t=new Map(n.map(a=>[a.name,a])),r=e.map(a=>a.name),s=new Set(r);for(;r.length>0;){const a=r.pop(),i=t.get(a);for(const u of i.children)!t.has(u.name)||s.has(u.name)||(s.add(u.name),r.push(u.name))}return n.filter(a=>s.has(a.name))}class aa extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}function ES(n,e){const t=new Map(n.map((i,u)=>[i.name,u])),r=new Set(e.map(i=>i.name)),s=i=>r.has(typeof i=="string"?i:i.name),o=new Set(n.map(i=>i.name)),a=i=>o.has(typeof i=="string"?i:i.name);for(const i of n){for(const u of i.children.filter(a)){if(!t.has(u.name))throw new aa(`Child ${u.name} of node ${i.name} is unreachable.`);if(t.get(i.name)>t.get(u.name))throw new aa(`Node ${i.name} is scheduled to run after its child ${u.name}.`)}if(!s(i))for(const u of i.inputs){if(!t.has(u.name))throw new aa(`Input ${u.name} of node ${i.name} is unreachable.`);if(t.get(u.name)>t.get(i.name))throw new aa(`Node ${i.name} is scheduled to run before its input ${u.name}.`)}}}function IS(n){const e=new Map(n.map((i,u)=>[i.name,u])),t=Number.MAX_SAFE_INTEGER,r=n.map((i,u)=>Fr(i)?t:u),s=i=>{const u=r[e.get(i.name)];return u??-1},o=n.map((i,u)=>i.children.map(s).reduce((c,l)=>Math.max(c,l),r[u])),a=new Map;for(let i=0;i<n.length;++i){const u=o[i];if(u===t)continue;const c=n[i],l=n[u];a.has(l.name)||a.set(l.name,[]),a.get(l.name).push(c)}return a}const kS=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),RS=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),_S=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function Fr(n){return kS.has(n.op)}function AS(n){return RS.has(n.op)}function OS(n){return _S.has(n.op)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ba{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map(r=>e[r].map(s=>s.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(r=>{this._functionExecutorMap[r]=new Ba(e.functions[r],this)})}getCompilationKey(e,t){const r=e.map(o=>o.name).sort(),s=t.map(o=>o.name).sort();return r.join(this.SEPARATOR)+"--"+s.join(this.SEPARATOR)}compile(e,t){const r=dl(e,t,this.weightMap,this._initNodes),{missingInputs:s,dynamicNode:o,syncInputs:a}=r;if(o!=null)throw new Error(`This execution contains the node '${o.name}', which has the dynamic op '${o.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(s.length>0){const c=t.map(h=>h.name),l=Object.keys(e);throw new Error(`Cannot compute the outputs [${c}] from the provided inputs [${l}]. Missing the following inputs: [${s}]`)}const i=TS(this.graph,r),u=IS(i);return{orderedNodes:i,nodeLiveUntilMap:u}}cloneAndKeepTensor(e){if(e==null)return null;const t=e.clone();return Tn(t),t}cloneTensorList(e){return e?e.map(r=>this.cloneAndKeepTensor(r)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([t,r])=>[t,this.cloneTensorList(r)]))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const r=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const s=r.map(d=>this.graph.nodes[Dt(d)[0]]),o=t.map(d=>Dt(d)[0]),a=new Set(o);let i=o.map(d=>this.graph.nodes[d]);i.length===0&&(i=this._outputs);const u=this.getCompilationKey(s,i);let c=this.compiledMap.get(u);c==null&&(c=this.compile(e,i),this.compiledMap.set(u,c));try{this.keepIntermediateTensors=j().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const l={},h={};return ve(()=>{const d=new hl(this.weightMap,l,h,this.functionExecutorMap,this.parseNodeNameCache),p=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(b=>{const[S,I]=Dt(b,d),k=[];k[I]=e[b],p[S]=k,this.keepIntermediateTensors&&(this.clonedTensorsMap[S]=this.cloneTensorList(k))});const f=this.getFrozenTensorIds(p),{orderedNodes:x,nodeLiveUntilMap:y}=c;for(const b of x){if(p[b.name])continue;const S=ll(b,p,d,this._resourceManager);if(Ur(S))throw new Error(`The execution of the op '${b.op}' returned a promise. Please use model.executeAsync() instead.`);p[b.name]=S,this.keepIntermediateTensors&&(this.clonedTensorsMap[b.name]=this.cloneTensorList(S)),this.checkTensorForDisposalWithNodeLiveUntilInfo(b,p,d,f,a,y.get(b.name))}return this.parent==null&&d.dispose(f),t.map(b=>ut(b,p,d))})}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map(r=>e[r]).map(r=>r.map(s=>s.id)));return new Set(t)}checkTensorForDisposal(e,t,r,s,o,a,i){if(!(Fr(t)||a.has(e))){for(const u of r[e])u!=null&&(i[u.id]=(i[u.id]||0)+t.children.length);for(const u of t.inputs){if(Fr(u))continue;const c=ol(u.name,r,s);if(c!=null)for(const l of c){if(!l||l.kept||o.has(l.id))continue;const h=i[l.id];h===1?(l.dispose(),delete i[l.id]):h!=null&&i[l.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,r,s,o,a){function i(u){return Fr(u)||o.has(u.name)}if(!(Fr(e)||a==null))for(const u of a){if(i(u))continue;const c=ol(u.name,t,r);for(const l of c)!l||l.kept||s.has(l.id)||l.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,r=!1,s={},o={}){this.disposeIntermediateTensors(),r||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=j().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const a=new hl(this.weightMap,s,o,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const i=await this.executeWithControlFlow(e,a,t,r),u=t.map(d=>ut(d,i,a)),c=u.map(d=>d.id),l=Object.keys(e).map(d=>e[d].id),h=new Set([...c,...l,...this.weightIds]);return Object.values(i).forEach(d=>{d.forEach(p=>{p&&!p.isDisposed&&!h.has(p.id)&&p.dispose()})}),this.parent==null&&a.dispose(h),u}async executeFunctionAsync(e,t,r){const s=e.reduce((o,a,i)=>(o[this.inputs[i].name]=a,o),{});return this._executeAsync(s,this.outputNodes,!0,t,r)}async executeWithControlFlow(e,t,r,s){const o=Object.keys(e),a=o.map(k=>this.graph.nodes[Dt(k)[0]]),i=r.map(k=>Dt(k)[0]),u=new Set(i);let c=i.map(k=>this.graph.nodes[k]);c.length===0&&(c=this._outputs);const{usedNodes:l,missingInputs:h,dynamicNode:d,syncInputs:p}=dl(e,c,this.weightMap,this._initNodes),f=[...a,...this.graph.weights,...this._initNodes||[]].map(k=>({node:k,contexts:t.currentContext})),x=Object.assign({},this.weightMap);Object.keys(e).forEach(k=>{const[P,W]=Dt(k),H=[];H[W]=e[k],x[P]=H});const y={},b=this.getFrozenTensorIds(x),S={};for(;f.length>0;){const k=this.processStack(a,f,t,x,S,b,u,y,l);await Promise.all(k)}d==null&&!s&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const I=c.filter(k=>!Fr(k)&&!ut(k.name,x,t)).map(k=>k.name);if(I.length>0){let k="";throw d!=null&&(k=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${I}] from the provided inputs [${o}]. Consider providing the following inputs: [${h}]. ${k}`)}return x}processStack(e,t,r,s,o,a,i,u,c){const l=[];for(;t.length>0;){const h=t.pop();r.currentContext=h.contexts;let d="";if(h.node.op==="Enter"&&w("isConstant",h.node,s,r)&&([d]=Dn(h.node.name,r)),s[h.node.name]==null){const p=ll(h.node,s,r,this._resourceManager);d||([d]=Dn(h.node.name,r));const f=r.currentContext;Ur(p)?l.push(p.then(x=>(s[d]=x,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(x)),r.currentContext=f,this.checkTensorForDisposal(d,h.node,s,r,a,i,u),this.processChildNodes(h.node,t,r,s,o,c),x))):(s[d]=p,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(p)),this.checkTensorForDisposal(d,h.node,s,r,a,i,u),this.processChildNodes(h.node,t,r,s,o,c))}else this.processChildNodes(h.node,t,r,s,o,c)}return l}processChildNodes(e,t,r,s,o,a){e.children.forEach(i=>{const[u]=Dn(i.name,r);o[u]||!a.has(i.name)||(i.op==="Merge"?i.inputNames.some(c=>!!ut(c,s,r))&&(o[u]=!0,t.push({contexts:r.currentContext,node:i})):i.inputNames.every(c=>!!ut(c,s,r))&&(o[u]=!0,t.push({contexts:r.currentContext,node:i})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{const r=e[t],[s]=Dt(t),o=this.graph.nodes[s];if(o.attrParams.shape&&o.attrParams.shape.value){const a=o.attrParams.shape.value,i=a.length===r.shape.length&&r.shape.every((u,c)=>a[c]===-1||a[c]===u);_(i,()=>`The shape of dict['${o.name}'] provided in model.execute(dict) must be [${a}], but was [${r.shape}]`)}o.attrParams.dtype&&o.attrParams.dtype.value&&_(r.dtype===o.attrParams.dtype.value,()=>`The dtype of dict['${o.name}'] provided in model.execute(dict) must be ${o.attrParams.dtype.value}, but was ${r.dtype}`)})}mapInputs(e){var t,r;const s={};for(const o in e){const a=(r=(t=this._signature)===null||t===void 0?void 0:t.inputs)===null||r===void 0?void 0:r[o];a!=null?s[a.name]=e[o]:s[o]=e[o]}return s}checkInputs(e){const t=Object.keys(e).filter(r=>{const[s]=Dt(r);return this.graph.nodes[s]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>{var r,s;const o=(s=(r=this._signature)===null||r===void 0?void 0:r.outputs)===null||s===void 0?void 0:s[t];return o!=null?o.name:t},{})}checkOutputs(e){e.forEach(t=>{const[r]=Dt(t);if(!this.graph.nodes[r])throw new Error(`The output '${t}' is not found in the graph`)})}}class DS{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FS="?tfjs-format=file",PS="model.json";class LS{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},r=$m){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=r,t==null&&(this.loadOptions={}),this.resourceManager=new DS}findIOHandler(){const e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return Ur(e)?e.then(t=>t.getWeightStream==null?this.loadSync(t):this.loadStreaming(t)):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(e.getWeightStream==null)throw new Error("Model artifacts missing streamWeights function");const t=await gf(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const r=this.artifacts.modelTopology;let s=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){const o=this.artifacts.userDefinedMetadata;o.signature!=null&&(s=o.signature),o.structuredOutputKeys!=null&&(this.structuredOutputKeys=o.structuredOutputKeys)}if(this.signature=s,this.version=`${r.versions.producer}.${r.versions.minConsumer}`,this.executor=new Ba(al.Instance.transformGraph(r,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){const o=al.Instance.transformGraph(e.modelInitializer);this.initializer=new Ba(o),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if(typeof e=="string"){const r=this.io.getSaveHandlers(e);if(r.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(r.length>1)throw new Error(`Found more than one (${r.length}) save handlers for URL '${e}'`);e=r[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t=e instanceof Qe?[e]:e,r={};return t.forEach((s,o)=>r[this.structuredOutputKeys[o]]=s),r}return e}predict(e,t){const r=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(r)}async predictAsync(e,t){const r=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(r)}normalizeInputs(e){var t;if(!(e instanceof Qe)&&!Array.isArray(e)){const o=(t=this.signature)===null||t===void 0?void 0:t.inputs;if(o!=null)for(const a in o){const i=o[a];i.resourceId!=null&&(e[a]=this.resourceIdToCapturedInput[i.resourceId])}return e}e=Array.isArray(e)?e:[e];const r=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+r!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-r} non-resource placeholders, while there are ${e.length} input tensors provided.`);let s=0;return this.inputNodes.reduce((o,a)=>{var i,u,c;const l=(c=(u=(i=this.signature)===null||i===void 0?void 0:i.inputs)===null||u===void 0?void 0:u[a])===null||c===void 0?void 0:c.resourceId;return l!=null?o[a]=this.resourceIdToCapturedInput[l]:o[a]=e[s++],o},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,r=Object.keys(t);for(let s=0;s<r.length;s++){const o=r[s],a=t[o];this.resourceIdToCapturedInput[a.resourceId]=e[s]}}}execute(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const r=this.executor.execute(e,t);return r.length>1?r:r[0]}async executeAsync(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const r=await this.executor.executeAsync(e,t);return r.length>1?r:r[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,r)=>(t[r]=[e[r]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&Ke(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function S1(n,e={},t=$m){if(n==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&typeof n=="string"&&(n=BS(n));const r=new LS(n,e,t);return await r.load(),r}function BS(n){return n.endsWith("/")||(n=n+"/"),`${n}${PS}${FS}`}/**
    * @license
    * Copyright 2024 Google LLC. All Rights Reserved.
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    * http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    * =============================================================================
    */var yn=function(){return yn=Object.assign||function(n){for(var e,t=1,r=arguments.length;t<r;t++)for(var s in e=arguments[t])Object.prototype.hasOwnProperty.call(e,s)&&(n[s]=e[s]);return n},yn.apply(this,arguments)};function Ln(n,e,t,r){return new(t||(t=Promise))(function(s,o){function a(c){try{u(r.next(c))}catch(l){o(l)}}function i(c){try{u(r.throw(c))}catch(l){o(l)}}function u(c){var l;c.done?s(c.value):(l=c.value,l instanceof t?l:new t(function(h){h(l)})).then(a,i)}u((r=r.apply(n,[])).next())})}function Bn(n,e){var t,r,s,o,a={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return o={next:i(0),throw:i(1),return:i(2)},typeof Symbol=="function"&&(o[Symbol.iterator]=function(){return this}),o;function i(u){return function(c){return function(l){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,r&&(s=2&l[0]?r.return:l[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,l[1])).done)return s;switch(r=0,s&&(l=[2&l[0],s.value]),l[0]){case 0:case 1:s=l;break;case 4:return a.label++,{value:l[1],done:!1};case 5:a.label++,r=l[1],l=[0];continue;case 7:l=a.ops.pop(),a.trys.pop();continue;default:if(s=a.trys,!((s=s.length>0&&s[s.length-1])||l[0]!==6&&l[0]!==2)){a=0;continue}if(l[0]===3&&(!s||l[1]>s[0]&&l[1]<s[3])){a.label=l[1];break}if(l[0]===6&&a.label<s[1]){a.label=s[1],s=l;break}if(s&&a.label<s[2]){a.label=s[2],a.ops.push(l);break}s[2]&&a.ops.pop(),a.trys.pop();continue}l=e.call(n,a)}catch(h){l=[6,h],r=0}finally{t=s=0}if(5&l[0])throw l[1];return{value:l[0]?l[1]:void 0,done:!0}}([u,c])}}}function nr(n){var e=n.map(function(t){return t[0]});return e.push(n[n.length-1][1]),e}var VS={lips:nr([[61,146],[146,91],[91,181],[181,84],[84,17],[17,314],[314,405],[405,321],[321,375],[375,291],[61,185],[185,40],[40,39],[39,37],[37,0],[0,267],[267,269],[269,270],[270,409],[409,291],[78,95],[95,88],[88,178],[178,87],[87,14],[14,317],[317,402],[402,318],[318,324],[324,308],[78,191],[191,80],[80,81],[81,82],[82,13],[13,312],[312,311],[311,310],[310,415],[415,308]]),leftEye:nr([[263,249],[249,390],[390,373],[373,374],[374,380],[380,381],[381,382],[382,362],[263,466],[466,388],[388,387],[387,386],[386,385],[385,384],[384,398],[398,362]]),leftEyebrow:nr([[276,283],[283,282],[282,295],[295,285],[300,293],[293,334],[334,296],[296,336]]),leftIris:nr([[474,475],[475,476],[476,477],[477,474]]),rightEye:nr([[33,7],[7,163],[163,144],[144,145],[145,153],[153,154],[154,155],[155,133],[33,246],[246,161],[161,160],[160,159],[159,158],[158,157],[157,173],[173,133]]),rightEyebrow:nr([[46,53],[53,52],[52,65],[65,55],[70,63],[63,105],[105,66],[66,107]]),rightIris:nr([[469,470],[470,471],[471,472],[472,469]]),faceOval:nr([[10,338],[338,297],[297,332],[332,284],[284,251],[251,389],[389,356],[356,454],[454,323],[323,361],[361,288],[288,397],[397,365],[365,379],[379,378],[378,400],[400,377],[377,152],[152,148],[148,176],[176,149],[149,150],[150,136],[136,172],[172,58],[58,132],[132,93],[93,234],[234,127],[127,162],[162,21],[21,54],[54,103],[103,67],[67,109],[109,10]])},MS=Object.entries(VS).map(function(n){var e=n[0];return n[1].map(function(t){return[t,e]})}).flat(),T1=new Map(MS);function Ou(n){for(var e={locationData:{relativeKeypoints:[]}},t=Number.MAX_SAFE_INTEGER,r=Number.MIN_SAFE_INTEGER,s=Number.MAX_SAFE_INTEGER,o=Number.MIN_SAFE_INTEGER,a=0;a<n.length;++a){var i=n[a];t=Math.min(t,i.x),r=Math.max(r,i.x),s=Math.min(s,i.y),o=Math.max(o,i.y),e.locationData.relativeKeypoints.push({x:i.x,y:i.y})}return e.locationData.relativeBoundingBox={xMin:t,yMin:s,xMax:r,yMax:o,width:r-t,height:o-s},e}var Oi={runtime:"mediapipe",maxFaces:1,refineLandmarks:!1},US=function(){function n(e){var t=this;this.width=0,this.height=0,this.selfieMode=!1,this.faceMeshSolution=new Rg.FaceMesh({locateFile:function(r,s){return e.solutionPath?e.solutionPath.replace(/\/+$/,"")+"/"+r:s+"/"+r}}),this.faceMeshSolution.setOptions({refineLandmarks:e.refineLandmarks,selfieMode:this.selfieMode,maxNumFaces:e.maxFaces}),this.faceMeshSolution.onResults(function(r){if(t.height=r.image.height,t.width=r.image.width,t.faces=[],r.multiFaceLandmarks!==null)for(var s=r.multiFaceLandmarks,o=0;o<s.length;o++){var a=t.translateOutput(s[o]);t.faces.push({keypoints:a,box:Ou(a).locationData.relativeBoundingBox})}})}return n.prototype.translateOutput=function(e){var t=this;return e.map(function(r,s){var o={x:r.x*t.width,y:r.y*t.height,z:r.z*t.width},a=T1.get(s);return a!=null&&(o.name=a),o})},n.prototype.estimateFaces=function(e,t){return Ln(this,void 0,void 0,function(){var r,s;return Bn(this,function(o){switch(o.label){case 0:return t&&t.flipHorizontal&&t.flipHorizontal!==this.selfieMode&&(this.selfieMode=t.flipHorizontal,this.faceMeshSolution.setOptions({selfieMode:this.selfieMode})),e instanceof Qe?(s=ImageData.bind,[4,Cm(e)]):[3,2];case 1:return r=new(s.apply(ImageData,[void 0,o.sent(),e.shape[1],e.shape[0]])),[3,3];case 2:r=e,o.label=3;case 3:return e=r,[4,this.faceMeshSolution.send({image:e})];case 4:return o.sent(),[2,this.faces]}})})},n.prototype.dispose=function(){this.faceMeshSolution.close()},n.prototype.reset=function(){this.faceMeshSolution.reset(),this.width=0,this.height=0,this.faces=null,this.selfieMode=!1},n.prototype.initialize=function(){return this.faceMeshSolution.initialize()},n}();function WS(n){return Ln(this,void 0,void 0,function(){var e,t;return Bn(this,function(r){switch(r.label){case 0:return e=function(s){if(s==null)return yn({},Oi);var o=yn({},s);return o.runtime="mediapipe",o.maxFaces==null&&(o.maxFaces=Oi.maxFaces),o.refineLandmarks==null&&(o.refineLandmarks=Oi.refineLandmarks),o}(n),[4,(t=new US(e)).initialize()];case 1:return r.sent(),[2,t]}})})}var Di=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},zS={};(function(){var n;function e(m){var $=0;return function(){return $<m.length?{done:!1,value:m[$++]}:{done:!0}}}var t=typeof Object.defineProperties=="function"?Object.defineProperty:function(m,$,T){return m==Array.prototype||m==Object.prototype||(m[$]=T.value),m},r=function(m){m=[typeof globalThis=="object"&&globalThis,m,typeof window=="object"&&window,typeof self=="object"&&self,typeof Di=="object"&&Di];for(var $=0;$<m.length;++$){var T=m[$];if(T&&T.Math==Math)return T}throw Error("Cannot find global object")}(this);function s(m,$){if($)e:{var T=r;m=m.split(".");for(var N=0;N<m.length-1;N++){var O=m[N];if(!(O in T))break e;T=T[O]}($=$(N=T[m=m[m.length-1]]))!=N&&$!=null&&t(T,m,{configurable:!0,writable:!0,value:$})}}function o(m){return(m={next:m})[Symbol.iterator]=function(){return this},m}function a(m){var $=typeof Symbol<"u"&&Symbol.iterator&&m[Symbol.iterator];return $?$.call(m):{next:e(m)}}function i(m){if(!(m instanceof Array)){m=a(m);for(var $,T=[];!($=m.next()).done;)T.push($.value);m=T}return m}s("Symbol",function(m){function $(O,A){this.g=O,t(this,"description",{configurable:!0,writable:!0,value:A})}if(m)return m;$.prototype.toString=function(){return this.g};var T="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",N=0;return function O(A){if(this instanceof O)throw new TypeError("Symbol is not a constructor");return new $(T+(A||"")+"_"+N++,A)}}),s("Symbol.iterator",function(m){if(m)return m;m=Symbol("Symbol.iterator");for(var $="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),T=0;T<$.length;T++){var N=r[$[T]];typeof N=="function"&&typeof N.prototype[m]!="function"&&t(N.prototype,m,{configurable:!0,writable:!0,value:function(){return o(e(this))}})}return m});var u,c=typeof Object.create=="function"?Object.create:function(m){function $(){}return $.prototype=m,new $};if(typeof Object.setPrototypeOf=="function")u=Object.setPrototypeOf;else{var l;e:{var h={};try{h.__proto__={a:!0},l=h.a;break e}catch{}l=!1}u=l?function(m,$){if(m.__proto__=$,m.__proto__!==$)throw new TypeError(m+" is not extensible");return m}:null}var d=u;function p(m,$){if(m.prototype=c($.prototype),m.prototype.constructor=m,d)d(m,$);else for(var T in $)if(T!="prototype")if(Object.defineProperties){var N=Object.getOwnPropertyDescriptor($,T);N&&Object.defineProperty(m,T,N)}else m[T]=$[T];m.na=$.prototype}function f(){this.l=!1,this.i=null,this.h=void 0,this.g=1,this.u=this.o=0,this.j=null}function x(m){if(m.l)throw new TypeError("Generator is already running");m.l=!0}function y(m,$){m.j={da:$,ea:!0},m.g=m.o||m.u}function b(m,$,T){return m.g=T,{value:$}}function S(m){this.g=new f,this.h=m}function I(m,$,T,N){try{var O=$.call(m.g.i,T);if(!(O instanceof Object))throw new TypeError("Iterator result "+O+" is not an object");if(!O.done)return m.g.l=!1,O;var A=O.value}catch(F){return m.g.i=null,y(m.g,F),k(m)}return m.g.i=null,N.call(m.g,A),k(m)}function k(m){for(;m.g.g;)try{var $=m.h(m.g);if($)return m.g.l=!1,{value:$.value,done:!1}}catch(T){m.g.h=void 0,y(m.g,T)}if(m.g.l=!1,m.g.j){if($=m.g.j,m.g.j=null,$.ea)throw $.da;return{value:$.return,done:!0}}return{value:void 0,done:!0}}function P(m){this.next=function($){return x(m.g),m.g.i?$=I(m,m.g.i.next,$,m.g.s):(m.g.s($),$=k(m)),$},this.throw=function($){return x(m.g),m.g.i?$=I(m,m.g.i.throw,$,m.g.s):(y(m.g,$),$=k(m)),$},this.return=function($){return function(T,N){x(T.g);var O=T.g.i;return O?I(T,"return"in O?O.return:function(A){return{value:A,done:!0}},N,T.g.return):(T.g.return(N),k(T))}(m,$)},this[Symbol.iterator]=function(){return this}}function W(m){return function($){function T(O){return $.next(O)}function N(O){return $.throw(O)}return new Promise(function(O,A){(function F(M){M.done?O(M.value):Promise.resolve(M.value).then(T,N).then(F,A)})($.next())})}(new P(new S(m)))}f.prototype.s=function(m){this.h=m},f.prototype.return=function(m){this.j={return:m},this.g=this.u},s("Promise",function(m){function $(F){this.h=0,this.i=void 0,this.g=[],this.s=!1;var M=this.j();try{F(M.resolve,M.reject)}catch(X){M.reject(X)}}function T(){this.g=null}function N(F){return F instanceof $?F:new $(function(M){M(F)})}if(m)return m;T.prototype.h=function(F){if(this.g==null){this.g=[];var M=this;this.i(function(){M.l()})}this.g.push(F)};var O=r.setTimeout;T.prototype.i=function(F){O(F,0)},T.prototype.l=function(){for(;this.g&&this.g.length;){var F=this.g;this.g=[];for(var M=0;M<F.length;++M){var X=F[M];F[M]=null;try{X()}catch(Q){this.j(Q)}}}this.g=null},T.prototype.j=function(F){this.i(function(){throw F})},$.prototype.j=function(){function F(Q){return function(ee){X||(X=!0,Q.call(M,ee))}}var M=this,X=!1;return{resolve:F(this.D),reject:F(this.l)}},$.prototype.D=function(F){if(F===this)this.l(new TypeError("A Promise cannot resolve to itself"));else if(F instanceof $)this.H(F);else{e:switch(typeof F){case"object":var M=F!=null;break e;case"function":M=!0;break e;default:M=!1}M?this.A(F):this.o(F)}},$.prototype.A=function(F){var M=void 0;try{M=F.then}catch(X){return void this.l(X)}typeof M=="function"?this.I(M,F):this.o(F)},$.prototype.l=function(F){this.u(2,F)},$.prototype.o=function(F){this.u(1,F)},$.prototype.u=function(F,M){if(this.h!=0)throw Error("Cannot settle("+F+", "+M+"): Promise already settled in state"+this.h);this.h=F,this.i=M,this.h===2&&this.G(),this.B()},$.prototype.G=function(){var F=this;O(function(){if(F.C()){var M=r.console;M!==void 0&&M.error(F.i)}},1)},$.prototype.C=function(){if(this.s)return!1;var F=r.CustomEvent,M=r.Event,X=r.dispatchEvent;return X===void 0||(typeof F=="function"?F=new F("unhandledrejection",{cancelable:!0}):typeof M=="function"?F=new M("unhandledrejection",{cancelable:!0}):(F=r.document.createEvent("CustomEvent")).initCustomEvent("unhandledrejection",!1,!0,F),F.promise=this,F.reason=this.i,X(F))},$.prototype.B=function(){if(this.g!=null){for(var F=0;F<this.g.length;++F)A.h(this.g[F]);this.g=null}};var A=new T;return $.prototype.H=function(F){var M=this.j();F.M(M.resolve,M.reject)},$.prototype.I=function(F,M){var X=this.j();try{F.call(M,X.resolve,X.reject)}catch(Q){X.reject(Q)}},$.prototype.then=function(F,M){function X(ae,ue){return typeof ae=="function"?function(xe){try{Q(ae(xe))}catch(Ce){ee(Ce)}}:ue}var Q,ee,se=new $(function(ae,ue){Q=ae,ee=ue});return this.M(X(F,Q),X(M,ee)),se},$.prototype.catch=function(F){return this.then(void 0,F)},$.prototype.M=function(F,M){function X(){switch(Q.h){case 1:F(Q.i);break;case 2:M(Q.i);break;default:throw Error("Unexpected state: "+Q.h)}}var Q=this;this.g==null?A.h(X):this.g.push(X),this.s=!0},$.resolve=N,$.reject=function(F){return new $(function(M,X){X(F)})},$.race=function(F){return new $(function(M,X){for(var Q=a(F),ee=Q.next();!ee.done;ee=Q.next())N(ee.value).M(M,X)})},$.all=function(F){var M=a(F),X=M.next();return X.done?N([]):new $(function(Q,ee){function se(xe){return function(Ce){ae[xe]=Ce,--ue==0&&Q(ae)}}var ae=[],ue=0;do ae.push(void 0),ue++,N(X.value).M(se(ae.length-1),ee),X=M.next();while(!X.done)})},$});var H=typeof Object.assign=="function"?Object.assign:function(m,$){for(var T=1;T<arguments.length;T++){var N=arguments[T];if(N)for(var O in N)Object.prototype.hasOwnProperty.call(N,O)&&(m[O]=N[O])}return m};s("Object.assign",function(m){return m||H}),s("Object.is",function(m){return m||function($,T){return $===T?$!==0||1/$==1/T:$!=$&&T!=T}}),s("Array.prototype.includes",function(m){return m||function($,T){var N=this;N instanceof String&&(N=String(N));var O=N.length;for(0>(T=T||0)&&(T=Math.max(T+O,0));T<O;T++){var A=N[T];if(A===$||Object.is(A,$))return!0}return!1}}),s("String.prototype.includes",function(m){return m||function($,T){if(this==null)throw new TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if($ instanceof RegExp)throw new TypeError("First argument to String.prototype.includes must not be a regular expression");return this.indexOf($,T||0)!==-1}}),s("Array.prototype.keys",function(m){return m||function(){return function($,T){$ instanceof String&&($+="");var N=0,O=!1,A={next:function(){if(!O&&N<$.length){var F=N++;return{value:T(F,$[F]),done:!1}}return O=!0,{done:!0,value:void 0}}};return A[Symbol.iterator]=function(){return A},A}(this,function($){return $})}});var G=this||self;function B(m,$){m=m.split(".");var T,N=G;for((m[0]in N)||N.execScript===void 0||N.execScript("var "+m[0]);m.length&&(T=m.shift());)m.length||$===void 0?N=N[T]&&N[T]!==Object.prototype[T]?N[T]:N[T]={}:N[T]=$}function V(){throw Error("Invalid UTF8")}function R(m,$){return $=String.fromCharCode.apply(null,$),m==null?$:m+$}var q,te,he=typeof TextDecoder<"u",de=typeof TextEncoder<"u",ge={},be=null;function $e(m){var $;$===void 0&&($=0),_e(),$=ge[$];for(var T=Array(Math.floor(m.length/3)),N=$[64]||"",O=0,A=0;O<m.length-2;O+=3){var F=m[O],M=m[O+1],X=m[O+2],Q=$[F>>2];F=$[(3&F)<<4|M>>4],M=$[(15&M)<<2|X>>6],X=$[63&X],T[A++]=Q+F+M+X}switch(Q=0,X=N,m.length-O){case 2:X=$[(15&(Q=m[O+1]))<<2]||N;case 1:m=m[O],T[A]=$[m>>2]+$[(3&m)<<4|Q>>4]+X+N}return T.join("")}function Ie(m){var $=m.length,T=3*$/4;T%3?T=Math.floor(T):"=.".indexOf(m[$-1])!=-1&&(T="=.".indexOf(m[$-2])!=-1?T-2:T-1);var N=new Uint8Array(T),O=0;return function(A,F){function M(ue){for(;X<A.length;){var xe=A.charAt(X++),Ce=be[xe];if(Ce!=null)return Ce;if(!/^[\s\xa0]*$/.test(xe))throw Error("Unknown base64 encoding at char: "+xe)}return ue}_e();for(var X=0;;){var Q=M(-1),ee=M(0),se=M(64),ae=M(64);if(ae===64&&Q===-1)break;F(Q<<2|ee>>4),se!=64&&(F(ee<<4&240|se>>2),ae!=64&&F(se<<6&192|ae))}}(m,function(A){N[O++]=A}),O!==T?N.subarray(0,O):N}function _e(){if(!be){be={};for(var m="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),$=["+/=","+/","-_=","-_.","-_"],T=0;5>T;T++){var N=m.concat($[T].split(""));ge[T]=N;for(var O=0;O<N.length;O++){var A=N[O];be[A]===void 0&&(be[A]=O)}}}}var Pe,Ve=typeof Uint8Array=="function";function Ye(m){return Ve&&m!=null&&m instanceof Uint8Array}function cn(m){if(this.L=m,m!==null&&m.length===0)throw Error("ByteString should be constructed with non-empty values")}var Xn=typeof Uint8Array.prototype.slice=="function",Lt=0;function zs(m,$){return Error("Invalid wire type: "+m+" (at position "+$+")")}function as(){return Error("Failed to read varint, encoding is invalid.")}function Xt(m,$){$=($=$===void 0?{}:$).v!==void 0&&$.v,this.h=null,this.g=this.i=this.j=0,this.v=$,m&&qt(this,m)}function qt(m,$){m.h=function(T,N){if(T.constructor===Uint8Array)return T;if(T.constructor===ArrayBuffer)return new Uint8Array(T);if(T.constructor===Array)return new Uint8Array(T);if(T.constructor===String)return Ie(T);if(T.constructor===cn)return!N&&(N=T.L)&&N.constructor===Uint8Array?N:(N=(N=T.L)==null||Ye(N)?N:typeof N=="string"?Ie(N):null,(T=T.L=N)?new Uint8Array(T):Pe||(Pe=new Uint8Array(0)));if(T instanceof Uint8Array)return new Uint8Array(T.buffer,T.byteOffset,T.byteLength);throw Error("Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, or Array of numbers")}($,m.v),m.j=0,m.i=m.h.length,m.g=m.j}function Je(m){if(m.g>m.i)throw Error("Tried to read past the end of the data "+m.g+" > "+m.i)}function qn(m){var $=m.h,T=$[m.g],N=127&T;if(128>T)return m.g+=1,Je(m),N;if(N|=(127&(T=$[m.g+1]))<<7,128>T)return m.g+=2,Je(m),N;if(N|=(127&(T=$[m.g+2]))<<14,128>T)return m.g+=3,Je(m),N;if(N|=(127&(T=$[m.g+3]))<<21,128>T)return m.g+=4,Je(m),N;if(T=$[m.g+4],m.g+=5,N|=(15&T)<<28,128>T)return Je(m),N;if(128<=$[m.g++]&&128<=$[m.g++]&&128<=$[m.g++]&&128<=$[m.g++]&&128<=$[m.g++])throw as();return Je(m),N}Xt.prototype.reset=function(){this.g=this.j};var br=[];function is(){this.g=[]}function Yt(m,$){for(;127<$;)m.g.push(127&$|128),$>>>=7;m.g.push($)}function ln(m){var $={},T=$.W!==void 0&&$.W;this.l={v:$.v!==void 0&&$.v},this.W=T,$=this.l,br.length?(T=br.pop(),$&&(T.v=$.v),m&&qt(T,m),m=T):m=new Xt(m,$),this.g=m,this.j=this.g.g,this.h=this.i=-1}function Yn(m){var $=m.g;if($.g==$.i)return!1;m.j=m.g.g;var T=qn(m.g)>>>0;if($=T>>>3,!(0<=(T&=7)&&5>=T))throw zs(T,m.j);if(1>$)throw Error("Invalid field number: "+$+" (at position "+m.j+")");return m.i=$,m.h=T,!0}function It(m){switch(m.h){case 0:if(m.h!=0)It(m);else e:{for(var $=(m=m.g).g,T=$+10;$<T;)if(!(128&m.h[$++])){m.g=$,Je(m);break e}throw as()}break;case 1:(m=m.g).g+=8,Je(m);break;case 2:m.h!=2?It(m):($=qn(m.g)>>>0,(m=m.g).g+=$,Je(m));break;case 5:(m=m.g).g+=4,Je(m);break;case 3:for($=m.i;;){if(!Yn(m))throw Error("Unmatched start-group tag: stream EOF");if(m.h==4){if(m.i!=$)throw Error("Unmatched end-group tag");break}It(m)}break;default:throw zs(m.h,m.j)}}is.prototype.length=function(){return this.g.length},is.prototype.end=function(){var m=this.g;return this.g=[],m},ln.prototype.reset=function(){this.g.reset(),this.j=this.g.g,this.h=this.i=-1};var hn=[];function us(){this.i=[],this.h=0,this.g=new is}function nt(m,$){$.length!==0&&(m.i.push($),m.h+=$.length)}var wr=typeof Symbol=="function"&&typeof Symbol()=="symbol"?Symbol(void 0):void 0;function Gs(m,$){Object.isFrozen(m)||(wr?m[wr]|=$:m.N!==void 0?m.N|=$:Object.defineProperties(m,{N:{value:$,configurable:!0,writable:!0,enumerable:!1}}))}function js(m){var $;return($=wr?m[wr]:m.N)==null?0:$}function _n(m){return Gs(m,1),m}function Qt(m){return!!Array.isArray(m)&&!!(2&js(m))}function vr(m){if(!Array.isArray(m))throw Error("cannot mark non-array as immutable");Gs(m,2)}function kt(m){return m!==null&&typeof m=="object"&&!Array.isArray(m)&&m.constructor===Object}var $r=Object.freeze(_n([]));function Hs(m){if(Qt(m.m))throw Error("Cannot mutate an immutable Message")}var Ks,Mo=typeof Symbol<"u"&&Symbol.hasInstance!==void 0;function Uo(m){return{value:m,configurable:!1,writable:!1,enumerable:!1}}function ft(m,$,T){return $===-1?null:$>=m.i?m.g?m.g[$]:void 0:T!==void 0&&T&&m.g&&(T=m.g[$])!=null?T:m.m[$+m.h]}function et(m,$,T,N){N=N!==void 0&&N,Hs(m),$<m.i&&!N?m.m[$+m.h]=T:(m.g||(m.g=m.m[m.i+m.h]={}))[$]=T}function tt(m,$,T,N){T=T===void 0||T;var O=ft(m,$,N=N!==void 0&&N);return O==null&&(O=$r),Qt(m.m)?T&&(vr(O),Object.freeze(O)):(O===$r||Qt(O))&&et(m,$,O=_n(O.slice()),N),O}function Ct(m,$,T){return(m=(m=ft(m,$))==null?m:+m)==null?T===void 0?0:T:m}function Cr(m,$,T,N){m.j||(m.j={});var O=Qt(m.m),A=m.j[T];if(!A){N=tt(m,T,!0,N!==void 0&&N),A=[],O=O||Qt(N);for(var F=0;F<N.length;F++)A[F]=new $(N[F]),O&&vr(A[F].m);O&&(vr(A),Object.freeze(A)),m.j[T]=A}return A}function Ue(m,$,T,N,O){var A=A!==void 0&&A;return Hs(m),A=Cr(m,T,$,A),T=N||new T,m=tt(m,$),O!=null?(A.splice(O,0,T),m.splice(O,0,T.m)):(A.push(T),m.push(T.m)),T}function Sr(m,$){return(m=ft(m,$))==null?0:m}function Xs(m,$){return(m=ft(m,$))==null?"":m}function vn(m){var $=Wo;return Ee(m,$=$===void 0?cs:$)}function Bt(m,$){if(m!=null){if(Array.isArray(m))m=Ee(m,$);else if(kt(m)){var T,N={};for(T in m)N[T]=Bt(m[T],$);m=N}else m=$(m);return m}}function Ee(m,$){for(var T=m.slice(),N=0;N<T.length;N++)T[N]=Bt(T[N],$);return Array.isArray(m)&&1&js(m)&&_n(T),T}function Wo(m){return m&&typeof m=="object"&&m.toJSON?m.toJSON():(m=function($){switch(typeof $){case"number":return isFinite($)?$:String($);case"object":if($&&!Array.isArray($)){if(Ye($))return $e($);if($ instanceof cn){var T=$.L;return T=T==null||typeof T=="string"?T:Ve&&T instanceof Uint8Array?$e(T):null,($.L=T)||""}}}return $}(m),Array.isArray(m)?vn(m):m)}function cs(m){return Ye(m)?new Uint8Array(m):m}function Tr(m,$,T){m||(m=Ks),Ks=null;var N=this.constructor.h;if(m||(m=N?[N]:[]),this.h=(N?0:-1)-(this.constructor.g||0),this.j=void 0,this.m=m,m=(N=this.m.length)-1,N&&kt(N=this.m[m])?(this.i=m-this.h,this.g=N):$!==void 0&&-1<$?(this.i=Math.max($,m+1-this.h),this.g=void 0):this.i=Number.MAX_VALUE,T)for($=0;$<T.length;$++)if((m=T[$])<this.i)m+=this.h,(N=this.m[m])?Array.isArray(N)&&_n(N):this.m[m]=$r;else{var O=(N=this.g||(this.g=this.m[this.i+this.h]={}))[m];O?Array.isArray(O)&&_n(O):N[m]=$r}}function Nr(){Tr.apply(this,arguments)}if(Tr.prototype.toJSON=function(){return vn(this.m)},Tr.prototype.toString=function(){return this.m.toString()},p(Nr,Tr),Mo){var $n={};Object.defineProperties(Nr,($n[Symbol.hasInstance]=Uo(function(){throw Error("Cannot perform instanceof checks for MutableMessage")}),$n))}function ls(m,$,T){if(T){var N,O={};for(N in T){var A=T[N],F=A.ha;F||(O.F=A.la||A.fa.P,A.aa?(O.U=Go(A.aa),F=function(M){return function(X,Q,ee){return M.F(X,Q,ee,M.U)}}(O)):A.ca?(O.T=hs(A.X.g,A.ca),F=function(M){return function(X,Q,ee){return M.F(X,Q,ee,M.T)}}(O)):F=O.F,A.ha=F),F($,m,A.X),O={F:O.F,U:O.U,T:O.T}}}(function(M,X){if(X=X.ba){nt(M,M.g.end());for(var Q=0;Q<X.length;Q++)nt(M,X[Q])}})($,m)}var Vt=Symbol();function Cn(m,$,T){return m[Vt]||(m[Vt]=function(N,O){return $(N,O,T)})}function zo(m){var $=m[Vt];if(!$){var T=qo(m);$=function(N,O){return qs(N,O,T)},m[Vt]=$}return $}function di(m){var $=function(O){var A=O.aa;return A?zo(A):(A=O.ka)?Cn(O.X.g,A,O.ca):void 0}(m),T=m.X,N=m.fa.O;return $?function(O,A){return N(O,A,T,$)}:function(O,A){return N(O,A,T)}}function it(m,$,T,N,O,A){var F=0;for((m=m()).length&&typeof m[0]!="number"&&(T($,m[0]),F++);F<m.length;){T=m[F++];for(var M=F+1;M<m.length&&typeof m[M]!="number";)M++;var X=m[F++];switch(M-=F){case 0:N($,T,X);break;case 1:N($,T,X,m[F++]);break;case 2:O($,T,X,m[F++],m[F++]);break;case 3:M=m[F++];var Q=m[F++],ee=m[F++];Array.isArray(ee)?O($,T,X,M,Q,ee):A($,T,X,M,Q,ee);break;case 4:A($,T,X,m[F++],m[F++],m[F++],m[F++]);break;default:throw Error("unexpected number of binary field arguments: "+M)}}return $}var Sn=Symbol();function Go(m){var $=m[Sn];if(!$){var T=Xo(m);$=function(N,O){return Qs(N,O,T)},m[Sn]=$}return $}function hs(m,$){var T=m[Sn];return T||(T=function(N,O){return ls(N,O,$)},m[Sn]=T),T}var jo=Symbol();function Qn(m,$){m.push($)}function pi(m,$,T){m.push($,T.P)}function Ho(m,$,T,N,O){var A=Go(O),F=T.P;m.push($,function(M,X,Q){return F(M,X,Q,N,A)})}function Ko(m,$,T,N,O,A){var F=hs(N,A),M=T.P;m.push($,function(X,Q,ee){return M(X,Q,ee,N,F)})}function Xo(m){var $=m[jo];return $||it(m,m[jo]=[],Qn,pi,Ho,Ko)}var ds=Symbol();function An(m,$){m[0]=$}function fi(m,$,T,N){var O=T.O;m[$]=N?function(A,F,M){return O(A,F,M,N)}:O}function mi(m,$,T,N,O,A){var F=T.O,M=zo(O);m[$]=function(X,Q,ee){return F(X,Q,ee,N,M,A)}}function ps(m,$,T,N,O,A,F){var M=T.O,X=Cn(N,O,A);m[$]=function(Q,ee,se){return M(Q,ee,se,N,X,F)}}function qo(m){var $=m[ds];return $||it(m,m[ds]={},An,fi,mi,ps)}function qs(m,$,T){for(;Yn($)&&$.h!=4;){var N=$.i,O=T[N];if(!O){var A=T[0];A&&(A=A[N])&&(O=T[N]=di(A))}if(!(O&&O($,m,N)||(O=$,N=m,A=O.j,It(O),O.W))){var F=O.g.h;O=A===(O=O.g.g)?Pe||(Pe=new Uint8Array(0)):Xn?F.slice(A,O):new Uint8Array(F.subarray(A,O)),(A=N.ba)?A.push(O):N.ba=[O]}}return m}function Ys(m,$,T){if(hn.length){var N=hn.pop();m&&(qt(N.g,m),N.i=-1,N.h=-1),m=N}else m=new ln(m);try{return qs(new $,m,qo(T))}finally{($=m.g).h=null,$.j=0,$.i=0,$.g=0,$.v=!1,m.i=-1,m.h=-1,100>hn.length&&hn.push(m)}}function Qs(m,$,T){for(var N=T.length,O=N%2==1,A=O?1:0;A<N;A+=2)(0,T[A+1])($,m,T[A]);ls(m,$,O?T[0]:void 0)}function Er(m,$){var T=new us;Qs(m,T,Xo($)),nt(T,T.g.end()),m=new Uint8Array(T.h);for(var N=($=T.i).length,O=0,A=0;A<N;A++){var F=$[A];m.set(F,O),O+=F.length}return T.i=[m],m}function Zn(m,$){return{O:m,P:$}}var Mt=Zn(function(m,$,T){if(m.h!==5)return!1;var N=(m=m.g).h[m.g],O=m.h[m.g+1],A=m.h[m.g+2],F=m.h[m.g+3];return m.g+=4,Je(m),m=2*((O=(N<<0|O<<8|A<<16|F<<24)>>>0)>>31)+1,N=O>>>23&255,O&=8388607,et($,T,N==255?O?NaN:1/0*m:N==0?m*Math.pow(2,-149)*O:m*Math.pow(2,N-150)*(O+Math.pow(2,23))),!0},function(m,$,T){if(($=ft($,T))!=null){Yt(m.g,8*T+5),m=m.g;var N=$;(N=(T=0>N?1:0)?-N:N)===0?0<1/N?Lt=0:Lt=2147483648:isNaN(N)?Lt=2147483647:34028234663852886e22<N?Lt=(T<<31|2139095040)>>>0:11754943508222875e-54>N?(N=Math.round(N/Math.pow(2,-149)),Lt=(T<<31|N)>>>0):($=Math.floor(Math.log(N)/Math.LN2),N*=Math.pow(2,-$),16777216<=(N=Math.round(8388608*N))&&++$,Lt=(T<<31|$+127<<23|8388607&N)>>>0),T=Lt,m.g.push(T>>>0&255),m.g.push(T>>>8&255),m.g.push(T>>>16&255),m.g.push(T>>>24&255)}}),gi=Zn(function(m,$,T){if(m.h!==0)return!1;for(var N=m.g,O=128,A=0,F=m=0;4>F&&128<=O;F++)O=N.h[N.g++],Je(N),A|=(127&O)<<7*F;if(128<=O&&(O=N.h[N.g++],Je(N),A|=(127&O)<<28,m|=(127&O)>>4),128<=O)for(F=0;5>F&&128<=O;F++)O=N.h[N.g++],Je(N),m|=(127&O)<<7*F+3;if(!(128>O))throw as();return N=A>>>0,(m=2147483648&(O=m>>>0))&&(O=~O>>>0,(N=1+~N>>>0)==0&&(O=O+1>>>0)),N=4294967296*O+(N>>>0),et($,T,m?-N:N),!0},function(m,$,T){if(($=ft($,T))!=null&&$!=null){Yt(m.g,8*T),m=m.g;var N=$;for(T=0>N,$=(N=Math.abs(N))>>>0,N=Math.floor((N-$)/4294967296),N>>>=0,T&&(N=~N>>>0,4294967295<($=1+(~$>>>0))&&($=0,4294967295<++N&&(N=0))),T=Lt=$,$=N;0<$||127<T;)m.g.push(127&T|128),T=(T>>>7|$<<25)>>>0,$>>>=7;m.g.push(T)}}),yi=Zn(function(m,$,T){return m.h===0&&(et($,T,qn(m.g)),!0)},function(m,$,T){if(($=ft($,T))!=null&&$!=null)if(Yt(m.g,8*T),m=m.g,0<=(T=$))Yt(m,T);else{for($=0;9>$;$++)m.g.push(127&T|128),T>>=7;m.g.push(1)}}),Yo=Zn(function(m,$,T){if(m.h!==2)return!1;var N,O=qn(m.g)>>>0,A=(m=m.g).g;if(m.g+=O,Je(m),m=m.h,he)(N=q)||(N=q=new TextDecoder("utf-8",{fatal:!0})),N=N.decode(m.subarray(A,A+O));else{O=A+O;for(var F,M,X,Q=[],ee=null;A<O;)128>(F=m[A++])?Q.push(F):224>F?A>=O?V():(M=m[A++],194>F||(192&M)!=128?(A--,V()):Q.push((31&F)<<6|63&M)):240>F?A>=O-1?V():(192&(M=m[A++]))!=128||F===224&&160>M||F===237&&160<=M||(192&(N=m[A++]))!=128?(A--,V()):Q.push((15&F)<<12|(63&M)<<6|63&N):244>=F?A>=O-2?V():(192&(M=m[A++]))!=128||M-144+(F<<28)>>30||(192&(N=m[A++]))!=128||(192&(X=m[A++]))!=128?(A--,V()):(F=(7&F)<<18|(63&M)<<12|(63&N)<<6|63&X,F-=65536,Q.push(55296+(F>>10&1023),56320+(1023&F))):V(),8192<=Q.length&&(ee=R(ee,Q),Q.length=0);N=R(ee,Q)}return et($,T,N),!0},function(m,$,T){if(($=ft($,T))!=null){var N=!1;if(N=N!==void 0&&N,de){if(N&&/(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])/.test($))throw Error("Found an unpaired surrogate");$=(te||(te=new TextEncoder)).encode($)}else{for(var O=0,A=new Uint8Array(3*$.length),F=0;F<$.length;F++){var M=$.charCodeAt(F);if(128>M)A[O++]=M;else{if(2048>M)A[O++]=M>>6|192;else{if(55296<=M&&57343>=M){if(56319>=M&&F<$.length){var X=$.charCodeAt(++F);if(56320<=X&&57343>=X){M=1024*(M-55296)+X-56320+65536,A[O++]=M>>18|240,A[O++]=M>>12&63|128,A[O++]=M>>6&63|128,A[O++]=63&M|128;continue}F--}if(N)throw Error("Found an unpaired surrogate");M=65533}A[O++]=M>>12|224,A[O++]=M>>6&63|128}A[O++]=63&M|128}}$=A.subarray(0,O)}Yt(m.g,8*T+2),Yt(m.g,$.length),nt(m,m.g.end()),nt(m,$)}}),Zs=Zn(function(m,$,T,N,O){if(m.h!==2)return!1;$=Ue($,T,N),T=m.g.i,N=qn(m.g)>>>0;var A=m.g.g+N,F=A-T;if(0>=F&&(m.g.i=A,O($,m),F=A-m.g.g),F)throw Error("Message parsing ended unexpectedly. Expected to read "+N+" bytes, instead read "+(N-F)+" bytes, either the data ended unexpectedly or the message misreported its own length");return m.g.g=A,m.g.i=T,!0},function(m,$,T,N,O){if(($=Cr($,N,T))!=null)for(N=0;N<$.length;N++){var A=m;Yt(A.g,8*T+2);var F=A.g.end();nt(A,F),F.push(A.h),A=F,O($[N],m),F=m;var M=A.pop();for(M=F.h+F.g.length()-M;127<M;)A.push(127&M|128),M>>>=7,F.h++;A.push(M),F.h++}});function Rt(){Nr.apply(this,arguments)}if(p(Rt,Nr),Mo){var Qo={};Object.defineProperties(Rt,(Qo[Symbol.hasInstance]=Uo(Object[Symbol.hasInstance]),Qo))}function On(m){Rt.call(this,m)}function Zo(){return[1,yi,2,Mt,3,Yo,4,Yo]}function Js(m){Rt.call(this,m,-1,bi)}function xi(){return[1,Zs,On,Zo]}p(On,Rt),p(Js,Rt),Js.prototype.addClassification=function(m,$){return Ue(this,1,On,m,$),this};var bi=[1];function Jn(m){Rt.call(this,m)}function Jo(){return[1,Mt,2,Mt,3,Mt,4,Mt,5,Mt]}function ea(m){Rt.call(this,m,-1,vi)}function wi(){return[1,Zs,Jn,Jo]}p(Jn,Rt),p(ea,Rt);var vi=[1];function eo(m){Rt.call(this,m)}function to(){return[1,Mt,2,Mt,3,Mt,4,Mt,5,Mt,6,gi]}p(eo,Rt);var no=[[61,146],[146,91],[91,181],[181,84],[84,17],[17,314],[314,405],[405,321],[321,375],[375,291],[61,185],[185,40],[40,39],[39,37],[37,0],[0,267],[267,269],[269,270],[270,409],[409,291],[78,95],[95,88],[88,178],[178,87],[87,14],[14,317],[317,402],[402,318],[318,324],[324,308],[78,191],[191,80],[80,81],[81,82],[82,13],[13,312],[312,311],[311,310],[310,415],[415,308]],ro=[[263,249],[249,390],[390,373],[373,374],[374,380],[380,381],[381,382],[382,362],[263,466],[466,388],[388,387],[387,386],[386,385],[385,384],[384,398],[398,362]],so=[[276,283],[283,282],[282,295],[295,285],[300,293],[293,334],[334,296],[296,336]],oo=[[33,7],[7,163],[163,144],[144,145],[145,153],[153,154],[154,155],[155,133],[33,246],[246,161],[161,160],[160,159],[159,158],[158,157],[157,173],[173,133]],ao=[[46,53],[53,52],[52,65],[65,55],[70,63],[63,105],[105,66],[66,107]],ta=[[10,338],[338,297],[297,332],[332,284],[284,251],[251,389],[389,356],[356,454],[454,323],[323,361],[361,288],[288,397],[397,365],[365,379],[379,378],[378,400],[400,377],[377,152],[152,148],[148,176],[176,149],[149,150],[150,136],[136,172],[172,58],[58,132],[132,93],[93,234],[234,127],[127,162],[162,21],[21,54],[54,103],[103,67],[67,109],[109,10]],na=[].concat(i(no),i(ro),i(so),i(oo),i(ao),i(ta));function g(m,$,T){if(T=m.createShader(T===0?m.VERTEX_SHADER:m.FRAGMENT_SHADER),m.shaderSource(T,$),m.compileShader(T),!m.getShaderParameter(T,m.COMPILE_STATUS))throw Error(`Could not compile WebGL shader.

`+m.getShaderInfoLog(T));return T}function v(m){return Cr(m,On,1).map(function($){return{index:Sr($,1),ga:Ct($,2),label:ft($,3)!=null?Xs($,3):void 0,displayName:ft($,4)!=null?Xs($,4):void 0}})}function C(m){return{x:Ct(m,1),y:Ct(m,2),z:Ct(m,3),visibility:ft(m,4)!=null?Ct(m,4):void 0}}function D(m,$){this.h=m,this.g=$,this.l=0}function z(m,$,T){return function(N,O){var A=N.g;if(N.o===void 0){var F=g(A,`
  attribute vec2 aVertex;
  attribute vec2 aTex;
  varying vec2 vTex;
  void main(void) {
    gl_Position = vec4(aVertex, 0.0, 1.0);
    vTex = aTex;
  }`,0),M=g(A,`
  precision mediump float;
  varying vec2 vTex;
  uniform sampler2D sampler0;
  void main(){
    gl_FragColor = texture2D(sampler0, vTex);
  }`,1),X=A.createProgram();if(A.attachShader(X,F),A.attachShader(X,M),A.linkProgram(X),!A.getProgramParameter(X,A.LINK_STATUS))throw Error(`Could not compile WebGL program.

`+A.getProgramInfoLog(X));F=N.o=X,A.useProgram(F),M=A.getUniformLocation(F,"sampler0"),N.j={K:A.getAttribLocation(F,"aVertex"),J:A.getAttribLocation(F,"aTex"),ma:M},N.u=A.createBuffer(),A.bindBuffer(A.ARRAY_BUFFER,N.u),A.enableVertexAttribArray(N.j.K),A.vertexAttribPointer(N.j.K,2,A.FLOAT,!1,0,0),A.bufferData(A.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),A.STATIC_DRAW),A.bindBuffer(A.ARRAY_BUFFER,null),N.s=A.createBuffer(),A.bindBuffer(A.ARRAY_BUFFER,N.s),A.enableVertexAttribArray(N.j.J),A.vertexAttribPointer(N.j.J,2,A.FLOAT,!1,0,0),A.bufferData(A.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),A.STATIC_DRAW),A.bindBuffer(A.ARRAY_BUFFER,null),A.uniform1i(M,0)}F=N.j,A.useProgram(N.o),A.canvas.width=O.width,A.canvas.height=O.height,A.viewport(0,0,O.width,O.height),A.activeTexture(A.TEXTURE0),N.h.bindTexture2d(O.glName),A.enableVertexAttribArray(F.K),A.bindBuffer(A.ARRAY_BUFFER,N.u),A.vertexAttribPointer(F.K,2,A.FLOAT,!1,0,0),A.enableVertexAttribArray(F.J),A.bindBuffer(A.ARRAY_BUFFER,N.s),A.vertexAttribPointer(F.J,2,A.FLOAT,!1,0,0),A.bindFramebuffer(A.DRAW_FRAMEBUFFER?A.DRAW_FRAMEBUFFER:A.FRAMEBUFFER,null),A.clearColor(0,0,0,0),A.clear(A.COLOR_BUFFER_BIT),A.colorMask(!0,!0,!0,!0),A.drawArrays(A.TRIANGLE_FAN,0,4),A.disableVertexAttribArray(F.K),A.disableVertexAttribArray(F.J),A.bindBuffer(A.ARRAY_BUFFER,null),N.h.bindTexture2d(0)}(m,$),typeof m.g.canvas.transferToImageBitmap=="function"?Promise.resolve(m.g.canvas.transferToImageBitmap()):T?Promise.resolve(m.g.canvas):typeof createImageBitmap=="function"?createImageBitmap(m.g.canvas):(m.i===void 0&&(m.i=document.createElement("canvas")),new Promise(function(N){m.i.height=m.g.canvas.height,m.i.width=m.g.canvas.width,m.i.getContext("2d",{}).drawImage(m.g.canvas,0,0,m.g.canvas.width,m.g.canvas.height),N(m.i)}))}function Y(m){this.g=m}var K=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function J(m,$){return $+m}function re(m,$){window[m]=$}function le(m){if(this.g=m,this.listeners={},this.j={},this.H={},this.o={},this.u={},this.I=this.s=this.Z=!0,this.D=Promise.resolve(),this.Y="",this.C={},this.locateFile=m&&m.locateFile||J,typeof window=="object")var $=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else{if(typeof location>"u")throw Error("solutions can only be loaded on a web page or in a web worker");$=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/"}if(this.$=$,m.options)for(var T=($=a(Object.keys(m.options))).next();!T.done;T=$.next()){T=T.value;var N=m.options[T].default;N!==void 0&&(this.j[T]=typeof N=="function"?N():N)}}function ye(m){var $,T,N,O,A,F,M,X,Q,ee,se;return W(function(ae){switch(ae.g){case 1:return m.Z?($=m.g.files===void 0?[]:typeof m.g.files=="function"?m.g.files(m.j):m.g.files,b(ae,W(function(ue){switch(ue.g){case 1:return ue.o=2,b(ue,WebAssembly.instantiate(K),4);case 4:ue.g=3,ue.o=0;break;case 2:return ue.o=0,ue.j=null,ue.return(!1);case 3:return ue.return(!0)}}),2)):ae.return();case 2:if(T=ae.h,typeof window=="object")return re("createMediapipeSolutionsWasm",{locateFile:m.locateFile}),re("createMediapipeSolutionsPackedAssets",{locateFile:m.locateFile}),F=$.filter(function(ue){return ue.data!==void 0}),M=$.filter(function(ue){return ue.data===void 0}),X=Promise.all(F.map(function(ue){var xe=Ae(m,ue.url);if(ue.path!==void 0){var Ce=ue.path;xe=xe.then(function(Me){return m.overrideFile(Ce,Me),Promise.resolve(Me)})}return xe})),Q=Promise.all(M.map(function(ue){return ue.simd===void 0||ue.simd&&T||!ue.simd&&!T?function(xe){var Ce=document.createElement("script");return Ce.setAttribute("src",xe),Ce.setAttribute("crossorigin","anonymous"),new Promise(function(Me){Ce.addEventListener("load",function(){Me()},!1),Ce.addEventListener("error",function(){Me()},!1),document.body.appendChild(Ce)})}(m.locateFile(ue.url,m.$)):Promise.resolve()})).then(function(){var ue,xe,Ce;return W(function(Me){if(Me.g==1)return ue=window.createMediapipeSolutionsWasm,xe=window.createMediapipeSolutionsPackedAssets,Ce=m,b(Me,ue(xe),2);Ce.h=Me.h,Me.g=0})}),ee=W(function(ue){return m.g.graph&&m.g.graph.url?ue=b(ue,Ae(m,m.g.graph.url),0):(ue.g=0,ue=void 0),ue}),b(ae,Promise.all([Q,X,ee]),7);if(typeof importScripts!="function")throw Error("solutions can only be loaded on a web page or in a web worker");return N=$.filter(function(ue){return ue.simd===void 0||ue.simd&&T||!ue.simd&&!T}).map(function(ue){return m.locateFile(ue.url,m.$)}),importScripts.apply(null,i(N)),O=m,b(ae,createMediapipeSolutionsWasm(Module),6);case 6:O.h=ae.h,m.l=new OffscreenCanvas(1,1),m.h.canvas=m.l,A=m.h.GL.createContext(m.l,{antialias:!1,alpha:!1,ja:typeof WebGL2RenderingContext<"u"?2:1}),m.h.GL.makeContextCurrent(A),ae.g=4;break;case 7:if(m.l=document.createElement("canvas"),!(se=m.l.getContext("webgl2",{}))&&!(se=m.l.getContext("webgl",{})))return alert("Failed to create WebGL canvas context when passing video frame."),ae.return();m.G=se,m.h.canvas=m.l,m.h.createContext(m.l,!0,!0,{});case 4:m.i=new m.h.SolutionWasm,m.Z=!1,ae.g=0}})}function Ae(m,$){var T,N;return W(function(O){return $ in m.H?O.return(m.H[$]):(T=m.locateFile($,""),N=fetch(T).then(function(A){return A.arrayBuffer()}),m.H[$]=N,O.return(N))})}function Ne(m,$,T){var N,O,A,F,M,X,Q,ee,se,ae,ue,xe,Ce,Me;return W(function(ze){switch(ze.g){case 1:if(!T)return ze.return($);for(N={},O=0,A=a(Object.keys(T)),F=A.next();!F.done;F=A.next())M=F.value,typeof(X=T[M])!="string"&&X.type==="texture"&&$[X.stream]!==void 0&&++O;1<O&&(m.I=!1),Q=a(Object.keys(T)),F=Q.next();case 2:if(F.done){ze.g=4;break}if(ee=F.value,typeof(se=T[ee])=="string")return Ce=N,Me=ee,b(ze,function(Ir,Ec,fs){var ra;return W(function($i){return typeof fs=="number"||fs instanceof Uint8Array||fs instanceof Ir.h.Uint8BlobList?$i.return(fs):fs instanceof Ir.h.Texture2dDataOut?((ra=Ir.u[Ec])||(ra=new D(Ir.h,Ir.G),Ir.u[Ec]=ra),$i.return(z(ra,fs,Ir.I))):$i.return(void 0)})}(m,ee,$[se]),14);if(ae=$[se.stream],se.type==="detection_list"){if(ae){for(var St=ae.getRectList(),Zt=ae.getLandmarksList(),_t=ae.getClassificationsList(),Fe=[],mt=0;mt<St.size();++mt){var er=Ys(St.get(mt),eo,to);er={boundingBox:{xCenter:Ct(er,1),yCenter:Ct(er,2),height:Ct(er,3),width:Ct(er,4),rotation:Ct(er,5,0),rectId:Sr(er,6)},landmarks:Cr(Ys(Zt.get(mt),ea,wi),Jn,1).map(C),V:v(Ys(_t.get(mt),Js,xi))},Fe.push(er)}St=Fe}else St=[];N[ee]=St,ze.g=7;break}if(se.type==="proto_list"){if(ae){for(St=Array(ae.size()),Zt=0;Zt<ae.size();Zt++)St[Zt]=ae.get(Zt);ae.delete()}else St=[];N[ee]=St,ze.g=7;break}if(ae===void 0){ze.g=3;break}if(se.type==="float_list"){N[ee]=ae,ze.g=7;break}if(se.type==="proto"){N[ee]=ae,ze.g=7;break}if(se.type!=="texture")throw Error("Unknown output config type: '"+se.type+"'");return(ue=m.u[ee])||(ue=new D(m.h,m.G),m.u[ee]=ue),b(ze,z(ue,ae,m.I),13);case 13:xe=ze.h,N[ee]=xe;case 7:se.transform&&N[ee]&&(N[ee]=se.transform(N[ee])),ze.g=3;break;case 14:Ce[Me]=ze.h;case 3:F=Q.next(),ze.g=2;break;case 4:return ze.return(N)}})}function we(m,$){for(var T=$.name||"$",N=[].concat(i($.wants)),O=new m.h.StringList,A=a($.wants),F=A.next();!F.done;F=A.next())O.push_back(F.value);A=m.h.PacketListener.implement({onResults:function(M){for(var X={},Q=0;Q<$.wants.length;++Q)X[N[Q]]=M.get(Q);var ee=m.listeners[T];ee&&(m.D=Ne(m,X,$.outs).then(function(se){se=ee(se);for(var ae=0;ae<$.wants.length;++ae){var ue=X[N[ae]];typeof ue=="object"&&ue.hasOwnProperty&&ue.hasOwnProperty("delete")&&ue.delete()}se&&(m.D=se)}))}}),m.i.attachMultiListener(O,A),O.delete()}function fe(m){var $=this;m=m||{};var T={url:"face_detection_short.binarypb"},N={type:1,graphOptionXref:{calculatorType:"TensorsToDetectionsCalculator",calculatorName:"facedetectionshortrangegpu__facedetectionshortrangecommon__TensorsToDetectionsCalculator",fieldName:"min_score_thresh"}};this.g=new le({locateFile:m.locateFile,files:[{data:!0,url:"face_detection_short.binarypb"},{data:!0,url:"face_detection_short_range.tflite"},{simd:!0,url:"face_detection_solution_simd_wasm_bin.js"},{simd:!1,url:"face_detection_solution_wasm_bin.js"}],graph:T,listeners:[{wants:["detections","image_transformed"],outs:{image:"image_transformed",detections:{type:"detection_list",stream:"detections"}}}],inputs:{image:{type:"video",stream:"input_frames_gpu"}},options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:typeof window=="object"&&window.navigator!==void 0&&("iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document)},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},model:{type:0,onChange:function(O){var A,F,M,X,Q;return W(function(ee){switch(ee.g){case 1:A=a(O==="short"?["face_detection_short_range.tflite"]:["face_detection_full_range_sparse.tflite"]),F=A.next();case 2:if(F.done){ee.g=4;break}return M=F.value,X="third_party/mediapipe/modules/face_detection/"+M,b(ee,Ae($.g,M),5);case 5:Q=ee.h,$.g.overrideFile(X,Q),F=A.next(),ee.g=2;break;case 4:return T.url=O==="short"?"face_detection_short.binarypb":"face_detection_full.binarypb",N.graphOptionXref.calculatorName=O==="short"?"facedetectionshortrangegpu__facedetectionshortrangecommon__TensorsToDetectionsCalculator":"facedetectionfullrangegpu__facedetectionfullrangecommon__TensorsToDetectionsCalculator",ee.return(!0)}})}},minDetectionConfidence:N}})}(n=le.prototype).close=function(){return this.i&&this.i.delete(),Promise.resolve()},n.reset=function(){var m=this;return W(function($){m.i&&(m.i.reset(),m.o={},m.u={}),$.g=0})},n.setOptions=function(m,$){var T=this;if($=$||this.g.options){for(var N=[],O=[],A={},F=a(Object.keys(m)),M=F.next();!M.done;A={R:A.R,S:A.S},M=F.next()){var X=M.value;X in this.j&&this.j[X]===m[X]||(this.j[X]=m[X],(M=$[X])!==void 0&&(M.onChange&&(A.R=M.onChange,A.S=m[X],N.push(function(Q){return function(){return W(function(ee){if(ee.g==1)return b(ee,Q.R(Q.S),2);ee.h===!0&&(T.s=!0),ee.g=0})}}(A))),M.graphOptionXref&&(X={valueNumber:M.type===1?m[X]:0,valueBoolean:M.type===0&&m[X],valueString:M.type===2?m[X]:""},M=Object.assign(Object.assign(Object.assign({},{calculatorName:"",calculatorIndex:0}),M.graphOptionXref),X),O.push(M))))}N.length===0&&O.length===0||(this.s=!0,this.B=(this.B===void 0?[]:this.B).concat(O),this.A=(this.A===void 0?[]:this.A).concat(N))}},n.initialize=function(){var m=this;return W(function($){return $.g==1?b($,ye(m),2):$.g!=3?b($,function(T){var N,O,A,F,M,X,Q,ee;return W(function(se){if(se.g==1)return T.g.graph&&T.g.graph.url&&T.Y===T.g.graph.url?se.return():(T.s=!0,T.g.graph&&T.g.graph.url?(T.Y=T.g.graph.url,b(se,Ae(T,T.g.graph.url),3)):void(se.g=2));for(se.g!=2&&(N=se.h,T.i.loadGraph(N)),O=a(Object.keys(T.C)),A=O.next();!A.done;A=O.next())F=A.value,T.i.overrideFile(F,T.C[F]);if(T.C={},T.g.listeners)for(M=a(T.g.listeners),X=M.next();!X.done;X=M.next())Q=X.value,we(T,Q);ee=T.j,T.j={},T.setOptions(ee),se.g=0})}(m),3):b($,function(T){var N,O,A,F,M,X;return W(function(Q){switch(Q.g){case 1:if(!T.s)return Q.return();if(!T.A){Q.g=2;break}N=a(T.A),O=N.next();case 3:if(O.done){Q.g=5;break}return b(Q,(0,O.value)(),4);case 4:O=N.next(),Q.g=3;break;case 5:T.A=void 0;case 2:if(T.B){for(A=new T.h.GraphOptionChangeRequestList,F=a(T.B),M=F.next();!M.done;M=F.next())X=M.value,A.push_back(X);T.i.changeOptions(A),A.delete(),T.B=void 0}T.s=!1,Q.g=0}})}(m),0)})},n.overrideFile=function(m,$){this.i?this.i.overrideFile(m,$):this.C[m]=$},n.clearOverriddenFiles=function(){this.C={},this.i&&this.i.clearOverriddenFiles()},n.send=function(m,$){var T,N,O,A,F,M,X,Q,ee,se=this;return W(function(ae){switch(ae.g){case 1:return se.g.inputs?(T=1e3*($??performance.now()),b(ae,se.D,2)):ae.return();case 2:return b(ae,se.initialize(),3);case 3:for(N=new se.h.PacketDataList,O=a(Object.keys(m)),A=O.next();!A.done;A=O.next())if(F=A.value,M=se.g.inputs[F]){e:{var ue=m[F];switch(M.type){case"video":var xe=se.o[M.stream];if(xe||(xe=new D(se.h,se.G),se.o[M.stream]=xe),xe.l===0&&(xe.l=xe.h.createTexture()),typeof HTMLVideoElement<"u"&&ue instanceof HTMLVideoElement)var Ce=ue.videoWidth,Me=ue.videoHeight;else typeof HTMLImageElement<"u"&&ue instanceof HTMLImageElement?(Ce=ue.naturalWidth,Me=ue.naturalHeight):(Ce=ue.width,Me=ue.height);Me={glName:xe.l,width:Ce,height:Me},(Ce=xe.g).canvas.width=Me.width,Ce.canvas.height=Me.height,Ce.activeTexture(Ce.TEXTURE0),xe.h.bindTexture2d(xe.l),Ce.texImage2D(Ce.TEXTURE_2D,0,Ce.RGBA,Ce.RGBA,Ce.UNSIGNED_BYTE,ue),xe.h.bindTexture2d(0),xe=Me;break e;case"detections":for((xe=se.o[M.stream])||(xe=new Y(se.h),se.o[M.stream]=xe),xe.data||(xe.data=new xe.g.DetectionListData),xe.data.reset(ue.length),Me=0;Me<ue.length;++Me){Ce=ue[Me];var ze=xe.data,St=ze.setBoundingBox,Zt=Me,_t=Ce.boundingBox,Fe=new eo;if(et(Fe,1,_t.xCenter),et(Fe,2,_t.yCenter),et(Fe,3,_t.height),et(Fe,4,_t.width),et(Fe,5,_t.rotation),et(Fe,6,_t.rectId),_t=Er(Fe,to),St.call(ze,Zt,_t),Ce.landmarks)for(ze=0;ze<Ce.landmarks.length;++ze){var mt=!!(Fe=Ce.landmarks[ze]).visibility;Zt=(St=xe.data).addNormalizedLandmark,_t=Me,Fe=Object.assign(Object.assign({},Fe),{visibility:mt?Fe.visibility:0}),et(mt=new Jn,1,Fe.x),et(mt,2,Fe.y),et(mt,3,Fe.z),Fe.visibility&&et(mt,4,Fe.visibility),Fe=Er(mt,Jo),Zt.call(St,_t,Fe)}if(Ce.V)for(ze=0;ze<Ce.V.length;++ze)Zt=(St=xe.data).addClassification,_t=Me,Fe=Ce.V[ze],et(mt=new On,2,Fe.ga),Fe.index&&et(mt,1,Fe.index),Fe.label&&et(mt,3,Fe.label),Fe.displayName&&et(mt,4,Fe.displayName),Fe=Er(mt,Zo),Zt.call(St,_t,Fe)}xe=xe.data;break e;default:xe={}}}switch(X=xe,Q=M.stream,M.type){case"video":N.pushTexture2d(Object.assign(Object.assign({},X),{stream:Q,timestamp:T}));break;case"detections":(ee=X).stream=Q,ee.timestamp=T,N.pushDetectionList(ee);break;default:throw Error("Unknown input config type: '"+M.type+"'")}}return se.i.send(N),b(ae,se.D,4);case 4:N.delete(),ae.g=0}})},n.onResults=function(m,$){this.listeners[$||"$"]=m},B("Solution",le),B("OptionType",{BOOL:0,NUMBER:1,ia:2,0:"BOOL",1:"NUMBER",2:"STRING"}),(n=fe.prototype).close=function(){return this.g.close(),Promise.resolve()},n.onResults=function(m){this.g.onResults(m)},n.initialize=function(){var m=this;return W(function($){return b($,m.g.initialize(),0)})},n.reset=function(){this.g.reset()},n.send=function(m){var $=this;return W(function(T){return b(T,$.g.send(m),0)})},n.setOptions=function(m){this.g.setOptions(m)},B("FaceDetection",fe),B("FACEDETECTION_LIPS",no),B("FACEDETECTION_LEFT_EYE",ro),B("FACEDETECTION_LEFT_EYEBROW",so),B("FACEDETECTION_RIGHT_EYE",oo),B("FACEDETECTION_RIGHT_EYEBROW",ao),B("FACEDETECTION_FACE_OVAL",ta),B("FACEDETECTION_CONTOURS",na),B("FACEDETECTION_TESSELATION",[[127,34],[34,139],[139,127],[11,0],[0,37],[37,11],[232,231],[231,120],[120,232],[72,37],[37,39],[39,72],[128,121],[121,47],[47,128],[232,121],[121,128],[128,232],[104,69],[69,67],[67,104],[175,171],[171,148],[148,175],[118,50],[50,101],[101,118],[73,39],[39,40],[40,73],[9,151],[151,108],[108,9],[48,115],[115,131],[131,48],[194,204],[204,211],[211,194],[74,40],[40,185],[185,74],[80,42],[42,183],[183,80],[40,92],[92,186],[186,40],[230,229],[229,118],[118,230],[202,212],[212,214],[214,202],[83,18],[18,17],[17,83],[76,61],[61,146],[146,76],[160,29],[29,30],[30,160],[56,157],[157,173],[173,56],[106,204],[204,194],[194,106],[135,214],[214,192],[192,135],[203,165],[165,98],[98,203],[21,71],[71,68],[68,21],[51,45],[45,4],[4,51],[144,24],[24,23],[23,144],[77,146],[146,91],[91,77],[205,50],[50,187],[187,205],[201,200],[200,18],[18,201],[91,106],[106,182],[182,91],[90,91],[91,181],[181,90],[85,84],[84,17],[17,85],[206,203],[203,36],[36,206],[148,171],[171,140],[140,148],[92,40],[40,39],[39,92],[193,189],[189,244],[244,193],[159,158],[158,28],[28,159],[247,246],[246,161],[161,247],[236,3],[3,196],[196,236],[54,68],[68,104],[104,54],[193,168],[168,8],[8,193],[117,228],[228,31],[31,117],[189,193],[193,55],[55,189],[98,97],[97,99],[99,98],[126,47],[47,100],[100,126],[166,79],[79,218],[218,166],[155,154],[154,26],[26,155],[209,49],[49,131],[131,209],[135,136],[136,150],[150,135],[47,126],[126,217],[217,47],[223,52],[52,53],[53,223],[45,51],[51,134],[134,45],[211,170],[170,140],[140,211],[67,69],[69,108],[108,67],[43,106],[106,91],[91,43],[230,119],[119,120],[120,230],[226,130],[130,247],[247,226],[63,53],[53,52],[52,63],[238,20],[20,242],[242,238],[46,70],[70,156],[156,46],[78,62],[62,96],[96,78],[46,53],[53,63],[63,46],[143,34],[34,227],[227,143],[123,117],[117,111],[111,123],[44,125],[125,19],[19,44],[236,134],[134,51],[51,236],[216,206],[206,205],[205,216],[154,153],[153,22],[22,154],[39,37],[37,167],[167,39],[200,201],[201,208],[208,200],[36,142],[142,100],[100,36],[57,212],[212,202],[202,57],[20,60],[60,99],[99,20],[28,158],[158,157],[157,28],[35,226],[226,113],[113,35],[160,159],[159,27],[27,160],[204,202],[202,210],[210,204],[113,225],[225,46],[46,113],[43,202],[202,204],[204,43],[62,76],[76,77],[77,62],[137,123],[123,116],[116,137],[41,38],[38,72],[72,41],[203,129],[129,142],[142,203],[64,98],[98,240],[240,64],[49,102],[102,64],[64,49],[41,73],[73,74],[74,41],[212,216],[216,207],[207,212],[42,74],[74,184],[184,42],[169,170],[170,211],[211,169],[170,149],[149,176],[176,170],[105,66],[66,69],[69,105],[122,6],[6,168],[168,122],[123,147],[147,187],[187,123],[96,77],[77,90],[90,96],[65,55],[55,107],[107,65],[89,90],[90,180],[180,89],[101,100],[100,120],[120,101],[63,105],[105,104],[104,63],[93,137],[137,227],[227,93],[15,86],[86,85],[85,15],[129,102],[102,49],[49,129],[14,87],[87,86],[86,14],[55,8],[8,9],[9,55],[100,47],[47,121],[121,100],[145,23],[23,22],[22,145],[88,89],[89,179],[179,88],[6,122],[122,196],[196,6],[88,95],[95,96],[96,88],[138,172],[172,136],[136,138],[215,58],[58,172],[172,215],[115,48],[48,219],[219,115],[42,80],[80,81],[81,42],[195,3],[3,51],[51,195],[43,146],[146,61],[61,43],[171,175],[175,199],[199,171],[81,82],[82,38],[38,81],[53,46],[46,225],[225,53],[144,163],[163,110],[110,144],[52,65],[65,66],[66,52],[229,228],[228,117],[117,229],[34,127],[127,234],[234,34],[107,108],[108,69],[69,107],[109,108],[108,151],[151,109],[48,64],[64,235],[235,48],[62,78],[78,191],[191,62],[129,209],[209,126],[126,129],[111,35],[35,143],[143,111],[117,123],[123,50],[50,117],[222,65],[65,52],[52,222],[19,125],[125,141],[141,19],[221,55],[55,65],[65,221],[3,195],[195,197],[197,3],[25,7],[7,33],[33,25],[220,237],[237,44],[44,220],[70,71],[71,139],[139,70],[122,193],[193,245],[245,122],[247,130],[130,33],[33,247],[71,21],[21,162],[162,71],[170,169],[169,150],[150,170],[188,174],[174,196],[196,188],[216,186],[186,92],[92,216],[2,97],[97,167],[167,2],[141,125],[125,241],[241,141],[164,167],[167,37],[37,164],[72,38],[38,12],[12,72],[38,82],[82,13],[13,38],[63,68],[68,71],[71,63],[226,35],[35,111],[111,226],[101,50],[50,205],[205,101],[206,92],[92,165],[165,206],[209,198],[198,217],[217,209],[165,167],[167,97],[97,165],[220,115],[115,218],[218,220],[133,112],[112,243],[243,133],[239,238],[238,241],[241,239],[214,135],[135,169],[169,214],[190,173],[173,133],[133,190],[171,208],[208,32],[32,171],[125,44],[44,237],[237,125],[86,87],[87,178],[178,86],[85,86],[86,179],[179,85],[84,85],[85,180],[180,84],[83,84],[84,181],[181,83],[201,83],[83,182],[182,201],[137,93],[93,132],[132,137],[76,62],[62,183],[183,76],[61,76],[76,184],[184,61],[57,61],[61,185],[185,57],[212,57],[57,186],[186,212],[214,207],[207,187],[187,214],[34,143],[143,156],[156,34],[79,239],[239,237],[237,79],[123,137],[137,177],[177,123],[44,1],[1,4],[4,44],[201,194],[194,32],[32,201],[64,102],[102,129],[129,64],[213,215],[215,138],[138,213],[59,166],[166,219],[219,59],[242,99],[99,97],[97,242],[2,94],[94,141],[141,2],[75,59],[59,235],[235,75],[24,110],[110,228],[228,24],[25,130],[130,226],[226,25],[23,24],[24,229],[229,23],[22,23],[23,230],[230,22],[26,22],[22,231],[231,26],[112,26],[26,232],[232,112],[189,190],[190,243],[243,189],[221,56],[56,190],[190,221],[28,56],[56,221],[221,28],[27,28],[28,222],[222,27],[29,27],[27,223],[223,29],[30,29],[29,224],[224,30],[247,30],[30,225],[225,247],[238,79],[79,20],[20,238],[166,59],[59,75],[75,166],[60,75],[75,240],[240,60],[147,177],[177,215],[215,147],[20,79],[79,166],[166,20],[187,147],[147,213],[213,187],[112,233],[233,244],[244,112],[233,128],[128,245],[245,233],[128,114],[114,188],[188,128],[114,217],[217,174],[174,114],[131,115],[115,220],[220,131],[217,198],[198,236],[236,217],[198,131],[131,134],[134,198],[177,132],[132,58],[58,177],[143,35],[35,124],[124,143],[110,163],[163,7],[7,110],[228,110],[110,25],[25,228],[356,389],[389,368],[368,356],[11,302],[302,267],[267,11],[452,350],[350,349],[349,452],[302,303],[303,269],[269,302],[357,343],[343,277],[277,357],[452,453],[453,357],[357,452],[333,332],[332,297],[297,333],[175,152],[152,377],[377,175],[347,348],[348,330],[330,347],[303,304],[304,270],[270,303],[9,336],[336,337],[337,9],[278,279],[279,360],[360,278],[418,262],[262,431],[431,418],[304,408],[408,409],[409,304],[310,415],[415,407],[407,310],[270,409],[409,410],[410,270],[450,348],[348,347],[347,450],[422,430],[430,434],[434,422],[313,314],[314,17],[17,313],[306,307],[307,375],[375,306],[387,388],[388,260],[260,387],[286,414],[414,398],[398,286],[335,406],[406,418],[418,335],[364,367],[367,416],[416,364],[423,358],[358,327],[327,423],[251,284],[284,298],[298,251],[281,5],[5,4],[4,281],[373,374],[374,253],[253,373],[307,320],[320,321],[321,307],[425,427],[427,411],[411,425],[421,313],[313,18],[18,421],[321,405],[405,406],[406,321],[320,404],[404,405],[405,320],[315,16],[16,17],[17,315],[426,425],[425,266],[266,426],[377,400],[400,369],[369,377],[322,391],[391,269],[269,322],[417,465],[465,464],[464,417],[386,257],[257,258],[258,386],[466,260],[260,388],[388,466],[456,399],[399,419],[419,456],[284,332],[332,333],[333,284],[417,285],[285,8],[8,417],[346,340],[340,261],[261,346],[413,441],[441,285],[285,413],[327,460],[460,328],[328,327],[355,371],[371,329],[329,355],[392,439],[439,438],[438,392],[382,341],[341,256],[256,382],[429,420],[420,360],[360,429],[364,394],[394,379],[379,364],[277,343],[343,437],[437,277],[443,444],[444,283],[283,443],[275,440],[440,363],[363,275],[431,262],[262,369],[369,431],[297,338],[338,337],[337,297],[273,375],[375,321],[321,273],[450,451],[451,349],[349,450],[446,342],[342,467],[467,446],[293,334],[334,282],[282,293],[458,461],[461,462],[462,458],[276,353],[353,383],[383,276],[308,324],[324,325],[325,308],[276,300],[300,293],[293,276],[372,345],[345,447],[447,372],[352,345],[345,340],[340,352],[274,1],[1,19],[19,274],[456,248],[248,281],[281,456],[436,427],[427,425],[425,436],[381,256],[256,252],[252,381],[269,391],[391,393],[393,269],[200,199],[199,428],[428,200],[266,330],[330,329],[329,266],[287,273],[273,422],[422,287],[250,462],[462,328],[328,250],[258,286],[286,384],[384,258],[265,353],[353,342],[342,265],[387,259],[259,257],[257,387],[424,431],[431,430],[430,424],[342,353],[353,276],[276,342],[273,335],[335,424],[424,273],[292,325],[325,307],[307,292],[366,447],[447,345],[345,366],[271,303],[303,302],[302,271],[423,266],[266,371],[371,423],[294,455],[455,460],[460,294],[279,278],[278,294],[294,279],[271,272],[272,304],[304,271],[432,434],[434,427],[427,432],[272,407],[407,408],[408,272],[394,430],[430,431],[431,394],[395,369],[369,400],[400,395],[334,333],[333,299],[299,334],[351,417],[417,168],[168,351],[352,280],[280,411],[411,352],[325,319],[319,320],[320,325],[295,296],[296,336],[336,295],[319,403],[403,404],[404,319],[330,348],[348,349],[349,330],[293,298],[298,333],[333,293],[323,454],[454,447],[447,323],[15,16],[16,315],[315,15],[358,429],[429,279],[279,358],[14,15],[15,316],[316,14],[285,336],[336,9],[9,285],[329,349],[349,350],[350,329],[374,380],[380,252],[252,374],[318,402],[402,403],[403,318],[6,197],[197,419],[419,6],[318,319],[319,325],[325,318],[367,364],[364,365],[365,367],[435,367],[367,397],[397,435],[344,438],[438,439],[439,344],[272,271],[271,311],[311,272],[195,5],[5,281],[281,195],[273,287],[287,291],[291,273],[396,428],[428,199],[199,396],[311,271],[271,268],[268,311],[283,444],[444,445],[445,283],[373,254],[254,339],[339,373],[282,334],[334,296],[296,282],[449,347],[347,346],[346,449],[264,447],[447,454],[454,264],[336,296],[296,299],[299,336],[338,10],[10,151],[151,338],[278,439],[439,455],[455,278],[292,407],[407,415],[415,292],[358,371],[371,355],[355,358],[340,345],[345,372],[372,340],[346,347],[347,280],[280,346],[442,443],[443,282],[282,442],[19,94],[94,370],[370,19],[441,442],[442,295],[295,441],[248,419],[419,197],[197,248],[263,255],[255,359],[359,263],[440,275],[275,274],[274,440],[300,383],[383,368],[368,300],[351,412],[412,465],[465,351],[263,467],[467,466],[466,263],[301,368],[368,389],[389,301],[395,378],[378,379],[379,395],[412,351],[351,419],[419,412],[436,426],[426,322],[322,436],[2,164],[164,393],[393,2],[370,462],[462,461],[461,370],[164,0],[0,267],[267,164],[302,11],[11,12],[12,302],[268,12],[12,13],[13,268],[293,300],[300,301],[301,293],[446,261],[261,340],[340,446],[330,266],[266,425],[425,330],[426,423],[423,391],[391,426],[429,355],[355,437],[437,429],[391,327],[327,326],[326,391],[440,457],[457,438],[438,440],[341,382],[382,362],[362,341],[459,457],[457,461],[461,459],[434,430],[430,394],[394,434],[414,463],[463,362],[362,414],[396,369],[369,262],[262,396],[354,461],[461,457],[457,354],[316,403],[403,402],[402,316],[315,404],[404,403],[403,315],[314,405],[405,404],[404,314],[313,406],[406,405],[405,313],[421,418],[418,406],[406,421],[366,401],[401,361],[361,366],[306,408],[408,407],[407,306],[291,409],[409,408],[408,291],[287,410],[410,409],[409,287],[432,436],[436,410],[410,432],[434,416],[416,411],[411,434],[264,368],[368,383],[383,264],[309,438],[438,457],[457,309],[352,376],[376,401],[401,352],[274,275],[275,4],[4,274],[421,428],[428,262],[262,421],[294,327],[327,358],[358,294],[433,416],[416,367],[367,433],[289,455],[455,439],[439,289],[462,370],[370,326],[326,462],[2,326],[326,370],[370,2],[305,460],[460,455],[455,305],[254,449],[449,448],[448,254],[255,261],[261,446],[446,255],[253,450],[450,449],[449,253],[252,451],[451,450],[450,252],[256,452],[452,451],[451,256],[341,453],[453,452],[452,341],[413,464],[464,463],[463,413],[441,413],[413,414],[414,441],[258,442],[442,441],[441,258],[257,443],[443,442],[442,257],[259,444],[444,443],[443,259],[260,445],[445,444],[444,260],[467,342],[342,445],[445,467],[459,458],[458,250],[250,459],[289,392],[392,290],[290,289],[290,328],[328,460],[460,290],[376,433],[433,435],[435,376],[250,290],[290,392],[392,250],[411,416],[416,433],[433,411],[341,463],[463,464],[464,341],[453,464],[464,465],[465,453],[357,465],[465,412],[412,357],[343,412],[412,399],[399,343],[360,363],[363,440],[440,360],[437,399],[399,456],[456,437],[420,456],[456,363],[363,420],[401,435],[435,288],[288,401],[372,383],[383,353],[353,372],[339,255],[255,249],[249,339],[448,261],[261,255],[255,448],[133,243],[243,190],[190,133],[133,155],[155,112],[112,133],[33,246],[246,247],[247,33],[33,130],[130,25],[25,33],[398,384],[384,286],[286,398],[362,398],[398,414],[414,362],[362,463],[463,341],[341,362],[263,359],[359,467],[467,263],[263,249],[249,255],[255,263],[466,467],[467,260],[260,466],[75,60],[60,166],[166,75],[238,239],[239,79],[79,238],[162,127],[127,139],[139,162],[72,11],[11,37],[37,72],[121,232],[232,120],[120,121],[73,72],[72,39],[39,73],[114,128],[128,47],[47,114],[233,232],[232,128],[128,233],[103,104],[104,67],[67,103],[152,175],[175,148],[148,152],[119,118],[118,101],[101,119],[74,73],[73,40],[40,74],[107,9],[9,108],[108,107],[49,48],[48,131],[131,49],[32,194],[194,211],[211,32],[184,74],[74,185],[185,184],[191,80],[80,183],[183,191],[185,40],[40,186],[186,185],[119,230],[230,118],[118,119],[210,202],[202,214],[214,210],[84,83],[83,17],[17,84],[77,76],[76,146],[146,77],[161,160],[160,30],[30,161],[190,56],[56,173],[173,190],[182,106],[106,194],[194,182],[138,135],[135,192],[192,138],[129,203],[203,98],[98,129],[54,21],[21,68],[68,54],[5,51],[51,4],[4,5],[145,144],[144,23],[23,145],[90,77],[77,91],[91,90],[207,205],[205,187],[187,207],[83,201],[201,18],[18,83],[181,91],[91,182],[182,181],[180,90],[90,181],[181,180],[16,85],[85,17],[17,16],[205,206],[206,36],[36,205],[176,148],[148,140],[140,176],[165,92],[92,39],[39,165],[245,193],[193,244],[244,245],[27,159],[159,28],[28,27],[30,247],[247,161],[161,30],[174,236],[236,196],[196,174],[103,54],[54,104],[104,103],[55,193],[193,8],[8,55],[111,117],[117,31],[31,111],[221,189],[189,55],[55,221],[240,98],[98,99],[99,240],[142,126],[126,100],[100,142],[219,166],[166,218],[218,219],[112,155],[155,26],[26,112],[198,209],[209,131],[131,198],[169,135],[135,150],[150,169],[114,47],[47,217],[217,114],[224,223],[223,53],[53,224],[220,45],[45,134],[134,220],[32,211],[211,140],[140,32],[109,67],[67,108],[108,109],[146,43],[43,91],[91,146],[231,230],[230,120],[120,231],[113,226],[226,247],[247,113],[105,63],[63,52],[52,105],[241,238],[238,242],[242,241],[124,46],[46,156],[156,124],[95,78],[78,96],[96,95],[70,46],[46,63],[63,70],[116,143],[143,227],[227,116],[116,123],[123,111],[111,116],[1,44],[44,19],[19,1],[3,236],[236,51],[51,3],[207,216],[216,205],[205,207],[26,154],[154,22],[22,26],[165,39],[39,167],[167,165],[199,200],[200,208],[208,199],[101,36],[36,100],[100,101],[43,57],[57,202],[202,43],[242,20],[20,99],[99,242],[56,28],[28,157],[157,56],[124,35],[35,113],[113,124],[29,160],[160,27],[27,29],[211,204],[204,210],[210,211],[124,113],[113,46],[46,124],[106,43],[43,204],[204,106],[96,62],[62,77],[77,96],[227,137],[137,116],[116,227],[73,41],[41,72],[72,73],[36,203],[203,142],[142,36],[235,64],[64,240],[240,235],[48,49],[49,64],[64,48],[42,41],[41,74],[74,42],[214,212],[212,207],[207,214],[183,42],[42,184],[184,183],[210,169],[169,211],[211,210],[140,170],[170,176],[176,140],[104,105],[105,69],[69,104],[193,122],[122,168],[168,193],[50,123],[123,187],[187,50],[89,96],[96,90],[90,89],[66,65],[65,107],[107,66],[179,89],[89,180],[180,179],[119,101],[101,120],[120,119],[68,63],[63,104],[104,68],[234,93],[93,227],[227,234],[16,15],[15,85],[85,16],[209,129],[129,49],[49,209],[15,14],[14,86],[86,15],[107,55],[55,9],[9,107],[120,100],[100,121],[121,120],[153,145],[145,22],[22,153],[178,88],[88,179],[179,178],[197,6],[6,196],[196,197],[89,88],[88,96],[96,89],[135,138],[138,136],[136,135],[138,215],[215,172],[172,138],[218,115],[115,219],[219,218],[41,42],[42,81],[81,41],[5,195],[195,51],[51,5],[57,43],[43,61],[61,57],[208,171],[171,199],[199,208],[41,81],[81,38],[38,41],[224,53],[53,225],[225,224],[24,144],[144,110],[110,24],[105,52],[52,66],[66,105],[118,229],[229,117],[117,118],[227,34],[34,234],[234,227],[66,107],[107,69],[69,66],[10,109],[109,151],[151,10],[219,48],[48,235],[235,219],[183,62],[62,191],[191,183],[142,129],[129,126],[126,142],[116,111],[111,143],[143,116],[118,117],[117,50],[50,118],[223,222],[222,52],[52,223],[94,19],[19,141],[141,94],[222,221],[221,65],[65,222],[196,3],[3,197],[197,196],[45,220],[220,44],[44,45],[156,70],[70,139],[139,156],[188,122],[122,245],[245,188],[139,71],[71,162],[162,139],[149,170],[170,150],[150,149],[122,188],[188,196],[196,122],[206,216],[216,92],[92,206],[164,2],[2,167],[167,164],[242,141],[141,241],[241,242],[0,164],[164,37],[37,0],[11,72],[72,12],[12,11],[12,38],[38,13],[13,12],[70,63],[63,71],[71,70],[31,226],[226,111],[111,31],[36,101],[101,205],[205,36],[203,206],[206,165],[165,203],[126,209],[209,217],[217,126],[98,165],[165,97],[97,98],[237,220],[220,218],[218,237],[237,239],[239,241],[241,237],[210,214],[214,169],[169,210],[140,171],[171,32],[32,140],[241,125],[125,237],[237,241],[179,86],[86,178],[178,179],[180,85],[85,179],[179,180],[181,84],[84,180],[180,181],[182,83],[83,181],[181,182],[194,201],[201,182],[182,194],[177,137],[137,132],[132,177],[184,76],[76,183],[183,184],[185,61],[61,184],[184,185],[186,57],[57,185],[185,186],[216,212],[212,186],[186,216],[192,214],[214,187],[187,192],[139,34],[34,156],[156,139],[218,79],[79,237],[237,218],[147,123],[123,177],[177,147],[45,44],[44,4],[4,45],[208,201],[201,32],[32,208],[98,64],[64,129],[129,98],[192,213],[213,138],[138,192],[235,59],[59,219],[219,235],[141,242],[242,97],[97,141],[97,2],[2,141],[141,97],[240,75],[75,235],[235,240],[229,24],[24,228],[228,229],[31,25],[25,226],[226,31],[230,23],[23,229],[229,230],[231,22],[22,230],[230,231],[232,26],[26,231],[231,232],[233,112],[112,232],[232,233],[244,189],[189,243],[243,244],[189,221],[221,190],[190,189],[222,28],[28,221],[221,222],[223,27],[27,222],[222,223],[224,29],[29,223],[223,224],[225,30],[30,224],[224,225],[113,247],[247,225],[225,113],[99,60],[60,240],[240,99],[213,147],[147,215],[215,213],[60,20],[20,166],[166,60],[192,187],[187,213],[213,192],[243,112],[112,244],[244,243],[244,233],[233,245],[245,244],[245,128],[128,188],[188,245],[188,114],[114,174],[174,188],[134,131],[131,220],[220,134],[174,217],[217,236],[236,174],[236,198],[198,134],[134,236],[215,177],[177,58],[58,215],[156,143],[143,124],[124,156],[25,110],[110,7],[7,25],[31,228],[228,25],[25,31],[264,356],[356,368],[368,264],[0,11],[11,267],[267,0],[451,452],[452,349],[349,451],[267,302],[302,269],[269,267],[350,357],[357,277],[277,350],[350,452],[452,357],[357,350],[299,333],[333,297],[297,299],[396,175],[175,377],[377,396],[280,347],[347,330],[330,280],[269,303],[303,270],[270,269],[151,9],[9,337],[337,151],[344,278],[278,360],[360,344],[424,418],[418,431],[431,424],[270,304],[304,409],[409,270],[272,310],[310,407],[407,272],[322,270],[270,410],[410,322],[449,450],[450,347],[347,449],[432,422],[422,434],[434,432],[18,313],[313,17],[17,18],[291,306],[306,375],[375,291],[259,387],[387,260],[260,259],[424,335],[335,418],[418,424],[434,364],[364,416],[416,434],[391,423],[423,327],[327,391],[301,251],[251,298],[298,301],[275,281],[281,4],[4,275],[254,373],[373,253],[253,254],[375,307],[307,321],[321,375],[280,425],[425,411],[411,280],[200,421],[421,18],[18,200],[335,321],[321,406],[406,335],[321,320],[320,405],[405,321],[314,315],[315,17],[17,314],[423,426],[426,266],[266,423],[396,377],[377,369],[369,396],[270,322],[322,269],[269,270],[413,417],[417,464],[464,413],[385,386],[386,258],[258,385],[248,456],[456,419],[419,248],[298,284],[284,333],[333,298],[168,417],[417,8],[8,168],[448,346],[346,261],[261,448],[417,413],[413,285],[285,417],[326,327],[327,328],[328,326],[277,355],[355,329],[329,277],[309,392],[392,438],[438,309],[381,382],[382,256],[256,381],[279,429],[429,360],[360,279],[365,364],[364,379],[379,365],[355,277],[277,437],[437,355],[282,443],[443,283],[283,282],[281,275],[275,363],[363,281],[395,431],[431,369],[369,395],[299,297],[297,337],[337,299],[335,273],[273,321],[321,335],[348,450],[450,349],[349,348],[359,446],[446,467],[467,359],[283,293],[293,282],[282,283],[250,458],[458,462],[462,250],[300,276],[276,383],[383,300],[292,308],[308,325],[325,292],[283,276],[276,293],[293,283],[264,372],[372,447],[447,264],[346,352],[352,340],[340,346],[354,274],[274,19],[19,354],[363,456],[456,281],[281,363],[426,436],[436,425],[425,426],[380,381],[381,252],[252,380],[267,269],[269,393],[393,267],[421,200],[200,428],[428,421],[371,266],[266,329],[329,371],[432,287],[287,422],[422,432],[290,250],[250,328],[328,290],[385,258],[258,384],[384,385],[446,265],[265,342],[342,446],[386,387],[387,257],[257,386],[422,424],[424,430],[430,422],[445,342],[342,276],[276,445],[422,273],[273,424],[424,422],[306,292],[292,307],[307,306],[352,366],[366,345],[345,352],[268,271],[271,302],[302,268],[358,423],[423,371],[371,358],[327,294],[294,460],[460,327],[331,279],[279,294],[294,331],[303,271],[271,304],[304,303],[436,432],[432,427],[427,436],[304,272],[272,408],[408,304],[395,394],[394,431],[431,395],[378,395],[395,400],[400,378],[296,334],[334,299],[299,296],[6,351],[351,168],[168,6],[376,352],[352,411],[411,376],[307,325],[325,320],[320,307],[285,295],[295,336],[336,285],[320,319],[319,404],[404,320],[329,330],[330,349],[349,329],[334,293],[293,333],[333,334],[366,323],[323,447],[447,366],[316,15],[15,315],[315,316],[331,358],[358,279],[279,331],[317,14],[14,316],[316,317],[8,285],[285,9],[9,8],[277,329],[329,350],[350,277],[253,374],[374,252],[252,253],[319,318],[318,403],[403,319],[351,6],[6,419],[419,351],[324,318],[318,325],[325,324],[397,367],[367,365],[365,397],[288,435],[435,397],[397,288],[278,344],[344,439],[439,278],[310,272],[272,311],[311,310],[248,195],[195,281],[281,248],[375,273],[273,291],[291,375],[175,396],[396,199],[199,175],[312,311],[311,268],[268,312],[276,283],[283,445],[445,276],[390,373],[373,339],[339,390],[295,282],[282,296],[296,295],[448,449],[449,346],[346,448],[356,264],[264,454],[454,356],[337,336],[336,299],[299,337],[337,338],[338,151],[151,337],[294,278],[278,455],[455,294],[308,292],[292,415],[415,308],[429,358],[358,355],[355,429],[265,340],[340,372],[372,265],[352,346],[346,280],[280,352],[295,442],[442,282],[282,295],[354,19],[19,370],[370,354],[285,441],[441,295],[295,285],[195,248],[248,197],[197,195],[457,440],[440,274],[274,457],[301,300],[300,368],[368,301],[417,351],[351,465],[465,417],[251,301],[301,389],[389,251],[394,395],[395,379],[379,394],[399,412],[412,419],[419,399],[410,436],[436,322],[322,410],[326,2],[2,393],[393,326],[354,370],[370,461],[461,354],[393,164],[164,267],[267,393],[268,302],[302,12],[12,268],[312,268],[268,13],[13,312],[298,293],[293,301],[301,298],[265,446],[446,340],[340,265],[280,330],[330,425],[425,280],[322,426],[426,391],[391,322],[420,429],[429,437],[437,420],[393,391],[391,326],[326,393],[344,440],[440,438],[438,344],[458,459],[459,461],[461,458],[364,434],[434,394],[394,364],[428,396],[396,262],[262,428],[274,354],[354,457],[457,274],[317,316],[316,402],[402,317],[316,315],[315,403],[403,316],[315,314],[314,404],[404,315],[314,313],[313,405],[405,314],[313,421],[421,406],[406,313],[323,366],[366,361],[361,323],[292,306],[306,407],[407,292],[306,291],[291,408],[408,306],[291,287],[287,409],[409,291],[287,432],[432,410],[410,287],[427,434],[434,411],[411,427],[372,264],[264,383],[383,372],[459,309],[309,457],[457,459],[366,352],[352,401],[401,366],[1,274],[274,4],[4,1],[418,421],[421,262],[262,418],[331,294],[294,358],[358,331],[435,433],[433,367],[367,435],[392,289],[289,439],[439,392],[328,462],[462,326],[326,328],[94,2],[2,370],[370,94],[289,305],[305,455],[455,289],[339,254],[254,448],[448,339],[359,255],[255,446],[446,359],[254,253],[253,449],[449,254],[253,252],[252,450],[450,253],[252,256],[256,451],[451,252],[256,341],[341,452],[452,256],[414,413],[413,463],[463,414],[286,441],[441,414],[414,286],[286,258],[258,441],[441,286],[258,257],[257,442],[442,258],[257,259],[259,443],[443,257],[259,260],[260,444],[444,259],[260,467],[467,445],[445,260],[309,459],[459,250],[250,309],[305,289],[289,290],[290,305],[305,290],[290,460],[460,305],[401,376],[376,435],[435,401],[309,250],[250,392],[392,309],[376,411],[411,433],[433,376],[453,341],[341,464],[464,453],[357,453],[453,465],[465,357],[343,357],[357,412],[412,343],[437,343],[343,399],[399,437],[344,360],[360,440],[440,344],[420,437],[437,456],[456,420],[360,420],[420,363],[363,360],[361,401],[401,288],[288,361],[265,372],[372,353],[353,265],[390,339],[339,249],[249,390],[339,448],[448,255],[255,339]]),B("VERSION","0.4.1646425229")}).call(Di);var fr=function(){return fr=Object.assign||function(n){for(var e,t=1,r=arguments.length;t<r;t++)for(var s in e=arguments[t])Object.prototype.hasOwnProperty.call(e,s)&&(n[s]=e[s]);return n},fr.apply(this,arguments)};function zn(n,e,t,r){return new(t||(t=Promise))(function(s,o){function a(c){try{u(r.next(c))}catch(l){o(l)}}function i(c){try{u(r.throw(c))}catch(l){o(l)}}function u(c){var l;c.done?s(c.value):(l=c.value,l instanceof t?l:new t(function(h){h(l)})).then(a,i)}u((r=r.apply(n,[])).next())})}function Gn(n,e){var t,r,s,o,a={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return o={next:i(0),throw:i(1),return:i(2)},typeof Symbol=="function"&&(o[Symbol.iterator]=function(){return this}),o;function i(u){return function(c){return function(l){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,r&&(s=2&l[0]?r.return:l[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,l[1])).done)return s;switch(r=0,s&&(l=[2&l[0],s.value]),l[0]){case 0:case 1:s=l;break;case 4:return a.label++,{value:l[1],done:!1};case 5:a.label++,r=l[1],l=[0];continue;case 7:l=a.ops.pop(),a.trys.pop();continue;default:if(!((s=(s=a.trys).length>0&&s[s.length-1])||l[0]!==6&&l[0]!==2)){a=0;continue}if(l[0]===3&&(!s||l[1]>s[0]&&l[1]<s[3])){a.label=l[1];break}if(l[0]===6&&a.label<s[1]){a.label=s[1],s=l;break}if(s&&a.label<s[2]){a.label=s[2],a.ops.push(l);break}s[2]&&a.ops.pop(),a.trys.pop();continue}l=e.call(n,a)}catch(h){l=[6,h],r=0}finally{t=s=0}if(5&l[0])throw l[1];return{value:l[0]?l[1]:void 0,done:!0}}([u,c])}}}var N1=["rightEye","leftEye","noseTip","mouthCenter","rightEarTragion","leftEarTragion"],Fi={modelType:"short",runtime:"mediapipe",maxFaces:1},GS=function(){function n(e){var t=this;this.width=0,this.height=0,this.selfieMode=!1,this.faceDetectorSolution=new zS.FaceDetection({locateFile:function(r,s){if(e.solutionPath){var o=e.solutionPath.replace(/\/+$/,"");return"".concat(o,"/").concat(r)}return"".concat(s,"/").concat(r)}}),this.faceDetectorSolution.setOptions({selfieMode:this.selfieMode,model:e.modelType}),this.faceDetectorSolution.onResults(function(r){if(t.height=r.image.height,t.width=r.image.width,t.faces=[],r.detections!==null)for(var s=0,o=r.detections;s<o.length;s++){var a=o[s];t.faces.push(t.normalizedToAbsolute(a.landmarks,{xMin:u=(i=a.boundingBox).xCenter-i.width/2,xMax:u+i.width,yMin:c=i.yCenter-i.height/2,yMax:c+i.height,width:i.width,height:i.height}))}var i,u,c})}return n.prototype.normalizedToAbsolute=function(e,t){var r=this;return{keypoints:e.map(function(s,o){return{x:s.x*r.width,y:s.y*r.height,name:N1[o]}}),box:{xMin:t.xMin*this.width,yMin:t.yMin*this.height,xMax:t.xMax*this.width,yMax:t.yMax*this.height,width:t.width*this.width,height:t.height*this.height}}},n.prototype.estimateFaces=function(e,t){return zn(this,void 0,void 0,function(){var r,s;return Gn(this,function(o){switch(o.label){case 0:return t&&t.flipHorizontal&&t.flipHorizontal!==this.selfieMode&&(this.selfieMode=t.flipHorizontal,this.faceDetectorSolution.setOptions({selfieMode:this.selfieMode})),e instanceof Qe?(s=ImageData.bind,[4,Cm(e)]):[3,2];case 1:return r=new(s.apply(ImageData,[void 0,o.sent(),e.shape[1],e.shape[0]])),[3,3];case 2:r=e,o.label=3;case 3:return e=r,[4,this.faceDetectorSolution.send({image:e})];case 4:return o.sent(),[2,this.faces]}})})},n.prototype.dispose=function(){this.faceDetectorSolution.close()},n.prototype.reset=function(){this.faceDetectorSolution.reset(),this.width=0,this.height=0,this.faces=null,this.selfieMode=!1},n.prototype.initialize=function(){return this.faceDetectorSolution.initialize()},n}();function jS(n){return zn(this,void 0,void 0,function(){var e,t;return Gn(this,function(r){switch(r.label){case 0:return e=function(s){if(s==null)return fr({},Fi);var o=fr({},s);return o.runtime="mediapipe",o.modelType==null&&(o.modelType=Fi.modelType),o.maxFaces==null&&(o.maxFaces=Fi.maxFaces),o}(n),[4,(t=new GS(e)).initialize()];case 1:return r.sent(),[2,t]}})})}function E1(n){return n instanceof Qe?{height:n.shape[0],width:n.shape[1]}:{height:n.height,width:n.width}}function I1(n){return n instanceof Qe?n:Sm(n)}function Pi(n,e){_(n.width!==0,function(){return"".concat(e," width cannot be 0.")}),_(n.height!==0,function(){return"".concat(e," height cannot be 0.")})}function HS(n,e,t){var r=e.outputTensorSize,s=e.keepAspectRatio,o=e.borderMode,a=e.outputTensorFloatRange,i=E1(n),u=function(d,p){return{xCenter:.5*d.width,yCenter:.5*d.height,width:d.width,height:d.height,rotation:0}}(i),c=function(d,p,f){if(f===void 0&&(f=!1),!f)return{top:0,left:0,right:0,bottom:0};var x=p.height,y=p.width;Pi(p,"targetSize"),Pi(d,"roi");var b,S,I=x/y,k=d.height/d.width,P=0,W=0;return I>k?(b=d.width,S=d.width*I,W=(1-k/I)/2):(b=d.height/I,S=d.height,P=(1-I/k)/2),d.width=b,d.height=S,{top:W,left:P,right:P,bottom:W}}(u,r,s),l=function(d,p,f,x){var y=d.width,b=d.height,S=1,I=Math.cos(d.rotation),k=Math.sin(d.rotation),P=d.xCenter,W=d.yCenter,H=1/p,G=1/f,B=new Array(16);return B[0]=y*I*S*H,B[1]=-b*k*H,B[2]=0,B[3]=(-.5*y*I*S+.5*b*k+P)*H,B[4]=y*k*S*G,B[5]=b*I*G,B[6]=0,B[7]=(-.5*b*I-.5*y*k*S+W)*G,B[8]=0,B[9]=0,B[10]=y*H,B[11]=0,B[12]=0,B[13]=0,B[14]=0,B[15]=1,function(V){if(V.length!==16)throw new Error("Array length must be 16 but got ".concat(V.length));return[[V[0],V[1],V[2],V[3]],[V[4],V[5],V[6],V[7]],[V[8],V[9],V[10],V[11]],[V[12],V[13],V[14],V[15]]]}(B)}(u,i.width,i.height),h=ve(function(){var d=I1(n),p=cr(function(y,b,S){return Pi(S,"inputResolution"),[1/S.width*y[0][0]*b.width,1/S.height*y[0][1]*b.width,y[0][3]*b.width,1/S.width*y[1][0]*b.height,1/S.height*y[1][1]*b.height,y[1][3]*b.height,0,0]}(l,i,r),[1,8]),f=o==="zero"?"constant":"nearest",x=Ds.transform(tn(je(d,"float32")),p,"bilinear",f,0,[r.height,r.width]);return a!=null?function(y,b){var S=function(I,k,P,W){var H=(W-P)/255;return{scale:H,offset:P-0*H}}(0,0,b[0],b[1]);return ve(function(){return me(oe(y,S.scale),S.offset)})}(x,a):x});return{imageTensor:h,padding:c,transformationMatrix:l}}function pl(n){n.reduceBoxesInLowestLayer==null&&(n.reduceBoxesInLowestLayer=!1),n.interpolatedScaleAspectRatio==null&&(n.interpolatedScaleAspectRatio=1),n.fixedAnchorSize==null&&(n.fixedAnchorSize=!1);for(var e=[],t=0;t<n.numLayers;){for(var r=[],s=[],o=[],a=[],i=t;i<n.strides.length&&n.strides[i]===n.strides[t];){var u=fl(n.minScale,n.maxScale,i,n.strides.length);if(i===0&&n.reduceBoxesInLowestLayer)o.push(1),o.push(2),o.push(.5),a.push(.1),a.push(u),a.push(u);else{for(var c=0;c<n.aspectRatios.length;++c)o.push(n.aspectRatios[c]),a.push(u);if(n.interpolatedScaleAspectRatio>0){var l=i===n.strides.length-1?1:fl(n.minScale,n.maxScale,i+1,n.strides.length);a.push(Math.sqrt(u*l)),o.push(n.interpolatedScaleAspectRatio)}}i++}for(var h=0;h<o.length;++h){var d=Math.sqrt(o[h]);r.push(a[h]/d),s.push(a[h]*d)}var p=0,f=0;if(n.featureMapHeight.length>0)p=n.featureMapHeight[t],f=n.featureMapWidth[t];else{var x=n.strides[t];p=Math.ceil(n.inputSizeHeight/x),f=Math.ceil(n.inputSizeWidth/x)}for(var y=0;y<p;++y)for(var b=0;b<f;++b)for(var S=0;S<r.length;++S){var I={xCenter:(b+n.anchorOffsetX)/f,yCenter:(y+n.anchorOffsetY)/p,width:0,height:0};n.fixedAnchorSize?(I.width=1,I.height=1):(I.width=s[S],I.height=r[S]),e.push(I)}t=i}return e}function fl(n,e,t,r){return r===1?.5*(n+e):n+(e-n)*t/(r-1)}function ml(n,e){var t=e[0],r=e[1];return[t*n[0]+r*n[1]+n[3],t*n[4]+r*n[5]+n[7]]}function KS(n,e,t,r){return zn(this,void 0,void 0,function(){var s,o,a,i,u;return Gn(this,function(c){switch(c.label){case 0:return n.sort(function(l,h){return Math.max.apply(Math,h.score)-Math.max.apply(Math,l.score)}),s=cr(n.map(function(l){return[l.locationData.relativeBoundingBox.yMin,l.locationData.relativeBoundingBox.xMin,l.locationData.relativeBoundingBox.yMax,l.locationData.relativeBoundingBox.xMax]})),o=gt(n.map(function(l){return l.score[0]})),[4,Ds.nonMaxSuppressionAsync(s,o,e,t)];case 1:return[4,(a=c.sent()).array()];case 2:return i=c.sent(),u=n.filter(function(l,h){return i.indexOf(h)>-1}),Ke([s,o,a]),[2,u]}})})}function XS(n,e,t){return zn(this,void 0,void 0,function(){var r,s,o,a,i;return Gn(this,function(u){switch(u.label){case 0:return r=n[0],s=n[1],o=function(c,l,h){return ve(function(){var d,p,f,x;h.reverseOutputOrder?(p=rt(Se(c,[0,h.boxCoordOffset+0],[-1,1])),d=rt(Se(c,[0,h.boxCoordOffset+1],[-1,1])),x=rt(Se(c,[0,h.boxCoordOffset+2],[-1,1])),f=rt(Se(c,[0,h.boxCoordOffset+3],[-1,1]))):(d=rt(Se(c,[0,h.boxCoordOffset+0],[-1,1])),p=rt(Se(c,[0,h.boxCoordOffset+1],[-1,1])),f=rt(Se(c,[0,h.boxCoordOffset+2],[-1,1])),x=rt(Se(c,[0,h.boxCoordOffset+3],[-1,1]))),p=me(oe(ke(p,h.xScale),l.w),l.x),d=me(oe(ke(d,h.yScale),l.h),l.y),h.applyExponentialOnBoxSize?(f=oe(Mn(ke(f,h.hScale)),l.h),x=oe(Mn(ke(x,h.wScale)),l.w)):(f=oe(ke(f,h.hScale),l.h),x=oe(ke(x,h.wScale),l.h));var y=Te(d,ke(f,2)),b=Te(p,ke(x,2)),S=me(d,ke(f,2)),I=me(p,ke(x,2)),k=ht([Z(y,[h.numBoxes,1]),Z(b,[h.numBoxes,1]),Z(S,[h.numBoxes,1]),Z(I,[h.numBoxes,1])],1);if(h.numKeypoints)for(var P=0;P<h.numKeypoints;++P){var W=h.keypointCoordOffset+P*h.numValuesPerKeypoint,H=void 0,G=void 0;h.reverseOutputOrder?(H=rt(Se(c,[0,W],[-1,1])),G=rt(Se(c,[0,W+1],[-1,1]))):(G=rt(Se(c,[0,W],[-1,1])),H=rt(Se(c,[0,W+1],[-1,1])));var B=me(oe(ke(H,h.xScale),l.w),l.x),V=me(oe(ke(G,h.yScale),l.h),l.y);k=ht([k,Z(B,[h.numBoxes,1]),Z(V,[h.numBoxes,1])],1)}return k})}(s,e,t),a=ve(function(){var c=r;return t.sigmoidScore?(t.scoreClippingThresh!=null&&(c=Af(r,-t.scoreClippingThresh,t.scoreClippingThresh)),c=Mr(c)):c}),[4,qS(o,a,t)];case 1:return i=u.sent(),Ke([o,a]),[2,i]}})})}function qS(n,e,t){return zn(this,void 0,void 0,function(){var r,s,o,a,i,u,c,l,h,d,p,f;return Gn(this,function(x){switch(x.label){case 0:return r=[],[4,n.data()];case 1:return s=x.sent(),[4,e.data()];case 2:for(o=x.sent(),a=0;a<t.numBoxes;++a)if(!(t.minScoreThresh!=null&&o[a]<t.minScoreThresh||(i=a*t.numCoords,u=YS(s[i+0],s[i+1],s[i+2],s[i+3],o[a],t.flipVertically,a),(c=u.locationData.relativeBoundingBox).width<0||c.height<0))){if(t.numKeypoints>0)for((l=u.locationData).relativeKeypoints=[],h=t.numKeypoints*t.numValuesPerKeypoint,d=0;d<h;d+=t.numValuesPerKeypoint)p=i+t.keypointCoordOffset+d,f={x:s[p+0],y:t.flipVertically?1-s[p+1]:s[p+1]},l.relativeKeypoints.push(f);r.push(u)}return[2,r]}})})}function YS(n,e,t,r,s,o,a){return{score:[s],ind:a,locationData:{relativeBoundingBox:{xMin:e,yMin:o?1-t:n,xMax:r,yMax:o?1-n:t,width:r-e,height:t-n}}}}var Va,QS={reduceBoxesInLowestLayer:!1,interpolatedScaleAspectRatio:1,featureMapHeight:[],featureMapWidth:[],numLayers:4,minScale:.1484375,maxScale:.75,inputSizeHeight:128,inputSizeWidth:128,anchorOffsetX:.5,anchorOffsetY:.5,strides:[8,16,16,16],aspectRatios:[1],fixedAnchorSize:!0},ZS={reduceBoxesInLowestLayer:!1,interpolatedScaleAspectRatio:0,featureMapHeight:[],featureMapWidth:[],numLayers:1,minScale:.1484375,maxScale:.75,inputSizeHeight:192,inputSizeWidth:192,anchorOffsetX:.5,anchorOffsetY:.5,strides:[4],aspectRatios:[1],fixedAnchorSize:!0},Li={runtime:"tfjs",modelType:"short",maxFaces:1,detectorModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/face_detection/short/1"},JS={applyExponentialOnBoxSize:!1,flipVertically:!1,ignoreClasses:[],numClasses:1,numBoxes:896,numCoords:16,boxCoordOffset:0,keypointCoordOffset:4,numKeypoints:6,numValuesPerKeypoint:2,sigmoidScore:!0,scoreClippingThresh:100,reverseOutputOrder:!0,xScale:128,yScale:128,hScale:128,wScale:128,minScoreThresh:.5},eT={applyExponentialOnBoxSize:!1,flipVertically:!1,ignoreClasses:[],numClasses:1,numBoxes:2304,numCoords:16,boxCoordOffset:0,keypointCoordOffset:4,numKeypoints:6,numValuesPerKeypoint:2,sigmoidScore:!0,scoreClippingThresh:100,reverseOutputOrder:!0,xScale:192,yScale:192,hScale:192,wScale:192,minScoreThresh:.6},tT={outputTensorSize:{width:128,height:128},keepAspectRatio:!0,outputTensorFloatRange:[-1,1],borderMode:"zero"},nT={outputTensorSize:{width:192,height:192},keepAspectRatio:!0,outputTensorFloatRange:[-1,1],borderMode:"zero"},rT=function(){function n(e,t,r){this.detectorModel=t,this.maxFaces=r,e==="full"?(this.imageToTensorConfig=nT,this.tensorsToDetectionConfig=eT,this.anchors=pl(ZS)):(this.imageToTensorConfig=tT,this.tensorsToDetectionConfig=JS,this.anchors=pl(QS));var s=gt(this.anchors.map(function(u){return u.width})),o=gt(this.anchors.map(function(u){return u.height})),a=gt(this.anchors.map(function(u){return u.xCenter})),i=gt(this.anchors.map(function(u){return u.yCenter}));this.anchorTensor={x:a,y:i,w:s,h:o}}return n.prototype.dispose=function(){this.detectorModel.dispose(),Ke([this.anchorTensor.x,this.anchorTensor.y,this.anchorTensor.w,this.anchorTensor.h])},n.prototype.reset=function(){},n.prototype.detectFaces=function(e,t){return t===void 0&&(t=!1),zn(this,void 0,void 0,function(){var r,s,o,a,i,u,c,l,h,d,p;return Gn(this,function(f){switch(f.label){case 0:return e==null?(this.reset(),[2,[]]):(r=ve(function(){var x=je(I1(e),"float32");return t&&(x=rt(Ds.flipLeftRight(tn(x,0)),[0])),x}),s=HS(r,this.imageToTensorConfig),o=s.imageTensor,a=s.transformationMatrix,i=this.detectorModel.execute(o,"Identity:0"),u=function(x){return ve(function(){var y=function(I){return ve(function(){return[Se(I,[0,0,0],[1,-1,1]),Se(I,[0,0,1],[1,-1,-1])]})}(x),b=y[0],S=y[1];return{boxes:rt(S),logits:rt(b)}})}(i),c=u.boxes,[4,XS([l=u.logits,c],this.anchorTensor,this.tensorsToDetectionConfig)]);case 1:return(h=f.sent()).length===0?(Ke([r,o,i,l,c]),[2,h]):[4,KS(h,this.maxFaces,.3)];case 2:return d=f.sent(),p=function(x,y){x===void 0&&(x=[]);var b,S=(b=y,[].concat.apply([],b));return x.forEach(function(I){var k=I.locationData;k.relativeKeypoints.forEach(function(V){var R=ml(S,[V.x,V.y]),q=R[0],te=R[1];V.x=q,V.y=te});var P=k.relativeBoundingBox,W=Number.MAX_VALUE,H=Number.MAX_VALUE,G=Number.MIN_VALUE,B=Number.MIN_VALUE;[[P.xMin,P.yMin],[P.xMin+P.width,P.yMin],[P.xMin+P.width,P.yMin+P.height],[P.xMin,P.yMin+P.height]].forEach(function(V){var R=ml(S,V),q=R[0],te=R[1];W=Math.min(W,q),G=Math.max(G,q),H=Math.min(H,te),B=Math.max(B,te)}),k.relativeBoundingBox={xMin:W,xMax:G,yMin:H,yMax:B,width:G-W,height:B-H}}),x}(d,a),Ke([r,o,i,l,c]),[2,p]}})})},n.prototype.estimateFaces=function(e,t){return zn(this,void 0,void 0,function(){var r,s;return Gn(this,function(o){return r=E1(e),s=!!t&&t.flipHorizontal,[2,this.detectFaces(e,s).then(function(a){return a.map(function(i){for(var u=i.locationData.relativeKeypoints.map(function(f,x){return fr(fr({},f),{x:f.x*r.width,y:f.y*r.height,name:N1[x]})}),c=i.locationData.relativeBoundingBox,l=0,h=["width","xMax","xMin"];l<h.length;l++)c[h[l]]*=r.width;for(var d=0,p=["height","yMax","yMin"];d<p.length;d++)c[p[d]]*=r.height;return{keypoints:u,box:c}})})]})})},n}();function sT(n){return zn(this,void 0,void 0,function(){var e,t,r;return Gn(this,function(s){switch(s.label){case 0:return e=function(o){if(o==null)return fr({},Li);var a=fr({},o);return a.modelType==null&&(a.modelType=Li.modelType),a.maxFaces==null&&(a.maxFaces=Li.maxFaces),a.detectorModelUrl==null&&(a.modelType==="full"?a.detectorModelUrl="https://tfhub.dev/mediapipe/tfjs-model/face_detection/full/1":a.detectorModelUrl="https://tfhub.dev/mediapipe/tfjs-model/face_detection/short/1"),a}(n),t=typeof e.detectorModelUrl=="string"&&e.detectorModelUrl.indexOf("https://tfhub.dev")>-1,[4,S1(e.detectorModelUrl,{fromTFHub:t})];case 1:return r=s.sent(),[2,new rT(e.modelType,r,e.maxFaces)]}})})}function oT(n,e){return zn(this,void 0,void 0,function(){var t,r;return Gn(this,function(s){if(n===Va.MediaPipeFaceDetector){if(r=void 0,(t=e)!=null){if(t.runtime==="tfjs")return[2,sT(t)];if(t.runtime==="mediapipe")return[2,jS(t)];r=t.runtime}throw new Error("Expect modelConfig.runtime to be either 'tfjs' "+"or 'mediapipe', but got ".concat(r))}throw new Error("".concat(n," is not a supported model name."))})})}function Bi(n){return n.width*n.height}function gl(n){var e=n.xCenter-n.width/2,t=e+n.width,r=n.yCenter-n.height/2;return{xMin:e,xMax:t,yMin:r,yMax:r+n.height,width:n.width,height:n.height}}function aT(n,e){var t=gl(n),r=gl(e);if(!function(a,i){return!(a.xMax<i.xMin||i.xMax<a.xMin||a.yMax<i.yMin||i.yMax<a.yMin)}(t,r))return 0;var s=Bi(function(a,i){var u=Math.max(a.xMin,i.xMin),c=Math.min(a.xMax,i.xMax),l=Math.max(a.yMin,i.yMin),h=Math.min(a.yMax,i.yMax);return{xMin:u,xMax:c,yMin:l,yMax:h,width:Math.max(c-u,0),height:Math.max(h-l,0)}}(t,r)),o=Bi(t)+Bi(r)-s;return o>0?s/o:0}function iT(n,e,t,r){var s=n.width,o=n.height,a=1,i=Math.cos(n.rotation),u=Math.sin(n.rotation),c=n.xCenter,l=n.yCenter,h=1/e,d=1/t,p=new Array(16);return p[0]=s*i*a*h,p[1]=-o*u*h,p[2]=0,p[3]=(-.5*s*i*a+.5*o*u+c)*h,p[4]=s*u*a*d,p[5]=o*i*d,p[6]=0,p[7]=(-.5*o*i-.5*s*u*a+l)*d,p[8]=0,p[9]=0,p[10]=s*h,p[11]=0,p[12]=0,p[13]=0,p[14]=0,p[15]=1,function(f){if(f.length!==16)throw new Error("Array length must be 16 but got "+f.length);return[[f[0],f[1],f[2],f[3]],[f[4],f[5],f[6],f[7]],[f[8],f[9],f[10],f[11]],[f[12],f[13],f[14],f[15]]]}(p)}function k1(n){return n instanceof Qe?{height:n.shape[0],width:n.shape[1]}:{height:n.height,width:n.width}}function R1(n){return n-2*Math.PI*Math.floor((n+Math.PI)/(2*Math.PI))}function _1(n){return n instanceof Qe?n:Sm(n)}function Vi(n,e){_(n.width!==0,function(){return e+" width cannot be 0."}),_(n.height!==0,function(){return e+" height cannot be 0."})}function uT(n,e){var t=function(r,s,o,a){var i=s-r,u=a-o,c=u/i;return{scale:c,offset:o-r*c}}(0,255,e[0],e[1]);return ve(function(){return me(oe(n,t.scale),t.offset)})}function cT(n,e,t){var r=e.outputTensorSize,s=e.keepAspectRatio,o=e.outputTensorFloatRange,a=k1(n),i=function(h,d){return d?{xCenter:d.xCenter*h.width,yCenter:d.yCenter*h.height,width:d.width*h.width,height:d.height*h.height,rotation:d.rotation}:{xCenter:.5*h.width,yCenter:.5*h.height,width:h.width,height:h.height,rotation:0}}(a,t),u=function(h,d,p){if(p===void 0&&(p=!1),!p)return{top:0,left:0,right:0,bottom:0};var f=d.height,x=d.width;Vi(d,"targetSize"),Vi(h,"roi");var y,b,S=f/x,I=h.height/h.width,k=0,P=0;return S>I?(y=h.width,b=h.width*S,P=(1-I/S)/2):(y=h.height/S,b=h.height,k=(1-S/I)/2),h.width=y,h.height=b,{top:P,left:k,right:k,bottom:P}}(i,r,s),c=iT(i,a.width,a.height),l=ve(function(){var h=_1(n),d=cr(function(x,y,b){return Vi(b,"inputResolution"),[1/b.width*x[0][0]*y.width,1/b.height*x[0][1]*y.width,x[0][3]*y.width,1/b.width*x[1][0]*y.height,1/b.height*x[1][1]*y.height,x[1][3]*y.height,0,0]}(c,a,r),[1,8]),p="nearest",f=Ds.transform(tn(je(h,"float32")),d,"bilinear",p,0,[r.height,r.width]);return o!=null?uT(f,o):f});return{imageTensor:l,padding:u,transformationMatrix:c}}function yl(n){return{xCenter:n.xMin+n.width/2,yCenter:n.yMin+n.height/2,width:n.width,height:n.height}}function lT(n){var e=n.relativeKeypoints;if(e.length<=1)throw new Error("2 or more keypoints required to calculate a rect.");var t=Number.MAX_VALUE,r=Number.MAX_VALUE,s=Number.MIN_VALUE,o=Number.MIN_VALUE;return e.forEach(function(a){t=Math.min(t,a.x),s=Math.max(s,a.x),r=Math.min(r,a.y),o=Math.max(o,a.y)}),{xCenter:(t+s)/2,yCenter:(r+o)/2,width:s-t,height:o-r}}function xl(n,e,t,r,s){var o=t==="rect"?function(a,i,u){var c,l=a.locationData;return c=yl(l.boundingBox),c}(n):function(a,i){var u=a.locationData;return i==="boundingbox"?yl(u.relativeBoundingBox):lT(u)}(n,e);return s&&(o.rotation=function(a,i,u){var c,l=a.locationData,h=u.rotationVectorStartKeypointIndex,d=u.rotationVectorEndKeypointIndex;c=u.rotationVectorTargetAngle?u.rotationVectorTargetAngle:Math.PI*u.rotationVectorTargetAngleDegree/180;var p=l.relativeKeypoints[h].x*i.width,f=l.relativeKeypoints[h].y*i.height,x=l.relativeKeypoints[d].x*i.width,y=l.relativeKeypoints[d].y*i.height;return R1(c-Math.atan2(-(y-f),x-p))}(n,r,s)),o}function hT(n,e,t){for(var r=0;r<e.length;++r){var s=e[r],o=t[n[r]];o.x=s.x,o.y=s.y}}function dT(n,e,t,r){if(typeof e=="string"){if(e==="copy")for(var s=0;s<t.length;++s)r[n[s]].z=t[s].z}else{var o=function(a,i){for(var u=0,c=0;c<i.length;++c)u+=a[i[c]].z;return u/i.length}(r,e);for(s=0;s<n.length;++s)r[n[s]].z=o}}function pT(n,e){for(var t=function(i){var u=[].concat.apply([],i.map(function(p){return p.indexesMapping}));if(u.length===0)throw new Error("There should be at least one landmark in indexes mapping");var c=u[0],l=u[0],h=new Set(u);h.forEach(function(p){c=Math.min(c,p),l=Math.max(l,p)});var d=h.size;if(c!==0)throw new Error("Indexes are expected to start with 0 instead of "+c);if(l+1!==d)throw new Error("Indexes should have no gaps but "+(l-d+1)+" indexes are missing");return d}(e),r=new Array(t).fill(null).map(Object),s=0;s<n.length;++s){var o=n[s],a=e[s];if(o.length!==a.indexesMapping.length)throw new Error("There are "+o.length+" refinement landmarks while mapping has "+a.indexesMapping.length);hT(a.indexesMapping,o,r),dT(a.indexesMapping,a.zRefinement,o,r)}return r}function fT(n,e){return n.map(function(t){var r=yn(yn({},t),{x:t.x*e.width,y:t.y*e.height});return t.z!=null&&(r.z=t.z*e.width),r})}function mT(n,e){return n==="none"?e:function(t){return 1/(1+Math.exp(-t))}(e)}function Rr(n,e,t,r){return Ln(this,void 0,void 0,function(){var s,o,a,i,u,c,l,h;return Bn(this,function(d){switch(d.label){case 0:return t=t||e.flipHorizontally||!1,r=r||e.flipVertically||!1,s=n.size,o=s/e.numLandmarks,[4,n.data()];case 1:for(a=d.sent(),i=[],u=0;u<e.numLandmarks;++u)c=u*o,(h={x:0,y:0}).x=t?e.inputImageWidth-a[c]:a[c],o>1&&(h.y=r?e.inputImageHeight-a[c+1]:a[c+1]),o>2&&(h.z=a[c+2]),o>3&&(h.score=mT(e.visibilityActivation,a[c+3])),i.push(h);for(l=0;l<i.length;++l)(h=i[l]).x=h.x/e.inputImageWidth,h.y=h.y/e.inputImageHeight,h.z=h.z/e.inputImageWidth/(e.normalizeZ||1);return[2,i]}})})}function bl(n,e,t){var r=n.width,s=n.height,o=n.rotation;if(t.rotation==null&&t.rotationDegree==null||(o=function(c,l){return l.rotation!=null?c+=l.rotation:l.rotationDegree!=null&&(c+=Math.PI*l.rotationDegree/180),R1(c)}(o,t)),o===0)n.xCenter=n.xCenter+r*t.shiftX,n.yCenter=n.yCenter+s*t.shiftY;else{var a=(e.width*r*t.shiftX*Math.cos(o)-e.height*s*t.shiftY*Math.sin(o))/e.width,i=(e.width*r*t.shiftX*Math.sin(o)+e.height*s*t.shiftY*Math.cos(o))/e.height;n.xCenter=n.xCenter+a,n.yCenter=n.yCenter+i}{var u=Math.max(r*e.width,s*e.height);r=u/e.width,s=u/e.height}return n.width=r*t.scaleX,n.height=s*t.scaleY,n}(Va||(Va={})).MediaPipeFaceDetector="MediaPipeFaceDetector";var Mi={runtime:"tfjs",maxFaces:1,refineLandmarks:!1,landmarkModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/face_landmarks_detection/face_mesh/1"},Ui={flipHorizontal:!1,staticImageMode:!1},wl={shiftX:0,shiftY:0,scaleX:1.5,scaleY:1.5},gT={outputTensorSize:{width:192,height:192},outputTensorFloatRange:[0,1]},vl={numLandmarks:468,inputImageWidth:192,inputImageHeight:192,visibilityActivation:"none",flipHorizontally:!1,flipVertically:!1},yT={numLandmarks:80,inputImageWidth:192,inputImageHeight:192,visibilityActivation:"none",flipHorizontally:!1,flipVertically:!1},$l={numLandmarks:71,inputImageWidth:192,inputImageHeight:192,visibilityActivation:"none",flipHorizontally:!1,flipVertically:!1},Cl={numLandmarks:5,inputImageWidth:192,inputImageHeight:192,visibilityActivation:"none",flipHorizontally:!1,flipVertically:!1},xT={indexesMapping:Array.from(Array(468).keys()),zRefinement:"copy"},bT={indexesMapping:[61,146,91,181,84,17,314,405,321,375,291,185,40,39,37,0,267,269,270,409,78,95,88,178,87,14,317,402,318,324,308,191,80,81,82,13,312,311,310,415,76,77,90,180,85,16,315,404,320,307,306,184,74,73,72,11,302,303,304,408,62,96,89,179,86,15,316,403,319,325,292,183,42,41,38,12,268,271,272,407],zRefinement:"none"},wT={indexesMapping:[33,7,163,144,145,153,154,155,133,246,161,160,159,158,157,173,130,25,110,24,23,22,26,112,243,247,30,29,27,28,56,190,226,31,228,229,230,231,232,233,244,113,225,224,223,222,221,189,35,124,46,53,52,65,143,111,117,118,119,120,121,128,245,156,70,63,105,66,107,55,193],zRefinement:"none"},vT={indexesMapping:[263,249,390,373,374,380,381,382,362,466,388,387,386,385,384,398,359,255,339,254,253,252,256,341,463,467,260,259,257,258,286,414,446,261,448,449,450,451,452,453,464,342,445,444,443,442,441,413,265,353,276,283,282,295,372,340,346,347,348,349,350,357,465,383,300,293,334,296,336,285,417],zRefinement:"none"},$T={indexesMapping:[468,469,470,471,472],zRefinement:[33,7,163,144,145,153,154,155,133,246,161,160,159,158,157,173]},CT={indexesMapping:[473,474,475,476,477],zRefinement:[263,249,390,373,374,380,381,382,362,466,388,387,386,385,384,398]},Ma,ST=function(){function n(e,t,r,s){this.detector=e,this.landmarkModel=t,this.maxFaces=r,this.withAttention=s,this.prevFaceRectsFromLandmarks=null}return n.prototype.estimateFaces=function(e,t){return Ln(this,void 0,void 0,function(){var r,s,o,a,i,u,c,l,h,d,p,f,x,y=this;return Bn(this,function(b){switch(b.label){case 0:return r=function(k){if(k==null)return yn({},Ui);var P=yn({},k);return P.flipHorizontal==null&&(P.flipHorizontal=Ui.flipHorizontal),P.staticImageMode==null&&(P.staticImageMode=Ui.staticImageMode),P}(t),e==null?(this.reset(),[2,[]]):(s=k1(e),o=ve(function(){var k=je(_1(e),"float32");return r.flipHorizontal&&(k=rt(Ds.flipLeftRight(tn(k,0)),[0])),k}),a=this.prevFaceRectsFromLandmarks,r.staticImageMode||a==null||a.length<this.maxFaces?[4,this.detector.detectFaces(o,!1)]:[3,2]);case 1:return(u=b.sent()).length===0?(this.reset(),o.dispose(),[2,[]]):(i=u.map(function(k){return y.faceDetectionFrontDetectionToRoi(k,s)}),[3,3]);case 2:i=[],b.label=3;case 3:return S=.5,I=[],[i,a||[]].forEach(function(k){return k.forEach(function(P){(I=I.filter(function(W){return aT(P,W)<=S})).push(P)})}),c=I,[4,Promise.all(c.map(function(k){return y.faceLandmark(k,o)}))];case 4:for(l=b.sent(),h=[],this.prevFaceRectsFromLandmarks=[],d=0;d<l.length;++d)(p=l[d])!=null&&(this.prevFaceRectsFromLandmarks.push(this.faceLandmarksToRoi(p,s)),(f=fT(p,s))!=null&&f.forEach(function(k,P){var W=T1.get(P);W!=null&&(k.name=W)}),x=Ou(f),h.push({keypoints:f,box:x.locationData.relativeBoundingBox}));return o.dispose(),[2,h]}var S,I})})},n.prototype.dispose=function(){this.detector.dispose(),this.landmarkModel.dispose()},n.prototype.reset=function(){this.detector.reset(),this.prevFaceRectsFromLandmarks=null},n.prototype.faceDetectionFrontDetectionToRoi=function(e,t){return bl(xl(e,"boundingbox","normRect",t,{rotationVectorStartKeypointIndex:0,rotationVectorEndKeypointIndex:1,rotationVectorTargetAngleDegree:0}),t,wl)},n.prototype.faceLandmark=function(e,t){return Ln(this,void 0,void 0,function(){var r,s,o,a,i,u,c;return Bn(this,function(l){switch(l.label){case 0:return r=cT(t,gT,e).imageTensor,s=["output_faceflag"].concat(this.withAttention?["output_mesh_identity","output_lips","Identity_6:0","Identity_1:0","Identity_2:0","Identity_5:0"]:["output_mesh"]),o=this.landmarkModel.execute(r,s),a=o[0],i=o.slice(1),[4,a.data()];case 1:return l.sent()[0]<.5?(Ke(o),Ke(r),[2,null]):this.withAttention?[4,this.tensorsToFaceLandmarksWithAttention(i)]:[3,3];case 2:return u=l.sent(),[3,5];case 3:return[4,this.tensorsToFaceLandmarks(i)];case 4:u=l.sent(),l.label=5;case 5:return c=function(h,d,p){p===void 0&&(p={ignoreRotation:!1});for(var f=[],x=0,y=h;x<y.length;x++){var b=y[x],S=b.x-.5,I=b.y-.5,k=p.ignoreRotation?0:d.rotation,P=Math.cos(k)*S-Math.sin(k)*I,W=Math.sin(k)*S+Math.cos(k)*I;P=P*d.width+d.xCenter,W=W*d.height+d.yCenter;var H=b.z*d.width,G=yn({},b);G.x=P,G.y=W,G.z=H,f.push(G)}return f}(u,e),Ke(o),Ke(r),[2,c]}})})},n.prototype.tensorsToFaceLandmarks=function(e){return Ln(this,void 0,void 0,function(){return Bn(this,function(t){return[2,Rr(e[0],vl)]})})},n.prototype.tensorsToFaceLandmarksWithAttention=function(e){return Ln(this,void 0,void 0,function(){var t,r,s,o,a,i;return Bn(this,function(u){switch(u.label){case 0:return[4,Rr(e[0],vl)];case 1:return t=u.sent(),[4,Rr(e[1],yT)];case 2:return r=u.sent(),[4,Rr(e[3],$l)];case 3:return s=u.sent(),[4,Rr(e[5],$l)];case 4:return o=u.sent(),[4,Rr(e[4],Cl)];case 5:return a=u.sent(),[4,Rr(e[2],Cl)];case 6:return i=u.sent(),[2,pT([t,r,s,o,a,i],[xT,bT,wT,vT,$T,CT])]}})})},n.prototype.faceLandmarksToRoi=function(e,t){return bl(xl(Ou(e),"boundingbox","normRect",t,{rotationVectorStartKeypointIndex:33,rotationVectorEndKeypointIndex:263,rotationVectorTargetAngleDegree:0}),t,wl)},n}();function TT(n){return Ln(this,void 0,void 0,function(){var e,t,r,s;return Bn(this,function(o){switch(o.label){case 0:return e=function(a){if(a==null)return yn({},Mi);var i=yn({},a);return i.runtime="tfjs",i.maxFaces==null&&(i.maxFaces=Mi.maxFaces),i.refineLandmarks==null&&(i.refineLandmarks=Mi.refineLandmarks),i.landmarkModelUrl==null&&(i.landmarkModelUrl=i.refineLandmarks?"https://tfhub.dev/mediapipe/tfjs-model/face_landmarks_detection/attention_mesh/1":"https://tfhub.dev/mediapipe/tfjs-model/face_landmarks_detection/face_mesh/1"),i}(n),t=typeof e.landmarkModelUrl=="string"&&e.landmarkModelUrl.indexOf("https://tfhub.dev")>-1,[4,S1(e.landmarkModelUrl,{fromTFHub:t})];case 1:return r=o.sent(),[4,oT(Va.MediaPipeFaceDetector,{modelType:"short",maxFaces:e.maxFaces,detectorModelUrl:e.detectorModelUrl,runtime:e.runtime})];case 2:return s=o.sent(),[2,new ST(s,r,e.maxFaces,e.refineLandmarks)]}})})}function NT(n,e){return Ln(this,void 0,void 0,function(){var t,r;return Bn(this,function(s){if(n===Ma.MediaPipeFaceMesh){if(r=void 0,(t=e)!=null){if(t.runtime==="tfjs")return[2,TT(t)];if(t.runtime==="mediapipe")return[2,WS(t)];r=t.runtime}throw new Error("Expect modelConfig.runtime to be either 'tfjs' or 'mediapipe', but got "+r)}throw new Error(n+" is not a supported model name.")})})}(function(n){n.MediaPipeFaceMesh="MediaPipeFaceMesh"})(Ma||(Ma={}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pr={},ia={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function ET(n,e){Pr[n]=e}function xn(n,e){if(!(n in Pr)||e!=null){const r=kT(n,e);if(r!==null)Pr[n]=r;else return console.log("Could not get context for WebGL version",n),null}const t=Pr[n];return t==null||t.isContextLost()?(delete Pr[n],xn(n)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),Pr[n])}function IT(n){if(!j().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&n===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function kT(n,e){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=e??IT(n);return t.addEventListener("webglcontextlost",r=>{r.preventDefault(),delete Pr[n]},!1),j().getBool("SOFTWARE_WEBGL_ENABLED")&&(ia.failIfMajorPerformanceCaveat=!1),n===1?t.getContext("webgl",ia)||t.getContext("experimental-webgl",ia):t.getContext("webgl2",ia)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var To;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(To||(To={}));var Wt;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})(Wt||(Wt={}));var ct;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(ct||(ct={}));function Fo(n,e){return[e,n]}function RT(n,e){return n*e}function ua(n){const e=ne(n),t=Math.ceil(e/4);return Xi(t)}function Fs(n,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(n/2))]}function _T(n,e){const[t,r]=Fs(n,e);return t*r*4}function xc(n,e){const t=n;let r,s,o,a,i,u,c,l,h,d;return j().getNumber("WEBGL_VERSION")===2?(r=t.R32F,s=t.R16F,o=t.RGBA16F,a=t.RGBA32F,i=t.RED,c=4,l=1,h=t.HALF_FLOAT,d=t.FLOAT,u=t.RGBA8):(r=n.RGBA,s=n.RGBA,o=n.RGBA,a=t.RGBA,i=n.RGBA,c=4,l=4,h=e!=null?e.HALF_FLOAT_OES:null,d=n.FLOAT,u=n.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:a,textureFormatFloat:i,downloadTextureFormat:u,downloadUnpackNumChannels:c,defaultNumChannels:l,textureTypeHalfFloat:h,textureTypeFloat:d}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ce(n,e){const t=e();return j().getBool("DEBUG")&&AT(n),t}function AT(n){const e=n.getError();if(e!==n.NO_ERROR)throw new Error("WebGL Error: "+PT(n,e))}const OT=596e-10,DT=65504;function FT(n){return!!(j().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||OT<Math.abs(n)&&Math.abs(n)<DT)}function PT(n,e){switch(e){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function ca(n,e){return Hn(n,()=>n.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function LT(n,e){const t=Hn(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(ce(n,()=>n.shaderSource(t,e)),ce(n,()=>n.compileShader(t)),n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw console.log(n.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function BT(n,e){const t=Hn(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(ce(n,()=>n.shaderSource(t,e)),ce(n,()=>n.compileShader(t)),j().get("ENGINE_COMPILE_ONLY"))return t;if(n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw A1(e,n.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}const VT=/ERROR: [0-9]+:([0-9]+):/g;function A1(n,e){const t=VT.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(n);return}const r=+t[1],s=n.split(`
`),o=s.length.toString().length+2,a=s.map((h,d)=>bs((d+1).toString(),o)+h);let i=0;for(let h=0;h<a.length;h++)i=Math.max(a[h].length,i);const u=a.slice(0,r-1),c=a.slice(r-1,r),l=a.slice(r);console.log(u.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${bs(c[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(l.join(`
`))}function MT(n){return Hn(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function UT(n,e){if(ce(n,()=>n.linkProgram(e)),!j().get("ENGINE_COMPILE_ONLY")&&n.getProgramParameter(e,n.LINK_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function Wi(n,e){if(ce(n,()=>n.validateProgram(e)),n.getProgramParameter(e,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function WT(n,e){const t=Hn(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return ce(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),ce(n,()=>n.bufferData(n.ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function zT(n,e){const t=Hn(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return ce(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t)),ce(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function GT(n){return Hn(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function jT(n,e){const t=j().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||e<=0){const r=`[${n}x${e}]`;throw new Error("Requested texture size "+r+" is invalid.")}if(n>t||e>t){const r=`[${n}x${e}]`,s=`[${t}x${t}]`;throw new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU "+s+".")}}function HT(n){return Hn(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function Sl(n,e,t,r,s,o,a){const i=n.getAttribLocation(e,t);return i===-1?!1:(ce(n,()=>n.bindBuffer(n.ARRAY_BUFFER,r)),ce(n,()=>n.vertexAttribPointer(i,s,n.FLOAT,!1,o,a)),ce(n,()=>n.enableVertexAttribArray(i)),!0)}function KT(n,e,t){ZT(n,t),ce(n,()=>n.activeTexture(n.TEXTURE0+t)),ce(n,()=>n.bindTexture(n.TEXTURE_2D,e))}function XT(n,e,t){return Hn(n,()=>n.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function qT(n,e,t){return n.getUniformLocation(e,t)}function YT(n,e,t,r){ce(n,()=>KT(n,e,r)),ce(n,()=>n.uniform1i(t,r))}function zi(n,e,t){ce(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),ce(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0))}function Tl(n,e){ce(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),ce(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function la(n){const e=n.checkFramebufferStatus(n.FRAMEBUFFER);if(e!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+QT(n,e))}function QT(n,e){switch(e){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function Hn(n,e,t){const r=ce(n,()=>e());if(r==null)throw new Error(t);return r}function ZT(n,e){const t=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+n.TEXTURE0;if(r<n.TEXTURE0||r>t){const s=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${s}.`)}}function Is(n,e=2){return ne(n.slice(0,n.length-e))}function ks(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function ha(n){let e=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(e=[Is(n),...ks(n)]),e}function JT(n,e=!1){let t=j().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=j().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");r===1/0&&j().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=t/2),e&&(t=t*2,r=r*2,n=n.map((i,u)=>u>=n.length-2?Vu(n[u]):n[u]),n.length===1&&(n=[2,n[0]])),n.length!==2&&(n=mr(n).newShape);let s=ne(n),o=null;n.length<=1&&s<=t?o=[1,s]:n.length===2&&n[0]<=t&&n[1]<=t?o=n:n.length===3&&n[0]*n[1]<=t&&n[2]<=t?o=[n[0]*n[1],n[2]]:n.length===3&&n[0]<=t&&n[1]*n[2]<=t?o=[n[0],n[1]*n[2]]:n.length===4&&n[0]*n[1]*n[2]<=t&&n[3]<=t?o=[n[0]*n[1]*n[2],n[3]]:n.length===4&&n[0]<=t&&n[1]*n[2]*n[3]<=t&&(o=[n[0],n[1]*n[2]*n[3]]);const a=o!=null&&Math.max(...o)>r&&Math.min(...o)<=(e?2:1)&&Math.min(...o)>0;if(o==null||a)if(e){const i=Is(n);let u=2,c=2;n.length&&([u,c]=ks(n)),s=i*(u/2)*(c/2),o=Xi(s).map(l=>l*2)}else o=Xi(s);return o}function da(n){return n%2===0}function Ua(n,e){if(n=n.slice(-2),e=e.slice(-2),Xe(n,e)||!n.length||!e.length||n[0]===0||n[1]===0||e[0]===0||e[1]===0)return!0;if(n.length!==e.length){const t=n[n.length-1],r=e[e.length-1];if(t===r||da(t)&&da(r)&&(n[0]===1||e[0]===1))return!0}return n[1]===e[1]&&da(n[0])&&da(e[0])}let Gi,ji;function eN(n){if(Gi==null){const e=xn(n);Gi=e.getParameter(e.MAX_TEXTURE_SIZE)}return Gi}function tN(n){if(ji==null){const e=xn(n);ji=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,ji)}function nN(n){if(n===0)return 0;let e;const t=xn(n);return nn(t,"EXT_disjoint_timer_query_webgl2")&&n===2?e=2:nn(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function nn(n,e){return n.getExtension(e)!=null}function Nl(n){try{if(xn(n)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function rN(n){if(n===0)return!1;const e=xn(n);if(n===1){if(!nn(e,"OES_texture_float"))return!1}else if(!nn(e,"EXT_color_buffer_float"))return!1;return Du(e)}function sN(n){if(n===0)return!1;const e=xn(n);if(n===1){if(!nn(e,"OES_texture_float")||!nn(e,"WEBGL_color_buffer_float"))return!1}else{if(nn(e,"EXT_color_buffer_float"))return Du(e);const r="EXT_color_buffer_half_float";if(nn(e,r)){const s=e.getExtension(r);return oN(e,s)}return!1}return Du(e)}function Du(n){const e=xc(n),t=n.createTexture();n.bindTexture(n.TEXTURE_2D,t),n.texImage2D(n.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const o=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,o),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0);const a=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(t),n.deleteFramebuffer(o),a}function oN(n,e){const t=xc(n,e),r=n.createTexture();n.bindTexture(n.TEXTURE_2D,r),n.texImage2D(n.TEXTURE_2D,0,t.internalFormatHalfFloat,1,1,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);const a=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,a),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,r,0);const i=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(r),n.deleteFramebuffer(a),i}function aN(n){return n!==2?!1:xn(n).fenceSync!=null}function Po(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&_(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pe=j();pe.registerFlag("HAS_WEBGL",()=>pe.getNumber("WEBGL_VERSION")>0);pe.registerFlag("WEBGL_VERSION",()=>Nl(2)?2:Nl(1)?1:0);pe.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);pe.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>pe.get("WEBGL_VERSION")===2);pe.registerFlag("WEBGL_CPU_FORWARD",()=>!0);pe.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);pe.registerFlag("WEBGL_PACK",()=>pe.getBool("HAS_WEBGL"));pe.registerFlag("WEBGL_PACK_NORMALIZATION",()=>pe.getBool("WEBGL_PACK"));pe.registerFlag("WEBGL_PACK_CLIP",()=>pe.getBool("WEBGL_PACK"));pe.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>pe.getBool("WEBGL_PACK"));pe.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>pe.getBool("WEBGL_PACK"));pe.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>pe.getBool("WEBGL_PACK"));pe.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>pe.getBool("WEBGL_PACK"));pe.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>pe.getBool("WEBGL_PACK"));pe.registerFlag("WEBGL_PACK_REDUCE",()=>pe.getBool("WEBGL_PACK"));pe.registerFlag("WEBGL_LAZILY_UNPACK",()=>pe.getBool("WEBGL_PACK"));pe.registerFlag("WEBGL_CONV_IM2COL",()=>pe.getBool("WEBGL_PACK"));pe.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>pe.getBool("WEBGL_PACK"));pe.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>eN(pe.getNumber("WEBGL_VERSION")));pe.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>tN(pe.getNumber("WEBGL_VERSION")));pe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=pe.getNumber("WEBGL_VERSION");return n===0?0:nN(n)});pe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>pe.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!lf());pe.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>rN(pe.getNumber("WEBGL_VERSION")));pe.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>pe.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:pe.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));pe.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>sN(pe.getNumber("WEBGL_VERSION")));pe.registerFlag("WEBGL_FENCE_API_ENABLED",()=>aN(pe.getNumber("WEBGL_VERSION")));pe.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>pe.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);pe.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)});pe.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>lf()?1:-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)});pe.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);pe.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);pe.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);pe.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);pe.registerFlag("WEBGL_EXP_CONV",()=>!1);pe.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>pe.getBool("IS_TEST"));pe.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);pe.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);pe.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);pe.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $t(){let n,e,t,r,s,o,a,i,u,c;return j().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",e="in",t="out",r="in",s="texture",o="outputColor",a="out vec4 outputColor;",i=j().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",u="",c=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",e="attribute",t="varying",r="varying",s="texture2D",o="gl_FragColor",a="",i=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,c=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:e,varyingVs:t,varyingFs:r,texture2D:s,output:o,defineOutput:a,defineSpecialNaN:i,defineSpecialInf:u,defineRound:c}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ns(n,e,t="index"){const r=lt(e);return r.map((s,o)=>{const a=`int ${n[o]} = ${t} / ${s}`,i=o===r.length-1?`int ${n[o+1]} = ${t} - ${n[o]} * ${s}`:`index -= ${n[o]} * ${s}`;return`${a}; ${i};`}).join("")}function ii(n,e,t="index"){const r=lt(e);return r.map((s,o)=>{const a=`int ${n[o]} = ${t} / outShapeStrides[${o}]`,i=o===r.length-1?`int ${n[o+1]} = ${t} - ${n[o]} * outShapeStrides[${o}]`:`index -= ${n[o]} * outShapeStrides[${o}]`;return`${a}; ${i};`}).join("")}function iN(n,e){const t=n.length,r=n.map(o=>`${e}[${o}]`),s=new Array(t-1);s[t-2]=r[t-1];for(let o=t-3;o>=0;--o)s[o]=`(${s[o+1]} * ${r[o+1]})`;return s}function uN(n,e,t="index"){const r=n.map((o,a)=>a),s=iN(r,e);return s.map((o,a)=>{const i=`int ${n[a]} = ${t} / ${s[a]}`,u=a===s.length-1?`int ${n[a+1]} = ${t} - ${n[a]} * ${s[a]}`:`index -= ${n[a]} * ${s[a]}`;return`${i}; ${u};`}).join("")}function bc(n){const e=lt(n).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function wc(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const O1=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:D1}=lC;function cN(n,e,t){const r=[];if(n.forEach(p=>{const f=ne(p.shapeInfo.logicalShape);if(p.shapeInfo.isUniform?r.push(`uniform float ${p.name}${f>1?`[${f}]`:""};`):(r.push(`uniform sampler2D ${p.name};`),r.push(`uniform int offset${p.name};`)),t.enableShapeUniforms){const{uniformShape:x}=vc(t.packedInputs,p.shapeInfo.logicalShape,p.shapeInfo.texShape);switch(x.length){case 1:r.push(`uniform int ${p.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${p.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${p.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${p.name}Shape;`);break}r.push(`uniform ivec2 ${p.name}TexShape;`)}}),t.enableShapeUniforms){switch(e.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;");break}r.push("uniform ivec2 outTexShape;")}t.customUniforms&&t.customUniforms.forEach(p=>{r.push(`uniform ${p.type} ${p.name}${p.arrayIndex?`[${p.arrayIndex}]`:""};`)});const s=r.join(`
`),o=n.map(p=>lN(p,e,t.packedInputs,t.enableShapeUniforms)).join(`
`),a=e.texShape,i=$t(),u=pN(i);let c,l,h=gN(i);return e.isPacked?(c=hN(e.logicalShape,a,t.enableShapeUniforms),l=mN(i)):(c=dN(e.logicalShape,a,t.enableShapeUniforms),l=fN(i)),t.packedInputs&&(h+=wN),[h,u,l,s,c,o,t.userCode].join(`
`)}function Ps(n,e=!1){const t=n.shapeInfo.logicalShape;switch(t.length){case 0:return AN(n,e);case 1:return DN(n,e);case 2:return PN(n,e);case 3:return BN(n,e);case 4:return MN(n,e);case 5:return UN(n);case 6:return WN(n);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function F1(n,e){switch(n.shapeInfo.logicalShape.length){case 0:return _N(n);case 1:return ON(n,e);case 2:return FN(n,e);case 3:return LN(n,e);default:return VN(n,e)}}function lN(n,e,t=!1,r){let s="";t?s+=F1(n,r):s+=Ps(n,r);const o=n.shapeInfo.logicalShape,a=e.logicalShape;return o.length<=a.length&&(t?s+=zN(n,e):s+=GN(n,e)),s}function hN(n,e,t){switch(n.length){case 0:return P1();case 1:return vN(n,e,t);case 2:return kN(n,e,t);case 3:return CN(n,e,t);default:return TN(n,e,t)}}function dN(n,e,t){switch(n.length){case 0:return P1();case 1:return $N(n,e,t);case 2:return RN(n,e,t);case 3:return SN(n,e,t);case 4:return NN(n,e,t);case 5:return EN(n,e);case 6:return IN(n,e);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}function pN(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}function fN(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}function mN(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}function gN(n){return`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${yN}
    ${xN}
    ${bN}
  `}const yN=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,xN=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,bN=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,wN=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function P1(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function vN(n,e,t){const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return r[0]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${r[1]}.0);
      }
    `:r[1]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${r[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);
    }
  `}function $N(n,e,t){return e[0]===1?t?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?t?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function CN(n,e,t){if(t)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(n[2]/2),o=s*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec3(b, r, c);
    }
  `}function SN(n,e,t){if(t)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${ii(["r","c","d"],n)}
    return ivec3(r, c, d);
  }
`;const r=ns(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${r}
      return ivec3(r, c, d);
    }
  `}function TN(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(n[n.length-1]/2),o=s*Math.ceil(n[n.length-2]/2);let a=o,i="",u="b, r, c";for(let c=2;c<n.length-1;c++)a*=n[n.length-c-1],i=`
      int b${c} = index / ${a};
      index -= b${c} * ${a};
    `+i,u=`b${c}, `+u;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      ${i}

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec${n.length}(${u});
    }
  `}function NN(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${ii(["r","c","d","d2"],n)}
      return ivec4(r, c, d, d2);
    }
  `;const r=ns(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${r}
      return ivec4(r, c, d, d2);
    }
  `}function EN(n,e){const t=ns(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function IN(n,e){const t=ns(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function kN(n,e,t){const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(Xe(n,e))return t?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));
      }
    `;const s=Math.ceil(n[1]/2);return t?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));

      int index = resTexRC.x * ${r[1]} + resTexRC.y;
      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec2(r, c);
    }
  `}function RN(n,e,t){return Xe(n,e)?t?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:n[1]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:t?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}function rs(n){return`offset${n}`}function _N(n){const e=n.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),r=$t();return`
    vec4 ${t}() {
      return ${r.texture2D}(${e}, halfCR);
    }
  `}function AN(n,e){const t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`float ${r}() {return ${t};}`;const[s,o]=n.shapeInfo.texShape;if(s===1&&o===1)return`
      float ${r}() {
        return sampleTexture(${t}, halfCR);
      }
    `;const a=rs(t);if(e)return`
    float ${r}() {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], ${a});
      return sampleTexture(${t}, uv);
    }
  `;const[i,u]=n.shapeInfo.texShape;return`
    float ${r}() {
      vec2 uv = uvFromFlat(${i}, ${u}, ${a});
      return sampleTexture(${t}, uv);
    }
  `}function ON(n,e){const t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),s=n.shapeInfo.texShape,o=$t();if(e)return`
    vec4 ${r}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${o.texture2D}(${t}, uv);
    }
  `;const a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`
    vec4 ${r}(int index) {
      vec2 uv = packedUVfrom1D(
        ${a[0]}, ${a[1]}, index);
      return ${o.texture2D}(${t}, uv);
    }
  `}function DN(n,e){const t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`
      float ${r}(int index) {
        ${Ls(n)}
      }
    `;const s=n.shapeInfo.texShape,o=s[0],a=s[1];if(a===1&&o===1)return`
      float ${r}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;const i=rs(t);return a===1?e?`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${t}TexShape[0]));
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${o}.0);
        return sampleTexture(${t}, uv);
      }
    `:o===1?e?`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${t}TexShape[1]), 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:e?`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], index + ${i});
      return sampleTexture(${t}, uv);
    }
  `:`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${o}, ${a}, index + ${i});
      return sampleTexture(${t}, uv);
    }
  `}function FN(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=n.shapeInfo.texShape,a=o[0],i=o[1],u=$t();if(o!=null&&Xe(t,o))return e?`
      vec4 ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);

        return ${u.texture2D}(${r}, uv);
      }
    `:`
      vec4 ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${a}.0);

        return ${u.texture2D}(${r}, uv);
      }
    `;if(e)return`
    vec4 ${s}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${u.texture2D}(${r}, uv);
    }
  `;const c=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=Math.ceil(t[1]/2);return`
    vec4 ${s}(int row, int col) {
      vec2 uv = packedUVfrom2D(${l}, ${c[0]}, ${c[1]}, row, col);
      return ${u.texture2D}(${r}, uv);
    }
  `}function PN(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=n.shapeInfo.texShape;if(o!=null&&Xe(t,o)){if(e)return`
      float ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `;const d=o[0],p=o[1];return`
    float ${s}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${p}.0, ${d}.0);
      return sampleTexture(${r}, uv);
    }
  `}const{newShape:a,keptDims:i}=mr(t),u=a;if(u.length<t.length){const d=Bs(n,u),p=["row","col"];return`
      ${Ps(d,e)}
      float ${s}(int row, int col) {
        return ${s}(${Vs(p,i)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${Ls(n)}
      }
    `;const c=o[0],l=o[1],h=rs(r);return l===1?e?`
      float ${s}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${s}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);
      return sampleTexture(${r}, uv);
    }
  `:c===1?e?`
      float ${s}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${s}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);
      return sampleTexture(${r}, uv);
    }
  `:e?`
      float ${s}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r}Shape[1] + col + ${h};
        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
        return sampleTexture(${r}, uv);
      }
    `:`
  float ${s}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${h};
    vec2 uv = uvFromFlat(${c}, ${l}, index);
    return sampleTexture(${r}, uv);
  }
`}function LN(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=n.shapeInfo.texShape,a=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];if(t[0]===1){const d=t.slice(1),p=[1,2],f=Bs(n,d),x=["b","row","col"];return`
        ${F1(f,e)}
        vec4 ${s}(int b, int row, int col) {
          return ${s}(${Vs(x,p)});
        }
      `}const i=$t();if(e)return`
    vec4 ${s}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${i.texture2D}(${r}, uv);
    }
  `;const u=a[0],c=a[1],l=Math.ceil(t[2]/2),h=l*Math.ceil(t[1]/2);return`
    vec4 ${s}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${u}, ${c}, ${h}, ${l}, b, row, col);
      return ${i.texture2D}(${r}, uv);
    }
  `}function BN(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=t[1]*t[2],a=t[2],{newShape:i,keptDims:u}=mr(t),c=i;if(c.length<t.length){const x=Bs(n,c),y=["row","col","depth"];return`
        ${Ps(x,e)}
        float ${s}(int row, int col, int depth) {
          return ${s}(${Vs(y,u)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${o}, ${a}, 1)));
        ${Ls(n)}
      }
    `;const l=n.shapeInfo.texShape,h=l[0],d=l[1],p=n.shapeInfo.flatOffset;if(d===o&&p==null)return e?`
      float ${s}(int row, int col, int depth) {
        int stride1 = ${r}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
        float ${s}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${a}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${h}.0);
          return sampleTexture(${r}, uv);
        }
      `;if(d===a&&p==null)return e?`
      float ${s}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${s}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);
      return sampleTexture(${r}, uv);
    }
  `;const f=rs(r);return e?`
    float ${s}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${r}Shape[1] * ${r}Shape[2];
      int stride1 = ${r}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${f};
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
      return sampleTexture(${r}, uv);
    }
    `:`
      float ${s}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${o} + col * ${a} + depth + ${f};
        vec2 uv = uvFromFlat(${h}, ${d}, index);
        return sampleTexture(${r}, uv);
      }
  `}function VN(n,e){const t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),s=$t();if(e)return`
    vec4 ${r}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${t}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${t}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${t}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${t}, uv);
    }
  `;const o=n.shapeInfo.logicalShape,a=o.length,i=n.shapeInfo.texShape,u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],c=u[0],l=u[1],h=Math.ceil(o[a-1]/2);let d=h*Math.ceil(o[a-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let x=2;x<a-1;x++)p=`int b${x}, `+p,d*=o[a-x-1],f=`b${x} * ${d} + `+f;return`
    vec4 ${r}(${p}) {
      int index = ${f};
      int texR = index / ${l};
      int texC = index - texR * ${l};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${c});
      return ${s.texture2D}(${t}, uv);
    }
  `}function MN(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=t[3],a=t[2]*o,i=t[1]*a,{newShape:u,keptDims:c}=mr(t);if(u.length<t.length){const S=Bs(n,u),I=["row","col","depth","depth2"];return`
      ${Ps(S,e)}
      float ${s}(int row, int col, int depth, int depth2) {
        return ${s}(${Vs(I,c)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${i}, ${a}, ${o}, 1)));
        ${Ls(n)}
      }
    `;const l=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${r}Shape[3];`,x=`int stride1 = ${r}Shape[2] * stride2;`,y=`int stride0 = ${r}Shape[1] * stride1;`;if(p===i&&l==null)return e?`
      float ${s}(int row, int col, int depth, int depth2) {
        ${f}
        ${x}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${a}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${d}.0);
        return sampleTexture(${r}, uv);
      }
    `;if(p===o&&l==null)return e?`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${d}.0);
        return sampleTexture(${r}, uv);
      }
    `;const b=rs(r);return e?`
    float ${s}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${x}
      ${y}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${b});
      return sampleTexture(${r}, uv);
    }
  `:`
    float ${s}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} +
          depth * ${o} + depth2;
      vec2 uv = uvFromFlat(${d}, ${p}, index + ${b});
      return sampleTexture(${r}, uv);
    }
  `}function UN(n){const e=n.shapeInfo.logicalShape,t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),s=e[4],o=e[3]*s,a=e[2]*o,i=e[1]*a,{newShape:u,keptDims:c}=mr(e);if(u.length<e.length){const x=Bs(n,u),y=["row","col","depth","depth2","depth3"];return`
      ${Ps(x)}
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        return ${r}(${Vs(y,c)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${i}, ${a}, ${o}, ${s})) +
          depth3;
        ${Ls(n)}
      }
    `;const l=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,d=h[0],p=h[1];if(p===i&&l==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${a}, ${o}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(p===s&&l==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;const f=rs(t);return`
    float ${r}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} + depth * ${o} +
          depth2 * ${s} + depth3 + ${f};
      vec2 uv = uvFromFlat(${d}, ${p}, index);
      return sampleTexture(${t}, uv);
    }
  `}function WN(n){const e=n.shapeInfo.logicalShape,t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:s,keptDims:o}=mr(e);if(s.length<e.length){const y=Bs(n,s),b=["row","col","depth","depth2","depth3","depth4"];return`
      ${Ps(y)}
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${r}(${Vs(b,o)});
      }
    `}const a=e[5],i=e[4]*a,u=e[3]*i,c=e[2]*u,l=e[1]*c;if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${l}, ${c}, ${u}, ${i})) +
          dot(
            vec2(depth3, depth4),
            vec2(${a}, 1)));
        ${Ls(n)}
      }
    `;const h=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,p=d[0],f=d[1];if(f===l&&h==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${c}, ${u}, ${i}, ${a})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(f===a&&h==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;const x=rs(t);return`
    float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${c} + depth * ${u} +
          depth2 * ${i} + depth3 * ${a} + depth4 + ${x};
      vec2 uv = uvFromFlat(${p}, ${f}, index);
      return sampleTexture(${t}, uv);
    }
  `}function Ls(n){const e=n.name,t=ne(n.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function zN(n,e){const t=n.name,r=t.charAt(0).toUpperCase()+t.slice(1),s="get"+r+"AtOutCoords",o=n.shapeInfo.logicalShape.length,a=e.logicalShape.length,i=D1(n.shapeInfo.logicalShape,e.logicalShape),u=Be(a),c=a-o;let l;const h=["x","y","z","w","u","v"];o===0?l="":a<2&&i.length>=1?l="coords = 0;":l=i.map(S=>`coords.${h[S+c]} = 0;`).join(`
`);let d="";a<2&&o>0?d="coords":d=n.shapeInfo.logicalShape.map((S,I)=>`coords.${h[I+c]}`).join(", ");let p="return outputValue;";const x=ne(n.shapeInfo.logicalShape)===1,b=ne(e.logicalShape)===1;if(o===1&&!x&&!b)p=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(x&&!b)a===1?p=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:p=`
        return vec4(outputValue.x);
      `;else if(i.length){const S=o-2,I=o-1;i.indexOf(S)>-1&&i.indexOf(I)>-1?p="return vec4(outputValue.x);":i.indexOf(S)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(I)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${s}() {
      ${u} coords = getOutputCoords();
      ${l}
      vec4 outputValue = get${r}(${d});
      ${p}
    }
  `}function GN(n,e){const t=n.name,r=t.charAt(0).toUpperCase()+t.slice(1),s="get"+r+"AtOutCoords",o=e.texShape,a=n.shapeInfo.texShape,i=n.shapeInfo.logicalShape.length,u=e.logicalShape.length;if(!n.shapeInfo.isUniform&&i===u&&n.shapeInfo.flatOffset==null&&Xe(a,o))return`
      float ${s}() {
        return sampleTexture(${t}, resultUV);
      }
    `;const c=Be(u),l=D1(n.shapeInfo.logicalShape,e.logicalShape),h=u-i;let d;const p=["x","y","z","w","u","v"];i===0?d="":u<2&&l.length>=1?d="coords = 0;":d=l.map(x=>`coords.${p[x+h]} = 0;`).join(`
`);let f="";return u<2&&i>0?f="coords":f=n.shapeInfo.logicalShape.map((x,y)=>`coords.${p[y+h]}`).join(", "),`
    float ${s}() {
      ${c} coords = getOutputCoords();
      ${d}
      return get${r}(${f});
    }
  `}function Be(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function vc(n,e,t){const{newShape:r,keptDims:s}=mr(e),o=e.length,a=n&&o===3&&e[0]===1,i=a?e.slice(1):r,u=!n&&o>1&&!Xe(e,t)&&r.length<o||a;return{useSqueezeShape:u,uniformShape:u?i:e,keptDims:s}}function Bs(n,e){const t=JSON.parse(JSON.stringify(n));return t.shapeInfo.logicalShape=e,t}function Vs(n,e){return e.map(t=>n[t]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jN(n,e,t,r){const s=t.map((l,h)=>{const d={logicalShape:l.shape,texShape:l.isUniform?null:l.texData.texShape,isUniform:l.isUniform,isPacked:l.isUniform?!1:l.texData.isPacked,flatOffset:null};return l.texData!=null&&l.texData.slice!=null&&l.texData.slice.flatOffset>0&&(d.flatOffset=l.texData.slice.flatOffset),{name:e.variableNames[h],shapeInfo:d}}),o=s.map(l=>l.shapeInfo),a={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},i=cN(s,a,e),u=BT(n.gl,i),c=n.createProgram(u);return j().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:u,source:i,webGLProgram:c,inShapeInfos:o,outShapeInfo:a,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(n.buildVao(c),Object.assign({program:e,fragmentShader:u,source:i,webGLProgram:c,inShapeInfos:o,outShapeInfo:a},L1(n,e,c)))}function L1(n,e,t){const r=[],s=[];let o,a,i,u=null,c=null;c=n.getUniformLocation(t,"NAN",!1),j().getNumber("WEBGL_VERSION")===1&&(u=n.getUniformLocation(t,"INFINITY",!1));const l=!1;for(const h of e.variableNames){const d={name:h,uniform:n.getUniformLocation(t,h,l),offset:n.getUniformLocation(t,`offset${h}`,l)};e.enableShapeUniforms&&(d.shape=n.getUniformLocation(t,`${h}Shape`,l),d.texShape=n.getUniformLocation(t,`${h}TexShape`,l)),r.push(d)}if(e.enableShapeUniforms&&(o=n.getUniformLocation(t,"outShape",l),i=n.getUniformLocation(t,"outShapeStrides",l),a=n.getUniformLocation(t,"outTexShape",l)),e.customUniforms)for(const h of e.customUniforms)s.push(n.getUniformLocation(t,h.name,l));return{variablesLocations:r,customUniformLocations:s,infLoc:u,nanLoc:c,outShapeLocation:o,outShapeStridesLocation:i,outTexShapeLocation:a}}function El(n,e){if(n.length!==e.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${e.length} inputs`);n.forEach((t,r)=>{const s=t.logicalShape,o=e[r],a=o.shape;if(!Xe(s,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${a} must match`);if(t.isUniform&&o.isUniform)return;const i=t.texShape,u=o.isUniform?null:o.texData.texShape;if(!Xe(i,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${u} must match`)})}function HN(n,e,t,r,s){e.program.enableShapeUniforms||(El(e.inShapeInfos,t),El([e.outShapeInfo],[r]));const o=r.texData.texture,a=r.texData.texShape;r.texData.isPacked?n.setOutputPackedMatrixTexture(o.texture,a[0],a[1]):n.setOutputMatrixTexture(o.texture,a[0],a[1]),n.setProgram(e.webGLProgram),n.bindVertexArray(e.webGLProgram.vao),j().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&n.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&n.gl.uniform1f(e.nanLoc,NaN);for(let u=0;u<t.length;++u){const c=t[u],{uniform:l,offset:h,shape:d,texShape:p}=e.variablesLocations[u];if(d){const{uniformShape:f}=vc(e.program.packedInputs,c.shape,c.texData.texShape);switch(f.length){case 1:n.gl.uniform1iv(d,new Int32Array(f));break;case 2:n.gl.uniform2iv(d,new Int32Array(f));break;case 3:n.gl.uniform3iv(d,new Int32Array(f));break;case 4:n.gl.uniform4iv(d,new Int32Array(f));break}}if(p&&n.gl.uniform2i(p,c.texData.texShape[0],c.texData.texShape[1]),l!=null){if(c.isUniform){if(ne(c.shape)<2)n.gl.uniform1f(l,c.uniformValues[0]);else{let f=c.uniformValues;f instanceof Float32Array||(f=new Float32Array(f)),n.gl.uniform1fv(l,f)}continue}c.texData.slice!=null&&h!=null&&n.gl.uniform1i(h,c.texData.slice.flatOffset),n.setInputMatrixTexture(c.texData.texture.texture,l,u)}}const i=e.outShapeLocation;if(i)switch(r.shape.length){case 1:n.gl.uniform1iv(i,new Int32Array(r.shape));break;case 2:n.gl.uniform2iv(i,new Int32Array(r.shape));break;case 3:n.gl.uniform3iv(i,new Int32Array(r.shape));break;case 4:n.gl.uniform4iv(i,new Int32Array(r.shape));break}if(e.outShapeStridesLocation){const u=lt(r.shape);switch(r.shape.length){case 2:n.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(u));break;case 3:n.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(u));break;case 4:n.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(u));break}}if(e.outTexShapeLocation&&n.gl.uniform2i(e.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),e.program.customUniforms&&s)for(let u=0;u<e.program.customUniforms.length;++u){const c=e.program.customUniforms[u],l=e.customUniformLocations[u],h=s[u];if(c.type==="float")n.gl.uniform1fv(l,h);else if(c.type==="vec2")n.gl.uniform2fv(l,h);else if(c.type==="vec3")n.gl.uniform3fv(l,h);else if(c.type==="vec4")n.gl.uniform4fv(l,h);else if(c.type==="int")n.gl.uniform1iv(l,h);else if(c.type==="ivec2")n.gl.uniform2iv(l,h);else if(c.type==="ivec3")n.gl.uniform3iv(l,h);else if(c.type==="ivec4")n.gl.uniform4iv(l,h);else throw Error(`uniform type ${c.type} is not supported yet.`)}n.executeProgram()}function KN(n,e,t){let r="";e.concat(t).forEach(a=>{const i=a.texData!=null&&a.texData.slice!=null&&a.texData.slice.flatOffset>0;if(n.enableShapeUniforms&&!a.isUniform){const u=a.texData.texShape,{useSqueezeShape:c,uniformShape:l,keptDims:h}=vc(n.packedInputs,a.shape,u);let d="",p="",f="";if(l.length===1&&n.packedInputs){const P=[Math.ceil(u[0]/2),Math.ceil(u[1]/2)];d=`${P[0]>1}_${P[1]>1}`}else if(l.length===2&&!n.packedInputs)p=`${l[0]>1}_${l[1]>1}`;else if(l.length>2&&!n.packedInputs){const P=lt(l);f=`${P[0]===u[1]}_${P[P.length-1]===u[1]}`}const x=a.shape.length,y=l.length===2&&Xe(a.shape,u),b=ne(a.shape)===1,S=Aa(a.shape,t.shape),I=!n.packedInputs&&x===t.shape.length&&Xe(u,t.texData.texShape),k=n.packedInputs||l.length>2?"":`${u[0]>1}_${u[1]>1}`;r+=`${x}_${I}_${c?h:""}_${l.length}_${b}_${S}_${y}_${d}_${p}_${f}_${k}_${i}`}else{const u=a.isUniform?"uniform":a.texData.texShape;r+=`${a.shape}_${u}_${i}`}});const s=n.userCode;let o=n.constructor.name;return o+="_"+r+"_"+s+`${j().getNumber("WEBGL_VERSION")}`,o}function yt(n){return j().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class XN{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=To.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=$t();this.outputShape=e,this.enableShapeUniforms=yt(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?ii(["r","c","d"],e):ns(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qN{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=To.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=$t();this.outputShape=e,this.enableShapeUniforms=yt(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?ii(["r","c","d"],e):ns(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class YN{constructor(e){this.variableNames=["A"],this.outTexUsage=Wt.DOWNLOAD;const t=$t();this.outputShape=e,this.userCode=`
      ${O1}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QN{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Wt.DOWNLOAD;const t=$t();this.outputShape=e,this.userCode=`
      ${O1}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZN={R:0,G:1,B:2,A:3};class Il{constructor(e,t=!1,r="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=$t();this.outputShape=e,this.enableShapeUniforms=yt(this.outputShape.length);let o="result";t&&(o="floor(result * 255. + 0.5)");let a="";for(let i=0;i<r.length;i++){const u=r[i];a+=`
          if(offset == ${i}) {
            result = values[${ZN[u]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?wc():bc(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${r.length});

        flatIndex = idiv(flatIndex, ${r.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${s.texture2D}(A, uv);
          ${a}
        }
        ${s.output} = vec4(${o}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JN{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=$t();this.outputShape=e,this.enableShapeUniforms=yt(this.outputShape.length);let s="",o="result";t&&(o="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let i=0;i<=1;i++){const u=a*2+i;s+=`
          localCoords = coords;
          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${i};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${r.texture2D}(A, uv);

            if (offset == 0) {
              result[${u}] = values[0];
            } else if (offset == 1) {
              result[${u}] = values[1];
            } else if (offset == 2) {
              result[${u}] = values[2];
            } else {
              result[${u}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?wc():bc(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${s}

          ${r.output} = ${o};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eE(n){const e=$t(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return LT(n,t)}function tE(n){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return WT(n,e)}function nE(n){const e=new Uint16Array([0,1,2,2,1,3]);return zT(n,e)}function Lo(n,e,t,r,s,o){jT(e,t);const a=GT(n),i=n.TEXTURE_2D;return ce(n,()=>n.bindTexture(i,a)),ce(n,()=>n.texParameteri(i,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),ce(n,()=>n.texParameteri(i,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),ce(n,()=>n.texParameteri(i,n.TEXTURE_MIN_FILTER,n.NEAREST)),ce(n,()=>n.texParameteri(i,n.TEXTURE_MAG_FILTER,n.NEAREST)),j().getNumber("WEBGL_VERSION")===1?ce(n,()=>n.texImage2D(i,0,r,e,t,0,s,o,null)):ce(n,()=>n.texStorage2D(i,1,r,e,t)),ce(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:a,texShape:[t,e]}}function B1(n){return n.internalFormatFloat}function rE(n,e,t,r){const[s,o]=Fo(e,t);return Lo(n,s,o,B1(r),r.textureFormatFloat,n.FLOAT)}function V1(n){return n.internalFormatHalfFloat}function sE(n,e,t,r){const[s,o]=Fo(e,t);return Lo(n,s,o,V1(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function M1(n){return n.downloadTextureFormat}function oE(n,e,t,r){const[s,o]=Fo(e,t);return Lo(n,s,o,M1(r),n.RGBA,n.UNSIGNED_BYTE)}function U1(n){return n.internalFormatPackedFloat}function aE(n,e,t,r){const[s,o]=Fs(e,t);return Lo(n,s,o,U1(r),n.RGBA,n.FLOAT)}function W1(n){return n.internalFormatPackedHalfFloat}function iE(n,e,t,r){const[s,o]=Fs(e,t);return Lo(n,s,o,W1(r),n.RGBA,r.textureTypeHalfFloat)}function uE(n,e,t){return ce(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),Sl(n,e,"clipSpacePos",t,3,20,0)&&Sl(n,e,"uv",t,2,20,12)}function cE(n,e,t,r,s,o){ce(n,()=>n.bindTexture(n.TEXTURE_2D,e));let a,i,u;s instanceof Uint8Array?(a=new Uint8Array(t*r*4),i=n.UNSIGNED_BYTE,u=n.RGBA):(a=new Float32Array(t*r*4),i=n.FLOAT,u=o.internalFormatPackedFloat),a.set(s),j().getNumber("WEBGL_VERSION")===2?ce(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t,r,n.RGBA,i,a)):ce(n,()=>n.texImage2D(n.TEXTURE_2D,0,u,t,r,0,n.RGBA,i,a)),ce(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function lE(n,e,t){ce(n,()=>n.bindTexture(n.TEXTURE_2D,e)),t.data instanceof Uint8Array?j().getNumber("WEBGL_VERSION")===2?ce(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t.width,t.height,n.RGBA,n.UNSIGNED_BYTE,t.data)):ce(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,t.width,t.height,0,n.RGBA,n.UNSIGNED_BYTE,t.data)):j().getNumber("WEBGL_VERSION")===2?ce(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,t)):ce(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,t)),ce(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function hE(n,e,t,r){const s=n.createBuffer();ce(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,s));const i=4*4*e*t;return ce(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,i,n.STREAM_READ)),ce(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,0)),ce(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),s}function dE(n,e,t){const r=n,s=new Float32Array(t);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}function pE(n,e,t,r){const[s,o]=Fo(e,t),a=4,i=new Uint8Array(RT(e*t,a));return ce(n,()=>n.readPixels(0,0,s,o,r.downloadTextureFormat,n.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function fE(n,e,t,r,s,o,a,i){const u=n,c=new Float32Array(_T(o,a));return u.bindBuffer(u.PIXEL_PACK_BUFFER,e),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,c),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),c}function mE(n,e,t){const r=new Float32Array(e*t*4);return ce(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,r)),r}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hi{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=j().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,ET(t,e)):this.gl=xn(t),e=this.gl,j().getNumber("WEBGL_VERSION")===2){const o=e;this.createVertexArray=()=>ce(o,()=>o.createVertexArray()),this.bindVertexArray=a=>ce(o,()=>o.bindVertexArray(a)),this.deleteVertexArray=a=>ce(o,()=>o.deleteVertexArray(a)),this.getVertexArray=()=>ce(o,()=>o.getParameter(o.VERTEX_ARRAY_BINDING))}else if(e!=null){const o=e.getExtension("OES_vertex_array_object");if(o==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>ce(e,()=>o.createVertexArrayOES()),this.bindVertexArray=a=>ce(e,()=>o.bindVertexArrayOES(a)),this.deleteVertexArray=a=>ce(e,()=>o.deleteVertexArrayOES(a)),this.getVertexArray=()=>ce(e,()=>e.getParameter(o.VERTEX_ARRAY_BINDING_OES))}let r="WEBGL_color_buffer_float";const s="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),j().getNumber("WEBGL_VERSION")===1){const o="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=ca(this.gl,o),nn(this.gl,a))this.textureHalfFloatExtension=ca(this.gl,a);else if(j().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(r),nn(this.gl,s))this.colorBufferHalfFloatExtension=ca(this.gl,s);else if(j().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(r="EXT_color_buffer_float",nn(this.gl,r))this.colorBufferFloatExtension=this.gl.getExtension(r);else if(nn(this.gl,s))this.colorBufferHalfFloatExtension=this.gl.getExtension(s);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=tE(this.gl),this.indexBuffer=nE(this.gl),this.framebuffer=HT(this.gl),this.textureConfig=xc(this.gl,this.textureHalfFloatExtension)}get debug(){return j().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;ce(e,()=>e.finish()),ce(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),ce(e,()=>e.deleteFramebuffer(this.framebuffer)),ce(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),ce(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),ce(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),rE(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),sE(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),oE(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),lE(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,r,s){this.throwIfDisposed(),cE(this.gl,e,t,r,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),iE(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),aE(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Tl(this.gl,this.framebuffer),this.outputTexture=null),ce(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,r){return this.downloadMatrixDriver(e,()=>pE(this.gl,t,r,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,r,s,o,a){return fE(this.gl,e,t,r,s,o,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return dE(this.gl,e,t)}createBufferFromTexture(e,t,r){this.bindTextureToFrameBuffer(e);const s=hE(this.gl,t,r,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,r;if(j().getBool("WEBGL_FENCE_API_ENABLED")){const s=e,o=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),r=()=>{const a=s.clientWaitSync(o,0,0);return a===s.ALREADY_SIGNALED||a===s.CONDITION_SATISFIED},t=o}else j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),r=()=>this.isQueryAvailable(t,j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):r=()=>!0;return{query:t,isFencePassed:r}}downloadMatrixFromPackedTexture(e,t,r){return this.downloadMatrixDriver(e,()=>mE(this.gl,t,r))}createProgram(e){this.throwIfDisposed();const t=this.gl;this.vertexShader==null&&(this.vertexShader=eE(t));const r=MT(t);ce(t,()=>t.attachShader(r,this.vertexShader)),ce(t,()=>t.attachShader(r,e)),UT(t,r);const s=Object.assign(r,{vao:this.createVertexArray()});return this.debug&&Wi(t,s),s}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;ce(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),uE(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(ce(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&Wi(this.gl,this.program),ce(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,r=!0){return this.throwIfDisposed(),r?XT(this.gl,e,t):qT(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),ce(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,r){this.throwIfDisposed(),this.throwIfNoProgram(),YT(this.gl,e,t,r)}setOutputMatrixTexture(e,t,r){this.setOutputMatrixTextureDriver(e,r,t)}setOutputPackedMatrixTexture(e,t,r){this.throwIfDisposed();const[s,o]=Fs(t,r);this.setOutputMatrixTextureDriver(e,s,o)}setOutputMatrixWriteRegion(e,t,r,s){this.setOutputMatrixWriteRegionDriver(r,e,s,t)}setOutputPackedMatrixWriteRegion(e,t,r,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Wi(this.gl,this.program),la(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}ce(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),ce(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=ca(this.gl,j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const r=this.gl,s=this.getQueryTimerExtensionWebGL2(),o=r.createQuery();return r.beginQuery(s.TIME_ELAPSED_EXT,o),o}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const t=this.gl,r=this.getQueryTimerExtensionWebGL2();t.endQuery(r.TIME_ELAPSED_EXT);return}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await Rc(()=>this.disposed||this.isQueryAvailable(e,j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){const r=this.gl;return r.getQueryParameter(e,r.QUERY_RESULT)/1e6}else{const r=this.getQueryTimerExtensionWebGL1();return r.getQueryObjectEXT(e,r.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){const r=this.gl,s=this.getQueryTimerExtensionWebGL2(),o=r.getQueryParameter(e,r.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),o&&!this.disjoint}else{const r=this.getQueryTimerExtensionWebGL1(),s=r.getQueryObjectEXT(e,r.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),s&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=gE(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:r}=this.itemsToPoll[t];r()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let r;"setTimeoutCustom"in j().platform&&(r=j().platform.setTimeoutCustom.bind(j().platform)),Rc(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,r)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),zi(this.gl,e,this.framebuffer),this.debug&&la(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(zi(this.gl,this.outputTexture,this.framebuffer),this.debug&&la(this.gl)):Tl(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const r=t();return this.unbindTextureToFrameBuffer(),r}setOutputMatrixTextureDriver(e,t,r){this.throwIfDisposed();const s=this.gl;zi(s,e,this.framebuffer),this.debug&&la(s),this.outputTexture=e,ce(s,()=>s.viewport(0,0,t,r)),ce(s,()=>s.scissor(0,0,t,r))}setOutputMatrixWriteRegionDriver(e,t,r,s){this.throwIfDisposed(),ce(this.gl,()=>this.gl.scissor(e,t,r,s))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function gE(n){let e=0;for(;e<n.length&&n[e]();++e);return e-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yE(n){const e=new Float32Array(n.length);for(let t=0;t<n.length;++t)e[t]=Math.abs(n[t]);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Et(n){return(e,t,r,s,o)=>{const a=De(e,t),i=a.length,u=lt(a),c=ne(a),l=lr(o,c),h=e.length,d=t.length,p=lt(e),f=lt(t),x=Aa(e,a),y=Aa(t,a);if(x.length+y.length===0)for(let b=0;b<l.length;++b)l[b]=n(r[b%r.length],s[b%s.length]);else for(let b=0;b<l.length;++b){const S=Mu(b,i,u),I=S.slice(-h);x.forEach(H=>I[H]=0);const k=Zi(I,h,p),P=S.slice(-d);y.forEach(H=>P[H]=0);const W=Zi(P,d,f);l[b]=n(r[k],s[W])}return[l,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xE(n,e,t,r){if(r==="int32"){const s=Int32Array.from(n);return[e,"int32",s]}if(r==="bool"){const s=Xa([0],t),[o,a]=Et((i,u)=>i!==u?1:0)(e,[],n,s,"bool");return[a,"bool",o]}throw new Error(`Error in Cast: failed to cast ${t} to ${r}`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bE=Et((n,e)=>n+e);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wE(n,e,t,r,s){const o=ne(r),a=hr(s,t);for(let i=0;i<n.length;i++){const u=n[i];if(u<0)throw new Error("Input x must be non-negative!");u>=s||(o>0?a[u]+=e[i]:a[u]+=1)}return a}function vE(n,e,t,r=!1){const s=n.shape[0],o=n.shape[1],a=qe([s,t],e.dtype);for(let i=0;i<s;i++)for(let u=0;u<o;u++){const c=n.get(i,u);if(c<0)throw new Error("Input x must be non-negative!");c>=t||(r?a.set(1,i,c):e.size>0?a.set(a.get(i,c)+e.get(i,u),i,c):a.set(a.get(i,c)+1,i,c))}return a}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $E=Et((n,e)=>n&e);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kn(n){return(e,t,r)=>{const s=ot(t,e.length);for(let o=0;o<e.length;++o)s[o]=n(e[o],r);return s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CE=Kn(n=>Math.ceil(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SE(n,e,t,r){const s=ot(t,ne(e));if(r&&t!=="string"){let o=0;n.forEach(a=>{const i=ne(a.shape);s.set(a.vals,o),o+=i})}else{let o=0;n.forEach(a=>{const i=t==="string"?Es(a.vals):a.vals;let u=0;for(let c=0;c<a.shape[0];++c){const l=c*e[1]+o;for(let h=0;h<a.shape[1];++h)s[l+h]=i[u++]}o+=a.shape[1]})}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TE=Et((n,e)=>n===e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NE=Kn(n=>Math.exp(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EE=Kn(n=>Math.expm1(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IE=Kn(n=>Math.floor(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kE=Et((n,e)=>Math.floor(n/e));/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RE(n,e,t,r,s,o,a,i,u){const c=qe([r,o],t);for(let l=0;l<r;l++){const h=[];let d=0;for(let p=0;p<s;p++){const f=n[l*s+p];d+=f*a[p],h.push(f)}if(d<0||d>=u/o)throw new Error(`Invalid indices: ${h} does not index into ${i}`);for(let p=0;p<o;p++)c.values[l*o+p]=e.get(...e.indexToLoc(d*o+p))}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _E(n,e,t){const r=qe(t,n.dtype);for(let s=0;s<r.size;++s){const a=r.indexToLoc(s).slice(),i=a[0],u=a[2],c=e.locToIndex([i,u]);a[2]=e.values[c];const l=n.locToIndex(a);0<=l&&l<n.values.length&&(r.values[s]=n.values[l])}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AE=Et((n,e)=>n>e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OE=Et((n,e)=>n>=e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DE=Et((n,e)=>n<e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FE=Et((n,e)=>n<=e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PE(n,e,t){const r=(e-n)/(t-1),s=hr(t,"float32");s[0]=n;for(let o=1;o<s.length;o++)s[o]=s[o-1]+r;return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LE=Kn(n=>Math.log(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BE(n,e,t,r){const s=lr(r,ne(t));for(let o=0;o<s.length;++o){const a=o*e;let i=n[a];for(let u=0;u<e;++u){const c=n[a+u];(Number.isNaN(c)||c>i)&&(i=c)}s[o]=i}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VE=Et((n,e)=>Math.max(n,e));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ME=Et((n,e)=>Math.min(n,e));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z1=Et((n,e)=>n*e);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UE(n,e,t){const r=_s(-1,t);return z1([],e,r,n,t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WE=Et((n,e)=>n!==e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zE(n,e,t,r,s){const o=e.length,a=ne(e),i=lt(e),u=lt(s),c=lr(t,ne(s));for(let l=0;l<a;++l){const h=Mu(l,o,i),d=new Array(h.length);for(let f=0;f<d.length;f++)d[f]=h[r[f]];const p=Zi(d,o,u);c[p]=n[l]}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GE(n,e,t,r){const[s,o]=Rn(n,r),a=kn(e,"int32"),i=hr(ne(s),a),u=ne(o);for(let c=0;c<i.length;++c){const l=c*u;let h=1;for(let d=0;d<u;++d)h*=t[l+d];i[c]=h}return{outVals:i,outShape:s,outDtype:a}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jE(n,e,t){n.forEach((r,s)=>{if(r<0||r>=t){const o=Mu(s,e.length,lt(e)).join(",");throw new Error(`indices[${o}] = ${r} is not in [0, ${t})`)}})}function HE(n,e){for(let t=0;t<n.length;++t){const r=n[t],s=t===n.length-1?e:n[t+1].length;if(r.length===0)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>s)throw new Error("Ragged splits must not point past values");for(let o=1;o<r.length;++o)if(r[o-1]>r[o])throw new Error("Ragged splits must be sorted in ascending order")}}function KE(n,e,t,r){const s=[];let o=0;const a=e.length-1+t.length,i=new Array(a).fill(null).map(()=>[0]);HE(t,r);let u=1;for(let c=0;c<e.length-1;++c){u*=e[c];const l=e[c+1];for(let h=1;h<u+1;++h)i[c].push(h*l)}for(let c=0;c<n.length;++c){let l=n[c],h=n[c]+1;for(let d=0;d<t.length;++d){const p=t[d],f=d+e.length-1;if(f>=0){const x=i[f],y=x[x.length-1]-p[l];for(let b=l;b<h;++b)i[f].push(p[b+1]+y)}l=p[l],h=p[h]}h!==l&&(s.push([l,h]),o+=h-l)}return{outSplits:i,valueSlices:s,numValues:o}}function XE(n){const e=[];for(let t=0;t<n.length;++t){const r=n[t].length,s=ot("int32",r);e.push(s),n[t].forEach((o,a)=>s[a]=o)}return e}function kl(n,e){const t=n.slice(0,e);for(;t.length<e;)t.push(1);for(let r=e;r<n.length;r++)t[e-1]*=n[r];return t}function qE(n,e,t,r,s,o){const a=kl(e,2)[1],i=kl(o,2)[1];let u=0;for(const c of t)for(let l=c[0];l<c[1];++l){for(let h=0;h<r;++h)s[u*i+h]=n[l*a+h];++u}}function YE(n,e,t,r,s){const o=e.slice();o[0]=s;const a=ot(t,ne(o)),i=n.length,u=i===0?0:i/e[0];return qE(n,e,r,u,a,o),[a,o]}function QE(n,e,t,r,s,o,a,i){if(n.length===0)throw new Error("paramsNestedSplits must be non empty");if(e[0].length===0)throw new Error("Split tensors must not be scalars");const u=e[0][0]-1;if(jE(o,a,u),r.length===0)throw new Error("params.rank must be nonzero");const c=r[0],{outSplits:l,valueSlices:h,numValues:d}=KE(o,a,n,c),p=XE(l),f=YE(t,r,s,h,d);return[p,f[0],f[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rl=2147483647;function ZE(n,e,t,r,s,o,a){if(e.length>1)throw new Error("starts must be a scalar or vector");if(s.length>1)throw new Error("limits must be a scalar or vector");if(a.length>1)throw new Error("deltas must be a scalar or vector");const i=e.length===0,u=s.length===0,c=a.length===0,l=[];i||l.push(e[0]),u||l.push(s[0]),c||l.push(a[0]);for(let y=1;y<l.length;++y)if(l[y]!==l[y-1])throw new Error("starts, limits, and deltas must have the same shape");const h=l.length===0?1:l[0],d=ot("int32",h+1);d[0]=0;for(let y=0;y<h;++y){const b=i?n[0]:n[y],S=u?r[0]:r[y],I=c?o[0]:o[y];if(I===0)throw new Error("Requires delta != 0");let k;if(I>0&&S<b||I<0&&S>b)k=0;else if(k=Math.ceil(Math.abs((S-b)/I)),k>Rl)throw new Error(`Requires ((limit - start) / delta) <= ${Rl}`);d[y+1]=d[y]+k}const p=d[h],f=ot(t,p);let x=0;for(let y=0;y<h;++y){const b=d[y+1]-d[y];let S=i?n[0]:n[y];const I=c?o[0]:o[y];for(let k=0;k<b;++k)f[x++]=S,S+=I}return[d,f]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Jt=fn;class Wa{constructor(e,t,r,s,o,a,i,u,c,l){this.shape=e,this.shapeShape=t,this.values=r,this.valuesShape=s,this.valuesDType=o,this.defaultValue=a,this.defaultValueShape=i,this.rowPartitionValues=u,this.rowPartitionValuesShapes=c,this.rowPartitionTypes=Mm(l),this.raggedRank=Um(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===Jt.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===Jt.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case Jt.VALUE_ROWIDS:return Wa.getMaxWidthValueRowID(t);case Jt.ROW_SPLITS:return Wa.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${Jt[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(t===0||t===1)return 0;let r=0;for(let s=0;s<t-1;++s){const o=e[s+1]-e[s];o>r&&(r=o)}return r}static getMaxWidthValueRowID(e){const t=e.length;if(t===0)return 0;let r=0,s=e[0],o=0;for(let a=1;a<t;++a){const i=e[a];i!==s&&(s=i,o=Math.max(a-r,o),r=a)}return Math.max(t-r,o)}tensorShapeFromTensor(e,t,r=!0){if(t.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return Al(e,r)}calculateOutputSize(e){const t=this.valuesShape,r=this.defaultValueShape;Wm(r,t);const s=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=Vm(this.raggedRank,s,t);a[0]<0&&(a[0]=e);for(let i=1;i<=this.raggedRank;++i)a[i]<0&&(a[i]=this.getMaxWidth(i));return a}calculateFirstParentOutputIndex(e,t,r){const s=Math.min(e,r),o=[];let a=0;for(let i=0;i<s;++i,a+=t)o.push(a);for(let i=s;i<e;++i)o.push(-1);return _(o.length===e,()=>"Final length of result must be equal to firstDimension."),o}calculateOutputIndexRowSplit(e,t,r,s){const o=e.length,a=[];for(let i=0;i<o-1;++i){const u=e[i+1]-e[i];let c=Math.min(s,u),l=t[i];l===-1&&(c=0);for(let h=0;h<c;++h)a.push(l),l+=r;for(let h=0;h<u-c;++h)a.push(-1)}if(o>0&&a.length!==e[o-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,t,r,s){const o=e.length,a=[];if(o===0)return[];let i=0,u=e[0];if(u>=t.length)throw new Error(`Got currentValueRowId=${u}, which is not less than ${t.length}`);let c=t[u];a.push(c);for(let l=1;l<o;++l){const h=e[l];if(h===u)c>=0&&(++i,i<s?c+=r:c=-1);else{if(i=0,u=h,h>=t.length)throw new Error(`Got nextValueRowId=${h} which is not less than ${t.length}`);c=t[h]}a.push(c)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,t,r,s){const o=this.getRowPartitionTensor(e),a=this.getRowPartitionTypeByDimension(e);switch(a){case Jt.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(o,t,r,s);case Jt.ROW_SPLITS:if(o.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${o.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(o,t,r,s);default:throw new Error(`Unsupported partition type: ${Jt[a]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case Jt.FIRST_DIM_SIZE:return e[0];case Jt.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Jt.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Jt[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),r=this.calculateOutputSize(t),s=new Array(this.raggedRank+1);s[s.length-1]=1;for(let u=s.length-2;u>=0;--u)s[u]=s[u+1]*r[u+1];const o=Al(r,!1),a=ot(this.valuesDType,ne(o));if(s[0]*r[0]>0){let u=this.calculateFirstParentOutputIndex(t,s[0],r[0]);for(let c=1;c<=this.raggedRank;++c)u=this.calculateOutputIndex(c-1,u,s[c],r[c]);this.setOutput(this.raggedRank,u,a,o)}return[o,a]}setOutput(e,t,r,s){if(r.length===0)return;const o=this.values,a=r;let i=s.slice();i=i.slice(e+1);const u=ne(i),c=t.length;let l=this.defaultValue;if(l.length!==u&&l.length!==1){const f=this.defaultValueShape;ve(()=>{const x=Z(l,f);l=mo(x,i).dataSync()})}let h=0,d=0,p=0;for(let f=0;f<=c;++f){let x=f<c?t[f]:-1;if(x===p){++p;continue}if(d<p){const y=o.subarray(h*u),b=a.subarray(d*u),S=(p-d)*u;_l(b,y,S)}if(f>=c){const y=r.length;x=Math.floor(y/u)}if(x>p)if(this.defaultValue.length===1)a.subarray(p*u,x*u).fill(this.defaultValue[0]),p=x;else for(;x>p;){const y=a.slice(p*u);_l(y,l,u),++p}x<0?(h=f+1,d=p):(h=f,d=p,p=d+1)}}}function _l(n,e,t){for(let r=0;r<t;r++)n[r]=e[r]}function Al(n,e){const t=[];for(let r of n){if(r<0){if(!e)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}t.push(r)}return t}function JE(n,e,t,r,s,o,a,i,u,c){return new Wa(n,e,t,r,s,o,a,i,u,c).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e6(n,e,t,r){const s=n===e,o=n<e&&t<0,a=e<n&&t>1;if(s||o||a)return hr(0,r);const i=Math.abs(Math.ceil((e-n)/t)),u=hr(i,r);e<n&&t===1&&(t=-1),u[0]=n;for(let c=1;c<u.length;c++)u[c]=u[c-1]+t;return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t6=Kn(n=>1/Math.sqrt(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n6(n,e,t,r,s,o,a,i,u,c){const l=[r/s,s],h=n.values,d=e.values;if(r===0)return qe(t,e.dtype);const p=u instanceof Ts?u:qe(l,e.dtype);typeof u=="string"||typeof u=="number"?p.values.fill(u):typeof u=="boolean"&&p.values.fill(+u);for(let f=0;f<o;f++){const x=[];let y=0;for(let b=0;b<a;b++){const S=h[f*a+b];x.push(S),y+=S*i[b]}if(y<0||y>=r/s)throw new Error(`Invalid indices: ${x} does not index into ${t}`);for(let b=0;b<s;b++)c?p.values[y*s+b]+=d[f*s+b]:p.values[y*s+b]=e.rank===0?d[0]:d[f*s+b]}return p}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r6=Kn(n=>1/(1+Math.exp(-n)));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s6(n,e,t,r,s){const o=hc(r,e,t),a=ne(t),i=lt(r);if(o){const h=dc(e,i);return s==="string"?n.slice(h,h+a):n.subarray(h,h+a)}const u=s==="string"?Es(n):n,c=qe(r,s,u),l=qe(t,s);for(let h=0;h<l.size;++h){const d=l.indexToLoc(h),p=d.map((f,x)=>f+e[x]);l.set(c.get(...p),...d)}return s==="string"?w1(l.values):l.values}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o6(n,e,t,r,s,o,a){const i=e[0],u=o[0],c=new Array(u),l=new Array(i),h=e[1];if(u===0){if(i!==0)throw new Error(a1(i));const y=ot(t,0),b=ot(s,0);return[y,[0,h],b,c,l]}let d=!0,p=0;const f=new Array(u).fill(0);for(let y=0;y<i;++y){const b=n[y*h];if(b<0)throw new Error(i1(y,b));if(b>=u)throw new Error(u1(y,b,u));++f[b],d=d&&b>=p,p=b}let x=!0;for(let y=0;y<u;++y){const b=f[y]===0;c[y]=b,x=x&&!b,f[y]=Math.max(f[y],1),y>0&&(f[y]+=f[y-1])}if(x&&d){const y=n,b=r;for(let S=0;S<i;++S)l[S]=S;return[y,[i,h],b,c,l]}else{const y=f[u-1],b=ot(t,y*h),S=ot(s,y),I=new Array(u).fill(0);for(let k=0;k<i;++k){const P=n[k*h],W=I[P],H=(P===0?0:f[P-1])+W;I[P]++;for(let G=0;G<h;++G)b[H*h+G]=n[k*h+G];S[H]=r[k],l[k]=H}for(let k=0;k<u;++k)if(I[k]===0){const W=k===0?0:f[k-1];b[W*h+0]=k;for(let H=1;H<h;++H)b[W*h+H]=0;S[W]=a}return[b,[y,h],S,c,l]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a6(n,e,t,r,s){const o=ne(r),a=e[0],i=s.length,u=[];let c=1,l=-1;for(let y=0;y<i;++y){const b=s[y];if(b===-1){if(l!==-1)throw new Error(c1(l,y));l=y,u.push(1)}else{if(b<0)throw new Error(l1(y,b));c*=b,u.push(b)}}if(l!==-1){if(c<=0)throw new Error(h1());const y=Math.trunc(o/c);if(c*y!==o)throw new Error(d1(r,u));u[l]=y}if(ne(u)!==o)throw new Error(p1(r,u));const d=r.length,p=[];if(d>0){p[d-1]=1;for(let y=d-2;y>=0;--y)p[y]=p[y+1]*r[y+1]}const f=[];if(i>0){f[i-1]=1;for(let y=i-2;y>=0;--y)f[y]=f[y+1]*u[y+1]}const x=ot(t,a*i);for(let y=0;y<a;++y){let b=0;for(let S=0;S<d;++S)b+=n[y*d+S]*p[S];for(let S=0;S<i;++S)x[y*i+S]=Math.trunc(b/f[S]),b%=f[S]}return[x,[a,i],u]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i6(n,e,t,r,s,o=!1,a=0){const i=r.length,u=[e[0],n.length/e[0]],c=u[1],h=i>0?s[i-1]+1:0;if(h<0)throw new Error(vu());const d=e.slice();d[0]=h;const p=d.reduce((I,k)=>I*k,1),f=ot(t,p);if(i===0)return h>0&&f.fill(a),[f,d];if(h<=0)throw new Error(vu());let x=0,y=1,b=0,S=s[x];for(;;){let I=0;if(y<i){if(I=s[y],S===I){++y;continue}if(S>=I)throw new Error(f1())}if(S<0||S>=h)throw new Error(m1(S,h));S>b&&f.fill(a,b*c,S*c);for(let k=x;k<y;++k){const P=r[k];if(P<0||P>=u[0])throw new Error(g1(k,r[k],u[0]));for(let W=0;W<c;W++)f[S*c+W]+=n[P*c+W]}if(o)for(let k=0;k<c;k++)f[S*c+k]/=y-x;if(x=y,++y,b=S+1,S=I,y>i)break}return b<h&&f.fill(a,b*c,h*c),[f,d]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u6=Kn(n=>Math.sqrt(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c6=Et((n,e)=>{const t=n-e;return t*t});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l6=Kn((n,e)=>{const{pattern:t,replaceGlobal:r,rewrite:s}=e;return n.replace(new RegExp(t,r?"g":""),s)});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h6(n,e,t,r){const s=qe(n,e.dtype);for(let o=0;o<s.size;o++){const a=s.indexToLoc(o),i=new Array(a.length);for(let u=0;u<i.length;u++)i[u]=a[u]*t[u]+r[u];s.set(e.get(...i),...a)}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class d6{constructor(e,t,r,s,o,a){this.separator=Vr(e),this.nGramWidths=t,this.leftPad=Vr(r),this.rightPad=Vr(s),this.padWidth=o,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const r=this.getPadWidth(t);return Math.max(0,e+2*r-t+1)}createNGrams(e,t,r,s,o,a){for(let i=0;i<o;++i){const u=this.getPadWidth(a),c=Math.max(0,u-i),l=Math.max(0,u-(o-(i+1))),h=a-(c+l),d=t+(c>0?0:i-u);let p=0;p+=c*this.leftPad.length;for(let S=0;S<h;++S)p+=e[d+S].length;p+=l*this.rightPad.length;const f=c+l+h-1;p+=f*this.separator.length,r[s+i]=new Uint8Array(p);const x=r[s+i];let y=0;const b=S=>S.forEach(I=>x[y++]=I);for(let S=0;S<c;++S)b(this.leftPad),b(this.separator);for(let S=0;S<h-1;++S)b(e[d+S]),b(this.separator);if(h>0){b(e[d+h-1]);for(let S=0;S<l;++S)b(this.separator),b(this.rightPad)}else{for(let S=0;S<l-1;++S)b(this.rightPad),b(this.separator);b(this.rightPad)}}}compute(e,t){const r=e.length,s=t.length;if(s>0){let u=t[0];if(u!==0)throw new Error(`First split value must be 0, got ${u}`);for(let c=1;c<s;++c){let l=t[c]>=u;if(l=l&&t[c]<=r,!l)throw new Error(`Invalid split value ${t[c]}, must be in [${u}, ${r}]`);u=t[c]}if(u!==r)throw new Error(`Last split value must be data size. Expected ${r}, got ${u}`)}const o=s-1,a=ot("int32",s);if(r===0||s===0){const u=new Array(r);for(let c=0;c<=o;++c)a[c]=0;return[u,a]}a[0]=0;for(let u=1;u<=o;++u){const c=t[u]-t[u-1];let l=0;this.nGramWidths.forEach(h=>{l+=this.getNumNGrams(c,h)}),this.preserveShort&&c>0&&l===0&&(l=1),a[u]=a[u-1]+l}const i=new Array(a[o]);for(let u=0;u<o;++u){const c=t[u];let l=a[u];if(this.nGramWidths.forEach(h=>{const d=t[u+1]-t[u],p=this.getNumNGrams(d,h);this.createNGrams(e,c,i,l,p,h),l+=p}),this.preserveShort&&l===a[u]){const h=t[u+1]-t[u];if(h===0)continue;const d=h+2*this.padWidth;this.createNGrams(e,c,i,l,1,d)}}return[i,a]}}function p6(n,e,t,r,s,o,a,i){return new d6(t,r,s,o,a,i).compute(n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f6(n,e,t,r){if(!n.length)return;if(e.length===0){for(let o=0;o<n.length;++o)r.push(n.subarray(o,o+1));return}if(e.length===1){const o=e[0];let a=n.indexOf(o);for(;a!==-1;){const i=n.subarray(0,a);(!t||i.length!==0)&&r.push(i),n=n.subarray(a+1),a=n.indexOf(o)}(!t||n.length!==0)&&r.push(n);return}let s=0;for(let o=0;o<n.length+1;o++)if(o===n.length||e.indexOf(n[o])!==-1){const a=n.subarray(s,o);(!t||a.length!==0)&&r.push(a),s=o+1}}function m6(n,e,t){const r=n.length,s=[];let o=0,a=0;const i=new Array(r);for(let d=0;d<r;++d){const p=s.length;f6(n[d],e,t,s);const f=s.length-p;i[d]=f,o+=f,a=Math.max(a,f)}const u=ot("int32",o*2),c=new Array(o),l=[r,a];let h=0;for(let d=0;d<r;++d)for(let p=0;p<i[d];++p)u[h*2]=d,u[h*2+1]=p,c[h]=s[h],++h;return[u,c,l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g6(n,e){const t=ot("int32",n.length);for(let r=0;r<n.length;++r)t[r]=f2(n[r]).modulo(e).getLowBitsUnsigned();return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y6=Et((n,e)=>n-e);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x6(n,e){const t=new Array(n.rank);for(let s=0;s<t.length;s++)t[s]=n.shape[s]*e[s];const r=qe(t,n.dtype);for(let s=0;s<r.values.length;++s){const o=r.indexToLoc(s),a=new Array(n.rank);for(let u=0;u<a.length;u++)a[u]=o[u]%n.shape[u];const i=n.locToIndex(a);r.values[s]=n.values[i]}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const po=(n,e)=>{const t=e.value-n.value;return t===0?n.index-e.index:t};function G1(n,e,t=0,r=n.length-1){for(;r>t;){if(r-t>600){const i=r-t+1,u=e-t+1,c=Math.log(i),l=.5*Math.exp(2*c/3),h=.5*Math.sqrt(c*l*(i-l)/i)*Math.sign(u-i/2),d=Math.max(t,Math.floor(e-u*l/i+h)),p=Math.min(r,Math.floor(e+(i-u)*l/i+h));G1(n,e,d,p)}const s=n[e];let o=t,a=r;for(io(n,t,e),po(n[r],s)>0&&io(n,t,r);o<a;){for(io(n,o,a),o++,a--;po(n[o],s)<0;)o=o+1;for(;po(n[a],s)>0;)a=a-1}po(n[t],s)===0?io(n,t,a):(a=a+1,io(n,a,r)),a<=e&&(t=a+1),e<=a&&(r=a-1)}}function b6(n,e,t,r,s){const o=e[e.length-1],[a,i]=[n.length/o,o],u=lr(t,a*r),c=lr("int32",a*r);for(let h=0;h<a;h++){const d=h*i,p=n.subarray(d,d+i);let f=new Array(p.length);p.forEach((S,I)=>f[I]={value:S,index:I}),r<f.length&&(G1(f,r),f=f.slice(0,r)),s&&f.sort(po);const x=h*r,y=u.subarray(x,x+r),b=c.subarray(x,x+r);for(let S=0;S<r;S++)y[S]=f[S].value,b[S]=f[S].index}const l=e.slice();return l[l.length-1]=r,[qe(l,t,u),qe(l,"int32",c)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w6(n,e,t,r){const s=at(e,t)[0],o=[1,t[0],1];for(let f=0;f<s;f++)o[0]*=t[f];o[1]=t[s];for(let f=s+1;f<t.length;f++)o[2]*=t[f];const a=new Map,i=new Int32Array(t[s]),u=new Ts(o,r,n),c=[],l=o[0]===1&&o[2]===1;for(let f=0;f<t[s];f++){let x;if(l)x=n[f].toString();else{const b=[];for(let S=0;S<o[0];S++)for(let I=0;I<o[2];I++)b.push(u.get(S,f,I));x=b.join(",")}const y=a.get(x);if(y!=null)i[f]=y;else{const b=a.size;a.set(x,b),i[f]=b,c.push(f)}}const h=o.slice();h[1]=a.size;const d=new Ts(h,r);c.forEach((f,x)=>{for(let y=0;y<o[0];y++)for(let b=0;b<o[2];b++)d.set(u.get(y,f,b),y,x,b)});const p=t.slice();return p[s]=h[1],{outputValues:d.values,outputShape:p,indices:i}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v6=Object.freeze(Object.defineProperty({__proto__:null,addImpl:bE,bincountImpl:wE,bincountReduceImpl:vE,bitwiseAndImpl:$E,castImpl:xE,ceilImpl:CE,concatImpl:SE,equalImpl:TE,expImpl:NE,expm1Impl:EE,floorDivImpl:kE,floorImpl:IE,gatherNdImpl:RE,gatherV2Impl:_E,greaterEqualImpl:OE,greaterImpl:AE,lessEqualImpl:FE,lessImpl:DE,linSpaceImpl:PE,logImpl:LE,maxImpl:BE,maximumImpl:VE,minimumImpl:ME,multiplyImpl:z1,negImpl:UE,notEqualImpl:WE,prodImpl:GE,raggedGatherImpl:QE,raggedRangeImpl:ZE,raggedTensorToTensorImpl:JE,rangeImpl:e6,rsqrtImpl:t6,scatterImpl:n6,sigmoidImpl:r6,simpleAbsImpl:yE,sliceImpl:s6,sparseFillEmptyRowsImpl:o6,sparseReshapeImpl:a6,sparseSegmentReductionImpl:i6,sqrtImpl:u6,squaredDifferenceImpl:c6,staticRegexReplaceImpl:l6,stridedSliceImpl:h6,stringNGramsImpl:p6,stringSplitImpl:m6,stringToHashBucketFastImpl:g6,subImpl:y6,tileImpl:x6,topKImpl:b6,transposeImpl:zE,uniqueImpl:w6},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:$6,bincountImpl:j1,bincountReduceImpl:C6,bitwiseAndImpl:S6,castImpl:T6,ceilImpl:N6,concatImpl:E6,equalImpl:I6,expImpl:k6,expm1Impl:R6,floorImpl:_6,gatherNdImpl:A6,gatherV2Impl:O6,greaterImpl:D6,greaterEqualImpl:F6,lessImpl:P6,lessEqualImpl:L6,linSpaceImpl:B6,logImpl:V6,maxImpl:M6,maximumImpl:U6,minimumImpl:W6,multiplyImpl:z6,negImpl:G6,notEqualImpl:j6,prodImpl:H6,raggedGatherImpl:K6,raggedRangeImpl:X6,raggedTensorToTensorImpl:q6,rangeImpl:Y6,rsqrtImpl:Q6,scatterImpl:Z6,sigmoidImpl:J6,simpleAbsImpl:H1,sliceImpl:eI,sparseFillEmptyRowsImpl:tI,sparseReshapeImpl:nI,sparseSegmentReductionImpl:K1,sqrtImpl:rI,staticRegexReplaceImpl:sI,stridedSliceImpl:oI,stringNGramsImpl:aI,stringSplitImpl:iI,stringToHashBucketFastImpl:uI,subImpl:cI,tileImpl:lI,topKImpl:hI,transposeImpl:$c,uniqueImpl:dI}=v6;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X1(n,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${n}.${t}`)}function wt(n,e){return e===1?[n]:X1(n,e)}function pI(n,e){if(n===1)return"rc";let t="";for(let r=0;r<n;r++)t+=e[r],r<n-1&&(t+=",");return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fI{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=yt(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const t=wt("rc",this.rank),r=Be(this.rank),s=this.getOutOfBoundsCondition(t),o=this.getSetup(t),a=this.getOutput(t);this.userCode=`
        void main() {
          ${r} rc = getOutputCoords();

          if(${s}) {
            setOutput(vec4(0));
          } else {
            ${o}

            setOutput(vec4(${a}));
          }
        }
      `}}getSourceCoordsArr(e){const t=[];for(let r=0;r<=1;r++)for(let s=0;s<=1;s++){let o=`${r===0?"r":"rp1"}, ${s===0?"c":"cp1"}`;for(let a=2;a<this.rank;a++)o=`${e[e.length-1-a]},`+o;t.push(o)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let r=this.rank-2;r<this.rank;r++)t+=`${e[r]} >= ${this.enableShapeUniforms?`outShape[${r}]`:this.outputShape[r]}`,r<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";const t=e.slice(-2),r=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],s=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${r};
      bool rEdge = rp1 >= ${s};
    `}getOutput(e){const t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class q1{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=yt(this.outputShape.length);let r="";for(let s=0;s<4;s++){let o="thisRC = rc;";s%2===1&&(o+="thisRC.z += 1;"),s>1&&(o+="thisRC.y += 1;"),r+=`
        ${o}
        ${s>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${s}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${s>0?"}":""}
      `}this.userCode=`
      ${mI(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?wc():bc(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${r}

        setOutput(result);
      }
    `}}function mI(n,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?uN(["r","c","d"],"inputShape"):ns(["r","c","d"],n)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gI{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,r){const s=Dl(t,r),o=Fl(e,s,r);o in this.freeTextures||(this.freeTextures[o]=[]),o in this.usedTextures||(this.usedTextures[o]=[]);const a=Ol(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,r);if(this.freeTextures[o].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const u=this.freeTextures[o].pop();return this.usedTextures[o].push(u),u}let i;return s===ct.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):s===ct.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):s===ct.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):s===ct.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):s===ct.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[o].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,r,s){if(this.freeTextures==null)return;const o=Dl(r,s),a=Fl(t,o,s);a in this.freeTextures||(this.freeTextures[a]=[]);const i=Ol(t,o,this.gpgpu.gl,this.gpgpu.textureConfig,s),u=j().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");u!==-1&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const c=this.usedTextures[a],l=c&&c.indexOf(e);if(l==null||l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c[l]=c[c.length-1],c.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function yI(n,e){const t=n;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===n.RGBA)return 16;if(e===t.RGBA16F)return 8;if(e===t.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function Ol(n,e,t,r,s){const o=xI(e,r);let a;if(s){const[u,c]=Fs(n[0],n[1]);a=u*c}else{const[u,c]=Fo(n[0],n[1]);a=u*c}const i=yI(t,o);return a*i}function xI(n,e){switch(n){case ct.PACKED_2X2_FLOAT32:return U1(e);case ct.PACKED_2X2_FLOAT16:return W1(e);case ct.UNPACKED_FLOAT32:return B1(e);case ct.UNPACKED_FLOAT16:return V1(e);case ct.PACKED_4X1_UNSIGNED_BYTE:return M1(e);default:throw new Error(`Unknown physical texture type ${n}`)}}function bI(n){return j().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?ct.PACKED_2X2_FLOAT32:ct.UNPACKED_FLOAT32:n?ct.PACKED_2X2_FLOAT16:ct.UNPACKED_FLOAT16}function Dl(n,e){if(n===Wt.UPLOAD)return ct.PACKED_2X2_FLOAT32;if(n===Wt.RENDER||n==null)return bI(e);if(n===Wt.DOWNLOAD||n===Wt.PIXELS)return ct.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function Fl(n,e,t){return`${n[0]}_${n[1]}_${e}_${t}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nn{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=yt(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const un="if (isnan(x)) return x;",wI="return x;",Pl="return abs(x);",vI="return (x >= 0.0) ? x : (exp(x) - 1.0);",$I=un+`
  return (x < 0.0) ? 0.0 : x;
`,CI=un+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,rr="return x;",SI="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TI="return x;",NI=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,EI=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,II=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,kI="return 1.0 / (1.0 + exp(-1.0 * x));";class or{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=yt(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RI{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=yt(this.outputShape.length);const t=e.length,r=wt("rc",t),s=Be(t),o=pI(t,r),a=r.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${s} rc = getOutputCoords();
        vec4 packedInput = getA(${o});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _I=um,AI=1e-7,OI=1e-4,pa={};function DI(n){return n in pa||(pa[n]={}),pa[n]}const FI=j().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),PI=600;function LI(){return j().global.screen==null?1024:j().global.screen.height*j().global.screen.width*window.devicePixelRatio*PI/1024/1024}class ui extends nh{nextDataId(){return ui.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!j().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof Hi)t=e;else{const r=xn(j().getNumber("WEBGL_VERSION"),e);t=new Hi(r)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const r=xn(j().getNumber("WEBGL_VERSION"));t=new Hi(r),this.binaryCache=DI(j().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new gI(this.gpgpu),this.numMBBeforeWarning=LI(),this.texData=new Og(this,tr())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,r,s,o,a){const i=this.makeTensorInfo(t,r),u=this.texData.get(i.dataId);u.isPacked=!1,u.texture={texture:e,texShape:[s,o]},u.texShape=[s,o];const c=ha(t),l=new Il(c,!1,a),h=this.runWebGLProgram(l,[i],r,[[s,o]]);return h.shape=t,u.texture=null,this.disposeIntermediateTensorInfo(i),h.dataId}write(e,t,r){if((j().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||j().getBool("DEBUG"))&&this.checkNumericalProblems(e),r==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const s={id:this.nextDataId()};return this.texData.set(s,{shape:t,dtype:r,values:e,usage:Wt.UPLOAD,refCount:1}),s}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){const t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--}}move(e,t,r,s,o){if(j().getBool("DEBUG")&&this.checkNumericalProblems(t),s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:r,dtype:s,values:t,usage:Wt.UPLOAD,refCount:o})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:r,dtype:s,complexTensorInfos:o,slice:a,shape:i,isPacked:u}=t;if(a!=null){let d;u?d=new or(i,rr):d=new Nn(i,rr);const p=this.runWebGLProgram(d,[{dataId:e,shape:i,dtype:s}],s),f=this.readSync(p.dataId);return this.disposeIntermediateTensorInfo(p),f}if(r!=null)return this.convertAndCacheOnCPU(e);if(s==="string")return r;const c=this.activeTimers!=null;let l;c&&(l=dn());let h;if(s==="complex64"){const d=this.readSync(o.real.dataId),p=this.readSync(o.imag.dataId);h=wu(d,p)}else h=this.getValuesFromTexture(e);return c&&(this.downloadWaitMs+=dn()-l),this.convertAndCacheOnCPU(e,h)}async read(e){if(this.pendingRead.has(e)){const f=this.pendingRead.get(e);return new Promise(x=>f.push(x))}const t=this.texData.get(e),{values:r,shape:s,slice:o,dtype:a,complexTensorInfos:i,isPacked:u}=t;if(o!=null){let f;u?f=new or(s,rr):f=new Nn(s,rr);const x=this.runWebGLProgram(f,[{dataId:e,shape:s,dtype:a}],a),y=this.read(x.dataId);return this.disposeIntermediateTensorInfo(x),y}if(r!=null)return this.convertAndCacheOnCPU(e);if(j().getBool("DEBUG")&&!j().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&j().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c=null,l;if(a!=="complex64"&&j().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const f=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(f.texture.texture,...ua(s))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let h;if(a==="complex64"){const f=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),x=f[0],y=f[1];h=wu(x,y)}else if(c==null)h=this.getValuesFromTexture(e);else{const f=ne(s);h=this.gpgpu.downloadFloat32MatrixFromBuffer(c,f)}if(l!=null&&this.disposeIntermediateTensorInfo(l),c!=null){const f=this.gpgpu.gl;ce(f,()=>f.deleteBuffer(c))}const d=this.convertAndCacheOnCPU(e,h),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach(f=>f(d)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&tr().removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e,t={}){const r=this.texData.get(e),{values:s,shape:o,slice:a,dtype:i,isPacked:u,texture:c}=r;if(i==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(a!=null){let p;u?p=new or(o,rr):p=new Nn(o,rr);const f=this.runWebGLProgram(p,[{dataId:e,shape:o,dtype:i}],i),x=this.readToGPU(f,t);return this.disposeIntermediateTensorInfo(f),x}if(c==null)throw s!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(e,t.customTexShape),h=tr().makeTensorFromTensorInfo(l),d=this.texData.get(l.dataId);return Object.assign({tensorRef:h},d.texture)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const r=t.map(s=>Ss(s));return qe(e.shape,e.dtype,r)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return qe(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){const r=e[t];if(!FT(r))throw j().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${r} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${r} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:t,dtype:r,isPacked:s}=this.texData.get(e),o=ne(t);if(j().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const d=this.decode(e),p=this.texData.get(d.dataId),f=this.gpgpu.downloadMatrixFromPackedTexture(p.texture.texture,...ua(t)).subarray(0,o);return this.disposeIntermediateTensorInfo(d),f}const a=j().getBool("WEBGL_PACK")&&s===!0,i=a?ha(t):t,u=a?new QN(i):new YN(i),c=this.runWebGLProgram(u,[{shape:i,dtype:r,dataId:e}],"float32"),l=this.texData.get(c.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,o);return this.disposeIntermediateTensorInfo(c),h}timerAvailable(){return j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,r=[];let s=!1;this.programTimersStack==null?(this.programTimersStack=r,s=!0):this.activeTimers.push(r),this.activeTimers=r,e();const o=Wr(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),a=Wr(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=t,s&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const u=await Promise.all(o);i.kernelMs=Dg(u),i.getExtraProfileInfo=()=>u.map((c,l)=>({name:a[l],ms:c})).map(c=>`${c.name}: ${c.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:dn(),endMs:null}}endTimer(e){return j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=dn(),e)}async getQueryTime(e){if(j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:r}=this.texData.get(e);return r!=null&&(this.disposeData(r.real.dataId,t),this.disposeData(r.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:r,texShape:s,usage:o,isPacked:a,slice:i}=this.texData.get(e),u=i&&i.origDataId||e,c=this.dataRefCount.get(u);c>1?this.dataRefCount.set(u,c-1):(this.dataRefCount.delete(u),t!=null&&(this.numBytesInGPU-=this.computeBytes(s,r),this.textureManager.releaseTexture(t,s,o,a)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=FI){return j().getBool("WEBGL_CPU_FORWARD")&&e.every(r=>this.texData.get(r.dataId).texture==null&&ne(r.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){mn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return _I(e.shape,t)}packedUnaryOp(e,t,r){const s=new or(e.shape,t),o=this.compileAndRun(s,[e],r);return tr().makeTensorFromTensorInfo(o)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){const s=H1(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,s)}if(j().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Pl,e.dtype);const t=new Nn(e.shape,Pl),r=this.compileAndRun(t,[e]);return tr().makeTensorFromTensorInfo(r)}makeTensorInfo(e,t,r){let s;if(t==="string"&&r!=null&&r.length>0&&Ha(r[0])){const o=r.map(a=>Vr(a));s=this.write(o,e,t)}else s=this.write(r,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,r){return tr().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,r),this)}unpackTensor(e){const t=new RI(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new fI(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const r=[Is(e.shape),...ks(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},o=[Is(t),...ks(t)],a=new q1(o,r),i=!0,u=[r],c=this.runWebGLProgram(a,[s],e.dtype,u,i);return{dataId:c.dataId,shape:t,dtype:c.dtype}}decode(e,t){const r=this.texData.get(e),{isPacked:s,shape:o,dtype:a}=r;if(t!=null){const d=ne(o),p=t[0]*t[1]*4;_(d<=p,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const i=ha(o);let u;s?u=new qN(i):u=new XN(i);const c=!0,l=[t??ua(i)],h=this.runWebGLProgram(u,[{shape:i,dtype:a,dataId:e}],a,l,c,t);return{dtype:a,shape:o,dataId:h.dataId}}runWebGLProgram(e,t,r,s,o=!1,a){const i=this.makeTensorInfo(e.outputShape,r),u=this.texData.get(i.dataId);if(e.packedOutput&&(u.isPacked=!0),e.outPackingScheme===To.DENSE){const b=a??ua(e.outputShape);u.texShape=b.map(S=>S*2)}if(e.outTexUsage!=null&&(u.usage=e.outTexUsage),ne(i.shape)===0)return u.values=lr(i.dtype,0),i;const c=[],l=t.map(b=>{if(b.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let S=this.texData.get(b.dataId);if(S.texture==null){if(!e.packedInputs&&ne(b.shape)<=j().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:b.shape,texData:null,isUniform:!0,uniformValues:S.values};e.packedInputs&&(S.isPacked=!0,S.shape=b.shape)}if(this.uploadToGPU(b.dataId),!!S.isPacked!=!!e.packedInputs)b=S.isPacked?this.unpackTensor(b):this.packTensor(b),c.push(b),S=this.texData.get(b.dataId);else if(S.isPacked&&!Ua(S.shape,b.shape)){const I=b,k=b.shape;b.shape=S.shape,b=this.packedReshape(b,k),c.push(b),S=this.texData.get(b.dataId),I.shape=k}return{shape:b.shape,texData:S,isUniform:!1}});this.uploadToGPU(i.dataId);const h={shape:i.shape,texData:u,isUniform:!1},d=KN(e,l,h),p=this.getAndSaveBinary(d,()=>jN(this.gpgpu,e,l,h)),f=this.activeTimers!=null;let x;f&&(x=this.startTimer()),j().get("ENGINE_COMPILE_ONLY")||HN(this.gpgpu,p,l,h,s),c.forEach(b=>this.disposeIntermediateTensorInfo(b)),f&&(x=this.endTimer(x),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(x)}));const y=j().getNumber("WEBGL_FLUSH_THRESHOLD");if(y>0){const b=dn();b-this.lastGlFlushTime>y&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=b)}if(!j().getBool("WEBGL_LAZILY_UNPACK")&&u.isPacked&&o===!1){const b=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),b}return i}compileAndRun(e,t,r,s,o=!1){return r=r||t[0].dtype,this.runWebGLProgram(e,t,r,s,o)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(j().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=ve(()=>{if(!j().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=j().getBool("DEBUG");j().set("DEBUG",!1);const t=this.abs(Re(1e-8)).dataSync()[0];if(j().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?AI:OI}uploadToGPU(e){const t=this.texData.get(e),{shape:r,dtype:s,values:o,texture:a,usage:i,isPacked:u}=t;if(a!=null)return;const c=this.activeTimers!=null;let l;c&&(l=dn());let h=t.texShape;if(h==null&&(h=JT(r,u),t.texShape=h),o!=null){const d=ha(r);let p,f=h[1],x=h[0];const y=o instanceof Uint8Array||o instanceof Uint8ClampedArray;(u||!y)&&([f,x]=Fs(h[0],h[1])),u?p=new JN(d,y):p=new Il(d,y);const b=y?[x,f]:h,S=this.makeTensorInfo(b,s),I=this.texData.get(S.dataId);y?I.usage=Wt.PIXELS:I.usage=Wt.UPLOAD,I.texShape=b,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(S.dataId),f,x,o);const k=[[x,f]],W=this.runWebGLProgram(p,[S],s,k,!0),H=this.texData.get(W.dataId);t.texShape=H.texShape,t.isPacked=H.isPacked,t.usage=H.usage,j().get("ENGINE_COMPILE_ONLY")?this.disposeData(W.dataId):(t.texture=H.texture,t.values=null,this.texData.delete(W.dataId)),this.disposeIntermediateTensorInfo(S),c&&(this.uploadWaitMs+=dn()-l)}else{const d=this.acquireTexture(h,i,s,u);t.texture=d}}convertAndCacheOnCPU(e,t){const r=this.texData.get(e),{dtype:s}=r;return t!=null&&(r.values=BI(t,s)),r.values}acquireTexture(e,t,r,s){if(this.numBytesInGPU+=this.computeBytes(e,r),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const o=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${o} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,s)}computeBytes(e,t){return e[0]*e[1]*Ia(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(const[,t]of Object.entries(this.binaryCache)){const r=new Promise(s=>{try{this.checkCompletion_(t),s(!0)}catch(o){throw o}});e.push(r)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await J$(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(A1(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:r,infLoc:s,nanLoc:o,outShapeLocation:a,outShapeStridesLocation:i,outTexShapeLocation:u}=L1(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=r,e.infLoc=s,e.nanLoc=o,e.outShapeLocation=a,e.outShapeStridesLocation=i,e.outTexShapeLocation=u}}createTensorFromGPUData(e,t,r){e.channels=e.channels||"RGBA";const{texture:s,height:o,width:a,channels:i}=e,u=tr().backend;if(!u.gpgpu.gl.isTexture(s))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const c=u.writeTexture(s,t,r,o,a,i);return tr().makeTensorFromDataId(c,t,r,u)}}ui.nextDataId=0;function BI(n,e){if(e==="float32"||e==="complex64")return n;if(e==="int32"||e==="bool"){const t=e==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let r=0;r<t.length;++r)t[r]=Math.round(n[r]);return t}else throw new Error(`Unknown dtype ${e}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */hf()&&D2("webgl",()=>new ui,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cc=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class Zr{constructor(e,t,r){this.variableNames=["A","B"],this.outputShape=De(t,r),this.enableShapeUniforms=yt(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ss=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class Ms{constructor(e,t,r,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=De(t,r);const o=this.outputShape.length;this.enableShapeUniforms=yt(o);let a="";if(s)if(o===0||ne(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${Be(o)} coords = getOutputCoords();
        `,o===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const u=wt("coords",o);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${u[o-2]} + 1) >= outShape[${o} - 2];
            bool nextColOutOfBounds =
              (${u[o-1]} + 1) >= outShape[${o} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${u[o-2]} + 1) >= ${this.outputShape[o-2]};
            bool nextColOutOfBounds =
              (${u[o-1]} + 1) >= ${this.outputShape[o-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ft(n){const{inputs:e,backend:t}=n,{x:r}=e;return t.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const VI={kernelName:Gu,backendName:"webgl",kernelFunc:Ft};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xr(n){const{inputs:e,backend:t}=n,{real:r,imag:s}=e,o=t.makeTensorInfo(r.shape,"complex64"),a=t.texData.get(o.dataId),i=Ft({inputs:{x:r},backend:t}),u=Ft({inputs:{x:s},backend:t});return a.complexTensorInfos={real:i,imag:u},o}const MI={kernelName:kh,backendName:"webgl",kernelFunc:xr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y1="return (a < 0.) ? b * a : a;",Q1=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function UI(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{alpha:o}=r,a=t.makeTensorInfo([],"float32",_s(o,"float32")),i=j().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ms(Q1,s.shape,a.shape):new Zr(Y1,s.shape,a.shape),u=t.runWebGLProgram(i,[s,a],"float32");return t.disposeIntermediateTensorInfo(a),u}const WI={kernelName:xd,backendName:"webgl",kernelFunc:UI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z1="return (a < 0.) ? b * a : a;",J1=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function zI(n){const{inputs:e,backend:t}=n,{x:r,alpha:s}=e,o=j().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ms(J1,r.shape,s.shape):new Zr(Z1,r.shape,s.shape);return t.runWebGLProgram(o,[r,s],"float32")}const GI={kernelName:Yd,backendName:"webgl",kernelFunc:zI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Us="if (isnan(x)) return x;";function Oe({opSnippet:n,packedOpSnippet:e,cpuKernelImpl:t,dtype:r}){return({inputs:s,backend:o})=>{const{x:a}=s,i=o,u=r||a.dtype;if(i.shouldExecuteOnCPU([a])&&t!=null){const h=i.texData.get(a.dataId),d=t(h.values,u);return i.makeTensorInfo(a.shape,u,d)}const c=j().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null;let l;return c?l=new or(a.shape,e):l=new Nn(a.shape,n),i.runWebGLProgram(l,[a],u)}}function pt({opSnippet:n,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:o}){return({inputs:a,backend:i})=>{const{a:u,b:c}=a,l=i;if(r&&u.dtype==="complex64"){const f=l.texData.get(u.dataId),x=l.texData.get(c.dataId),[y,b]=[[f.complexTensorInfos.real,x.complexTensorInfos.real],[f.complexTensorInfos.imag,x.complexTensorInfos.imag]].map(I=>{const[k,P]=I,W={dataId:k.dataId,dtype:k.dtype,shape:u.shape},H={dataId:P.dataId,dtype:P.dtype,shape:c.shape},G=new Zr(n,u.shape,c.shape);return l.runWebGLProgram(G,[W,H],kn(k.dtype,P.dtype))}),S=xr({inputs:{real:y,imag:b},backend:l});return l.disposeIntermediateTensorInfo(y),l.disposeIntermediateTensorInfo(b),S}const h=o||kn(u.dtype,c.dtype);if((u.dtype==="string"||c.dtype==="string"||l.shouldExecuteOnCPU([u,c]))&&s!=null){const f=l.texData.get(u.dataId).values,x=l.texData.get(c.dataId).values,y=u.dtype==="string"?Es(f):f,b=u.dtype==="string"?Es(x):x,[S,I]=s(u.shape,c.shape,y,b,h),k=l.makeTensorInfo(I,h),P=l.texData.get(k.dataId);return P.values=S,k}const d=j().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null;let p;return d?p=new Ms(e,u.shape,c.shape,t):p=new Zr(n,u.shape,c.shape),l.runWebGLProgram(p,[u,c],h)}}function No(n,e=!1){if(n==="linear")return e?TI:wI;if(n==="relu")return e?EI:$I;if(n==="elu")return e?NI:vI;if(n==="relu6")return e?II:CI;if(n==="prelu")return e?J1:Z1;if(n==="leakyrelu")return e?Q1:Y1;if(n==="sigmoid")return e?kI:SI;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eg{constructor(e,t,r,s=!1,o=!1,a=!1,i=null,u=!1,c=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r,this.enableShapeUniforms=yt(this.outputShape.length);const l=s?e[1]:e[2],h=Math.ceil(l/2),d=s?"i * 2, rc.y":"rc.y, i * 2",p=o?"rc.z, i * 2":"i * 2, rc.z",f=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],x=o?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let y="",b="";i&&(u?y=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:c?y=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:y=`vec4 activation(vec4 x) {
          ${i}
        }`,b="result = activation(result);");const S=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let I="rc.x",k="rc.x";e[0]<t[0]?I=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(k=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${y}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${h}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${I};
        int batchB = ${k};
        for (int i = 0; i < ${h}; i++) {
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${p});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${f[0]} * ${x[0]});
          result += (${f[1]} * ${x[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${S}

        ${b}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ll={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class Bl{constructor(e,t,r){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=De(t,r),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vl="return a * b;";function Sc(n){const{inputs:e,backend:t}=n,{a:r,b:s}=e,o=kn(r.dtype,s.dtype);if(r.dtype==="complex64"){const i=t.texData.get(r.dataId),u=t.texData.get(s.dataId),c=new Bl(Ll.REAL,r.shape,s.shape),l=new Bl(Ll.IMAG,r.shape,s.shape),h=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:r.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:u.complexTensorInfos.real.dataId,dtype:u.complexTensorInfos.real.dtype,shape:s.shape},{dataId:u.complexTensorInfos.imag.dataId,dtype:u.complexTensorInfos.imag.dtype,shape:s.shape}],d=t.runWebGLProgram(c,h,"float32"),p=t.runWebGLProgram(l,h,"float32"),f=xr({inputs:{real:d,imag:p},backend:t});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),f}if(t.shouldExecuteOnCPU([r,s])){const i=t.texData.get(r.dataId),u=t.texData.get(s.dataId),[c,l]=z6(r.shape,s.shape,i.values,u.values,o),h=t.makeTensorInfo(l,o),d=t.texData.get(h.dataId);return d.values=c,h}let a;return j().getBool("WEBGL_PACK_BINARY_OPERATIONS")?a=new Ms(Vl,r.shape,s.shape):a=new Zr(Vl,r.shape,s.shape),t.runWebGLProgram(a,[r,s],o)}const jI={kernelName:Vd,backendName:"webgl",kernelFunc:Sc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HI(n,e,t){const r=[Is(n.shape),...ks(n.shape)],s={dtype:n.dtype,shape:r,dataId:n.dataId},o=[Is(e),...ks(e)],a=new q1(o,r),i=!0,u=[r],c=t.runWebGLProgram(a,[s],n.dtype,u,i);return{dataId:c.dataId,shape:e,dtype:c.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ie(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{shape:o}=r,a=t,i=ne(s.shape),u=Pg(o,i),c=ne(u);_(i===c,()=>`The new shape (${u}) has ${c} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);const l=a.texData.get(s.dataId);return l.isPacked&&!Ua(s.shape,u)&&!(l.texture!==null&&Ua(l.shape,u))?HI(s,u,a):(a.incRef(s.dataId),{dataId:s.dataId,shape:u,dtype:s.dtype})}const KI={kernelName:op,backendName:"webgl",kernelFunc:ie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ml{constructor(e,t){this.variableNames=["x"];const{windowSize:r,batchSize:s,inSize:o,outSize:a}=e;this.outputShape=[s,a];const i=Math.floor(r/4)*4,u=r%4;let c="sumValue += dot(values, ones);";if(t!=null){const h=1/t;c=`sumValue += dot(values * ${Cs(h)?h.toPrecision(2):h}, ones);`}let l="";o%r>0&&(l=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${l}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${c}
        }

        int inIdx = inOffset + ${i};
        if (${u===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${c}
        } else if (${u===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${c}
        } else if (${u===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${c}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class XI{constructor(e,t){this.variableNames=["x"];const{windowSize:r,batchSize:s,inSize:o,outSize:a}=e;this.outputShape=[s,a];let i="0.0",u="";t==="prod"?i="1.0":t==="min"?(i="1.0 / 1e-20",u="min"):t==="max"&&(i="-1.0 / 1e-20",u="max");let c=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?c="sumValue":t==="prod"?c="prodValue":t==="all"?c="allValue":t==="any"&&(c="anyValue");const l=Math.floor(r/4)*4,h=r%4;let d=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${u}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${u}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,p="vec4";t==="all"?(i="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,p="bvec4"):t==="any"&&(i="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,p="bvec4");let f="";o%r>0&&(f=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${l};
        if (${h===1}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===2}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===3}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qI(n){const e=[];for(;e.length===0||e[e.length-1].outSize!==1;){const t=e.length?e[e.length-1].outSize:n[1],r=ai(t);e.push({inSize:t,windowSize:r,outSize:Math.ceil(t/r)})}return e}function os(n,e,t,r){const s=qI(n.shape);let o=n;for(let a=0;a<s.length;a++){const{inSize:i,windowSize:u,outSize:c}=s[a];let l,h;t==="mean"?l=a===0?new Ml({windowSize:u,inSize:i,batchSize:n.shape[0],outSize:c},i):new Ml({windowSize:u,inSize:i,batchSize:n.shape[0],outSize:c}):l=new XI({windowSize:u,inSize:i,batchSize:n.shape[0],outSize:c},t),h=o,o=r.runWebGLProgram(l,[o],e),h.dataId!==n.dataId&&r.disposeIntermediateTensorInfo(h)}return o}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class YI{constructor(e,t){this.variableNames=["A"];const r=new Array(e.length);for(let a=0;a<r.length;a++)r[a]=e[t[a]];this.outputShape=r,this.rank=r.length;const s=Be(this.rank),o=QI(t);this.userCode=`
    void main() {
      ${s} resRC = getOutputCoords();
      setOutput(getA(${o}));
    }
    `}}function QI(n){const e=n.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let s=0;s<n.length;s++)r[n[s]]=t[s];return r.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZI{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const r=new Array(e.length);for(let l=0;l<r.length;l++)r[l]=e[t[l]];if(this.outputShape=r,this.rank=r.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const s=Be(this.rank),o=X1("rc",this.rank),a=new Array(this.rank);for(let l=0;l<t.length;l++)a[t[l]]=o[l];const i=`vec2(${a.slice(-2).join()})`,u=`++${o[this.rank-1]} < ${r[this.rank-1]}`,c=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`
    void main() {
      ${s} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${c};
      if(${u}) {
        result[1] = ${c};
      }
      --${o[this.rank-1]};
      if(++${o[this.rank-2]} < ${r[this.rank-2]}) {
        result[2] = ${c};
        if(${u}) {
          result[3] = ${c};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ci(n,e,t){const r=j().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ZI(n.shape,e):new YI(n.shape,e);return t.runWebGLProgram(r,[n],n.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JI(n,e,t,r){const s=e,o=n.shape.length,a=at(s,n.shape);let i=a;const u=on(i,o),c=u!=null;let l=n;c&&(l=ci(n,u,r),i=an(i.length,o)),wn("sum",i,o);const[h,d]=Rn(l.shape,i);let p=h;t&&(p=Kt(h,a));const f=ne(d),y=ne(n.shape)/f,b=ie({inputs:{x:l},attrs:{shape:[y,f]},backend:r}),S=Hu(n.dtype),I=os(b,S,"sum",r),k=ie({inputs:{x:I},attrs:{shape:p},backend:r});return r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(I),c&&r.disposeIntermediateTensorInfo(l),k}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function li(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:a}=r;return JI(s,o,a,t)}const e5={kernelName:Sp,backendName:"webgl",kernelFunc:li};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vt(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{perm:o}=r,a=t,i=s.shape.length,u=new Array(i);for(let l=0;l<u.length;l++)u[l]=s.shape[o[l]];let c;if(a.shouldExecuteOnCPU([s])){const h=a.texData.get(s.dataId).values,d=$c(h,s.shape,s.dtype,o,u);c=a.makeTensorInfo(u,s.dtype);const p=a.texData.get(c.dataId);p.values=d}else c=ci(s,o,a);return c}const t5={kernelName:ma,backendName:"webgl",kernelFunc:vt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tg=1e3;function za({a:n,b:e,transposeA:t,transposeB:r,backend:s,bias:o=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:u=null}){const c=n.shape.length,l=e.shape.length,h=t?n.shape[c-2]:n.shape[c-1],d=r?e.shape[l-1]:e.shape[l-2],p=t?n.shape[c-1]:n.shape[c-2],f=r?e.shape[l-2]:e.shape[l-1],x=n.shape.slice(0,-2),y=e.shape.slice(0,-2),b=ne(x),S=ne(y),k=De(n.shape.slice(0,-2),e.shape.slice(0,-2)).concat([p,f]);_(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${n.shape} and ${e.shape} and transposeA=${t} and transposeB=${r} must match.`);const P=t?[b,h,p]:[b,p,h],W=r?[S,f,d]:[S,d,f],H=ie({inputs:{x:n},backend:s,attrs:{shape:P}}),G=ie({inputs:{x:e},backend:s,attrs:{shape:W}}),B=[H,G],V=Math.max(b,S),R=t?H.shape[1]:H.shape[2],q=o!=null,te=a!=null,he=u==="leakyrelu",de=u!=null?No(u,!0):null,ge=q||te||he||de!=null;let be;if((p===1||f===1)&&R>tg&&ge===!1){let Ie=H,_e=G;t&&(Ie=vt({inputs:{x:H},backend:s,attrs:{perm:[0,2,1]}}),B.push(Ie)),r&&(_e=vt({inputs:{x:G},backend:s,attrs:{perm:[0,2,1]}}),B.push(_e));const Pe=f!==1,Ve=f===1;let Ye=Ie;Pe&&(Ye=ie({inputs:{x:Ie},backend:s,attrs:{shape:[V,R,1]}}),B.push(Ye));const cn=f===1?2:1;let Xn=_e;Ve&&(Xn=ie({inputs:{x:_e},backend:s,attrs:{shape:[V,1,R]}}),B.push(Xn));const Lt=Sc({inputs:{a:Ye,b:Xn},backend:s});be=li({inputs:{x:Lt},backend:s,attrs:{axis:cn,keepDims:!0}}),B.push(Lt)}else{const Ie=kn(n.dtype,e.dtype),_e=new eg(P,W,[V,p,f],t,r,q,de,te,he),Pe=[H,G];if(o!=null&&Pe.push(o),te&&Pe.push(a),he){const Ve=s.makeTensorInfo([],"float32",_s(i,"float32"));Pe.push(Ve),B.push(Ve)}be=s.runWebGLProgram(_e,Pe,Ie)}const $e=ie({inputs:{x:be},backend:s,attrs:{shape:k}});B.push(be);for(const Ie of B)s.disposeIntermediateTensorInfo(Ie);return $e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n5(n){const{inputs:e,backend:t,attrs:r}=n,{a:s,b:o,bias:a,preluActivationWeights:i}=e,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:h}=r;return za({a:s,b:o,transposeA:u,transposeB:c,backend:t,bias:a,preluActivationWeights:i,leakyreluAlpha:h,activation:l})}const r5={kernelName:eu,backendName:"webgl",kernelFunc:n5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ul="return abs(x);";function s5(n){const{inputs:e,backend:t}=n,{x:r}=e;if(t.shouldExecuteOnCPU([r])&&r.dtype!=="complex64"){const o=t.texData.get(r.dataId),a=H1(o.values);return t.makeTensorInfo(r.shape,r.dtype,a)}let s;return j().getBool("WEBGL_PACK_UNARY_OPERATIONS")?s=new or(r.shape,Ul):s=new Nn(r.shape,Ul),t.runWebGLProgram(s,[r],r.dtype)}const o5={kernelName:ih,backendName:"webgl",kernelFunc:s5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a5=un+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,i5=Oe({opSnippet:a5}),u5={kernelName:uh,backendName:"webgl",kernelFunc:i5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c5=un+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,l5=Oe({opSnippet:c5}),h5={kernelName:ch,backendName:"webgl",kernelFunc:l5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wl="return a + b;",d5=pt({opSnippet:Wl,packedOpSnippet:Wl,supportsComplex:!0,cpuKernelImpl:$6}),p5={kernelName:Wu,backendName:"webgl",kernelFunc:d5};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class f5{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((o,a)=>`T${a}`);const r=[];this.variableNames.forEach(o=>{r.push(`float v${o} = get${o}AtOutCoords();`)});const s=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${r.join(`
        `)}

        float result = ${s};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class m5{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((o,a)=>`T${a}`);const r=[];this.variableNames.forEach(o=>{r.push(`vec4 v${o} = get${o}AtOutCoords();`)});const s=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${r.join(`
        `)}

        vec4 result = ${s};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Na(n){const{inputs:e,backend:t}=n,r=e;if(r.length===1)return Ft({inputs:{x:r[0]},backend:t});if(r.length>j().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const u=Math.floor(r.length/2),c=Na({inputs:r.slice(0,u),backend:t}),l=Na({inputs:r.slice(u),backend:t});return Na({inputs:[c,l],backend:t})}const s=r.map(u=>u.dtype).reduce((u,c)=>kn(u,c)),o=r.map(u=>u.shape),i=j().getBool("WEBGL_PACK")?new m5(r[0].shape,o):new f5(r[0].shape,o);return t.runWebGLProgram(i,r,s)}const g5={kernelName:lh,backendName:"webgl",kernelFunc:Na};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y5(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:a}=r,i=s.shape.length,u=at(o,s.shape);let c=u;const l=on(c,i);let h=s;l!=null&&(h=vt({inputs:{x:s},backend:t,attrs:{perm:l}}),c=an(c.length,i)),wn("all",c,i);const[d,p]=Rn(h.shape,c),f=ne(p),x=ie({inputs:{x:h},backend:t,attrs:{shape:[-1,f]}}),y=os(x,x.dtype,"all",t);let b;if(a){const S=Kt(d,u);b=ie({inputs:{x:y},backend:t,attrs:{shape:S}})}else b=ie({inputs:{x:y},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(y),l!=null&&t.disposeIntermediateTensorInfo(h),b}const x5={kernelName:hh,backendName:"webgl",kernelFunc:y5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b5(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:a}=r,i=s.shape.length,u=at(o,s.shape);let c=u;const l=on(c,i);let h=s;l!=null&&(h=vt({inputs:{x:s},backend:t,attrs:{perm:l}}),c=an(c.length,i)),wn("any",c,i);const[d,p]=Rn(h.shape,c),f=ne(p),x=ie({inputs:{x:h},backend:t,attrs:{shape:[-1,f]}}),y=os(x,x.dtype,"any",t);let b;if(a){const S=Kt(d,u);b=ie({inputs:{x:y},backend:t,attrs:{shape:S}})}else b=ie({inputs:{x:y},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(y),l!=null&&t.disposeIntermediateTensorInfo(h),b}const w5={kernelName:dh,backendName:"webgl",kernelFunc:b5};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class v5{constructor(e,t,r){this.variableNames=["A"];const{windowSize:s,batchSize:o,outSize:a}=e;r||this.variableNames.push("bestIndicesA"),this.outputShape=[o,a];const i=t==="max"?">":"<",u=r?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${s}; i++) {
          int inIdx = ${u};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $5{constructor(e,t,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,_(e.length>2,()=>`Packed arg${r.charAt(0).toUpperCase()+r.slice(1)} supports only inputs with rank above 2.`);const o=e[e.length-1],a=Math.ceil(o/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),s||this.variableNames.push("bestIndicesA");const i=this.outputShape,u=i.length,c=Be(u),l=wt("coords",u);let h,d;if(a===1){d=u+1;const G=Be(d);h=`
        ${G} sourceLocR = ${G}(${l.join()}, 0);
        ++${l[u-1]};
        ${G} sourceLocG = ${G}(${l.join()}, 0);
        ++${l[u-2]};
        ${G} sourceLocA = ${G}(${l.join()}, 0);
        --${l[u-1]};
        ${G} sourceLocB = ${G}(${l.join()}, 0);
        --${l[u-2]};`}else d=u,h=`
        ${c} sourceLocR = coords;
        ++${l[u-1]};
        ${c} sourceLocG = coords;
        ++${l[u-2]};
        ${c} sourceLocA = coords;
        --${l[u-1]};
        ${c} sourceLocB = coords;
        --${l[u-2]};`;const p=["x","y","z","w","u","v"].slice(0,d),f="."+p[d-1],x=p.map(G=>"int "+G),y=wt("sourceLocR",d-1).concat("inIdx.r"),b=wt("sourceLocG",d-1).concat("inIdx.g"),S=wt("sourceLocB",d-1).concat("inIdx.b"),I=wt("sourceLocA",d-1).concat("inIdx.a"),k=r==="max"?"greaterThan":"lessThan",P=s?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${S.join()}),
                             getBestIndicesAChannel(${I.join()})));`,W=`vec4(
            getAChannel(${y.join()}),
            hasNextCol ? getAChannel(${b.join()}) : 0.,
            hasNextRow ? getAChannel(${S.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${I.join()}) : 0.)`,H=s?"":`
      float getBestIndicesAChannel(${x.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${x.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${H}
      void main() {
        ${c} coords = getOutputCoords();
        bool hasNextCol = ${l[u-1]} < ${i[u-1]-1};
        bool hasNextRow = ${l[u-2]} < ${i[u-2]-1};
        ${h}
        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},
          sourceLocB${f}, sourceLocA${f}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${W};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${P}
          vec4 candidate = ${W};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${k}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ng(n,e,t,r=null){let s=e.shape[0],o=e.shape[1];r!=null&&(s=r.shape[0],o=r.shape[1]);const a=ai(o),i={windowSize:a,inSize:o,batchSize:s,outSize:Math.ceil(o/a)},u=new v5(i,t,r==null),c=[e];r!=null&&c.push(r);const l=n.runWebGLProgram(u,c,"int32");if(l.shape[1]===1)return l;const h=ng(n,e,t,l);return n.disposeIntermediateTensorInfo(l),h}function rg(n,e,t,r=null){const s=r!=null?r.shape:e.shape,o=s[s.length-1],a=ai(o),i=new $5(s,a,t,r==null),u=r==null?[e]:[e,r],c=n.runWebGLProgram(i,u,"int32");if(c.shape.length===e.shape.length){const l=rg(n,e,t,c);return n.disposeIntermediateTensorInfo(c),l}return c}function sg(n,e,t,r){const s=[t];if(wn("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,e.shape.length),!j().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const o=[],a=n.texData.get(e.dataId),i=a!==null&&a.isPacked;let u=e;i&&(u=n.unpackTensor(e),o.push(u));const[c,l]=Rn(u.shape,s),h=ne(l),d=ie({inputs:{x:u},backend:n,attrs:{shape:[-1,h]}});o.push(d);const p=ng(n,d,r);o.push(p);const f=ie({inputs:{x:p},backend:n,attrs:{shape:c}});return o.forEach(x=>n.disposeIntermediateTensorInfo(x)),f}return rg(n,e,r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C5(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o}=r;let a=at(o,s.shape);const i=on(a,s.shape.length);let u=s;const c=[];i!=null&&(u=vt({inputs:{x:s},backend:t,attrs:{perm:i}}),c.push(u),a=an(a.length,u.shape.length)),wn("argMax",[a[0]],u.shape.length);const l=sg(t,u,a[0],"max");return c.forEach(h=>t.disposeIntermediateTensorInfo(h)),l}const S5={kernelName:ph,backendName:"webgl",kernelFunc:C5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T5(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o}=r;let a=at(o,s.shape);const i=on(a,s.shape.length);let u=s;const c=[];i!=null&&(u=vt({inputs:{x:s},backend:t,attrs:{perm:i}}),c.push(u),a=an(a.length,u.shape.length)),wn("argMin",[a[0]],u.shape.length);const l=sg(t,u,a[0],"min");return c.forEach(h=>t.disposeIntermediateTensorInfo(h)),l}const N5={kernelName:fh,backendName:"webgl",kernelFunc:T5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E5=un+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,I5=Oe({opSnippet:E5}),k5={kernelName:mh,backendName:"webgl",kernelFunc:I5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R5=un+"return log(x + sqrt(x * x + 1.0));",_5=Oe({opSnippet:R5}),A5={kernelName:gh,backendName:"webgl",kernelFunc:_5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O5=un+`
  return atan(x);
`,D5=Oe({opSnippet:O5}),F5={kernelName:yh,backendName:"webgl",kernelFunc:D5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P5=Cc+`
  return atan(a, b);
`,L5=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+ss+`
  return result;
`,B5=pt({opSnippet:P5,packedOpSnippet:L5}),V5={kernelName:bh,backendName:"webgl",kernelFunc:B5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M5=un+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,U5=Oe({opSnippet:M5}),W5={kernelName:xh,backendName:"webgl",kernelFunc:U5};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Eo{constructor(e,t,r,s=!1,o=!1){if(this.variableNames=["x"],t==="avg"&&r)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,u=e.strideWidth,c=e.dilationHeight,l=e.dilationWidth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.top,f=e.padInfo.left;this.outputShape=e.outShape;const x=t==="avg",y=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,b=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let S="0.0";if(x||(S="-1.0 / 1e-20"),r){const G=">=";this.userCode=`
        const ivec2 strides = ivec2(${i}, ${u});
        const ivec2 pads = ivec2(${p}, ${f});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${h};
              wR += ${c}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${l}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${G} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${s?o?y:b:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const I="max";let k=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(k="avgValue / max(count, 1.0)");const P=Math.floor(a/4)*4,W=a%4,H=`
      if (${x}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${I}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${u});
      const ivec2 pads = ivec2(${p}, ${f});
      const float initializationValue = ${S};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${S});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${h};
            wR += ${c}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${P}; wC += 4) {
            int xC = xCCorner + wC * ${l};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              getValue(batch, xR, xC + 2 * ${l}, d),
              getValue(batch, xR, xC + 3 * ${l}, d)
            );

            ${H}
          }

          int xC = xCCorner + ${P};
          if (${W===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${H}
          } else if (${W===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              initializationValue,
              initializationValue
            );

            ${H}
          } else if (${W===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              getValue(batch, xR, xC + 2 * ${l}, d),
              initializationValue
            );

            ${H}
          }
        }
        setOutput(${k});
      }
    `}}class Tc{constructor(e,t,r,s=!1,o=!1){if(this.variableNames=["x"],t==="avg"&&r)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,u=e.strideHeight,c=e.strideWidth,l=e.dilationDepth,h=e.dilationHeight,d=e.dilationWidth,p=e.effectiveFilterDepth,f=e.effectiveFilterHeight,x=e.effectiveFilterWidth,y=e.padInfo.front,b=e.padInfo.top,S=e.padInfo.left;this.outputShape=e.outShape;const I=t==="avg";let k="0.0";if(I||(k="-1.0 / 1e-20"),r){const V=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${u}, ${c});
        const ivec3 pads = ivec3(${y}, ${b}, ${S});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${p};
              wD += ${l}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${f};
                wR += ${h}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${x};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${V} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${s?o?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${f} * ${x} +
                      wR * ${x} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const P="max";let W=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(W="avgValue / max(count, 1.0)");const H=Math.floor(a/4)*4,G=a%4,B=`
      if (${I}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${P}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${u}, ${c});
      const ivec3 pads = ivec3(${y}, ${b}, ${S});
      const float initializationValue = ${k};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${k});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${l}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f};
            wR += ${h}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${H}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${B}
            }

            int xC = xCCorner + ${H};
            if (${G===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${B}
            } else if (${G===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${B}
            } else if (${G===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${B}
            }
          }
        }
        setOutput(${W});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z5(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e;Po(s,"avgPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:u}=r,c=1;_(Pt(a,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const l=Jr(s.shape,o,a,c,i,u);if(l.filterWidth===1&&l.filterHeight===1&&Xe(l.inShape,l.outShape))return Ft({inputs:{x:s},backend:t});const h=new Eo(l,"avg",!1);return t.runWebGLProgram(h,[s],"float32")}const G5={kernelName:wh,backendName:"webgl",kernelFunc:z5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j5(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{filterSize:o,strides:a,pad:i,dimRoundingMode:u,dataFormat:c}=r,l=[1,1,1],h=_o(s.shape,o,a,l,i,u,c),d=new Tc(h,"avg",!1);return t.runWebGLProgram(d,[s],"float32")}const H5={kernelName:vh,backendName:"webgl",kernelFunc:j5};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class K5{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,r=e.filterWidth,s=e.strideHeight,o=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,u=e.effectiveFilterHeight,c=e.effectiveFilterWidth,l=u-1-e.padInfo.top,h=c-1-e.padInfo.left,d=1/(t*r);this.userCode=`
      const ivec2 pads = ivec2(${l}, ${h});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${u};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${c};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class X5{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,r=e.filterHeight,s=e.filterWidth,o=e.strideDepth,a=e.strideHeight,i=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,l=e.dilationWidth,h=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,f=h-1-e.padInfo.front,x=d-1-e.padInfo.top,y=p-1-e.padInfo.left,b=1/(t*r*s);this.userCode=`
      const ivec3 pads = ivec3(${f}, ${x}, ${y});
      const float avgMultiplier = float(${b});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${u}) {
          float dyD = float(dyDCorner + wD) / ${o}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${c}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${l}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q5(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:o}=e,a=o,{filterSize:i,strides:u,pad:c,dimRoundingMode:l}=r,h=[1,1,1],d=_o(a.shape,i,u,h,c,l),p=new X5(d);return t.runWebGLProgram(p,[s],a.dtype)}const Y5={kernelName:Yg,backendName:"webgl",kernelFunc:q5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q5(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:o}=e,a=o;Po([s,o],"avgPoolGrad");const{filterSize:i,strides:u,pad:c}=r,l=Jr(a.shape,i,u,1,c),h=new K5(l);return t.runWebGLProgram(h,[s],a.dtype)}const Z5={kernelName:qg,backendName:"webgl",kernelFunc:Q5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J5(n){const{inputs:e,backend:t,attrs:r}=n,{a:s,b:o}=e,{transposeA:a,transposeB:i}=r;return za({a:s,b:o,transposeA:a,transposeB:i,backend:t})}const ek={kernelName:$h,backendName:"webgl",kernelFunc:J5};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tk{constructor(e,t,r,s,o,a){this.outputShape=[],this.variableNames=["x","mean","variance"],De(e,t),De(e,r);let i="0.0";s!=null&&(De(e,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="1.0";o!=null&&(De(e,o),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${u};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nk{constructor(e,t,r,s,o,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],De(e,t),De(e,r);let i="vec4(0.0)";s!=null&&(De(e,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="vec4(1.0)";o!=null&&(De(e,o),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${u};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rk=({inputs:n,backend:e,attrs:t})=>{const{x:r,mean:s,variance:o,offset:a,scale:i}=n;_(s.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),_(a==null||s.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),_(i==null||s.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=t;u==null&&(u=.001);const c=[r,s,o];let l=null;a!=null&&(l=a.shape,c.push(a));let h=null;i!=null&&(h=i.shape,c.push(i));const d=j().getBool("WEBGL_PACK_NORMALIZATION")?new nk(r.shape,s.shape,o.shape,l,h,u):new tk(r.shape,s.shape,o.shape,l,h,u);return e.runWebGLProgram(d,c,c[0].dtype)},sk={kernelName:ud,backendName:"webgl",kernelFunc:rk};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ok{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=Be(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const r=ak(this.rank);let s;const o=e.map((a,i)=>`sourceLoc.${Fu[i]} = start[${i}] + coords.${Fu[i]};`);s=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${o.join(`
`)}
      `,this.userCode=`
      void main() {
        ${s}
        setOutput(getSource(${r}));
      }
    `}}const Fu=["x","y","z","w","u","v"];function ak(n){if(n===1)return"sourceLoc";if(n<=6)return Fu.slice(0,n).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ik{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=Be(this.rank),r=wt("coords",this.rank),s=wt("sourceLoc",this.rank),o=this.rank===1?"sourceLoc":`vec2(${s.slice(-2).join()})`,a=`getChannel(getSource(${s.join()}), ${o})`,i=`
      result.x = ${a};
      if (++${r[this.rank-1]} < ${e[this.rank-1]}) {
        ++${s[this.rank-1]};
        result.y = ${a};
        --${s[this.rank-1]};
      }
    `,u=this.rank===1?"":`
      --${r[this.rank-1]};
      if (++${r[this.rank-2]} < ${e[this.rank-2]}) {
        ++${s[this.rank-2]};
        result.z = ${a};
        if (++${r[this.rank-1]} < ${e[this.rank-1]}) {
          ++${s[this.rank-1]};
          result.w = ${a};
        }
      }
    `,c=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((l,h)=>`start[${h}]`).join()});`:e.map((l,h)=>`${s[h]} = ${r[h]} + start[${h}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${c}
        vec4 result = vec4(0.);
        ${i}
        ${u}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uk(n,e,t,r){const s=r.texData.get(n.dataId),o=r.makeTensorInfo(t,n.dtype),a=r.texData.get(o.dataId);Object.assign(a,s),a.refCount=1,a.shape=t,a.dtype=n.dtype;let i=dc(e,lt(n.shape));s.slice&&(i+=s.slice.flatOffset),a.slice={flatOffset:i,origDataId:s.slice&&s.slice.origDataId||n.dataId};const u=r.dataRefCount.get(a.slice.origDataId)||1;return r.dataRefCount.set(a.slice.origDataId,u+1),o}function Ws(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{begin:o,size:a}=r,[i,u]=Pm(s,o,a);if(Nm(s,i,u),ne(u)===0)return t.makeTensorInfo(u,s.dtype,[]);if(t.shouldExecuteOnCPU([s])||s.dtype==="string"){const h=t.texData.get(s.dataId),d=eI(h.values,i,u,s.shape,s.dtype);return t.makeTensorInfo(u,s.dtype,d)}const{isPacked:c}=t.texData.get(s.dataId),l=hc(s.shape,i,u);if(c||!l){const h=j().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ik(u):new ok(u),d=[i];return t.runWebGLProgram(h,[s],s.dtype,d)}return t.uploadToGPU(s.dataId),uk(s,i,u,t)}const ck={kernelName:yp,backendName:"webgl",kernelFunc:Ws};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lk=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{blockShape:o,crops:a}=r;_(s.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const i=o.reduce((S,I)=>S*I),u=fc(s.shape,o,i),c=mc(u.length,o.length),l=gc(s.shape,o,i),h=Gm(a,o.length),d=jm(l,a,o.length),p=[],f=ie({inputs:{x:s},backend:t,attrs:{shape:u}}),x=vt({inputs:{x:f},backend:t,attrs:{perm:c}}),y=ie({inputs:{x},backend:t,attrs:{shape:l}}),b=Ws({inputs:{x:y},backend:t,attrs:{begin:h,size:d}});return p.push(f),p.push(x),p.push(y),p.forEach(S=>t.disposeIntermediateTensorInfo(S)),b},hk={kernelName:Ch,backendName:"webgl",kernelFunc:lk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dk(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,weights:o}=e,{size:a}=r,i=t.readSync(s.dataId),u=t.readSync(o.dataId),c=j1(i,u,o.dtype,o.shape,a);return t.makeTensorInfo([a],o.dtype,c)}const pk={kernelName:Sh,backendName:"webgl",kernelFunc:dk};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fk=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,mk=`
  return float(int(a.r) & int(b.r));
`;function gk(n){const{inputs:e,backend:t}=n,{a:r,b:s}=e,o=j().getBool("WEBGL_PACK_BINARY_OPERATIONS"),a=j().getNumber("WEBGL_VERSION");if(t.shouldExecuteOnCPU([r,s])||a===1){const u=t.texData.get(r.dataId).values,c=t.texData.get(s.dataId).values,[l,h]=S6(r.shape,s.shape,u,c,r.dtype),d=t.makeTensorInfo(h,r.dtype),p=t.texData.get(d.dataId);return p.values=l,d}let i;return o?i=new Ms(fk,r.shape,s.shape,!1):i=new Zr(mk,r.shape,s.shape),t.runWebGLProgram(i,[r,s],r.dtype)}const yk={kernelName:Th,backendName:"webgl",kernelFunc:gk};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xk(n){const{inputs:e,backend:t}=n,{s0:r,s1:s}=e,o=t.readSync(r.dataId),a=t.readSync(s.dataId),i=De(Array.from(o),Array.from(a));return t.makeTensorInfo([i.length],"int32",Int32Array.from(i))}const bk={kernelName:Nh,backendName:"webgl",kernelFunc:xk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wk="return float(a != b);",og=pt({opSnippet:wk,cpuKernelImpl:j6,dtype:"bool"}),vk={kernelName:Ud,backendName:"webgl",kernelFunc:og};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bo(n){const{inputs:e,backend:t}=n,{input:r}=e,s=t.texData.get(r.dataId);return Ft({inputs:{x:s.complexTensorInfos.real},backend:t})}const $k={kernelName:np,backendName:"webgl",kernelFunc:Bo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ck="return float(int(x));";function Sk(n,e){const t=new Nn(n.shape,Ck),r=e.runWebGLProgram(t,[n],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pu(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{dtype:o}=r;if(o==="complex64"){if(s.dtype==="complex64")return Ft({inputs:{x:s},backend:t});const a=Kr(s.shape),i=Pu({inputs:{x:s},backend:t,attrs:{dtype:"float32"}}),u=xr({inputs:{real:i,imag:a},backend:t});return a.dispose(),t.disposeIntermediateTensorInfo(i),u}if(s.dtype==="complex64"){const a=Bo({inputs:{input:s},backend:t}),i=Pu({inputs:{x:a},backend:t,attrs:{dtype:o}});return t.disposeIntermediateTensorInfo(a),i}if(!Vg(s.dtype,o)){const a=Ft({inputs:{x:s},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:o}}if(t.shouldExecuteOnCPU([s])){const a=t.texData.get(s.dataId).values,[i,u,c]=T6(a,s.shape,s.dtype,o);return t.makeTensorInfo(i,u,c)}if(o==="int32")return Sk(s,t);if(o==="bool"){const a=t.makeTensorInfo([],"bool",lr("bool",1)),u=og({inputs:{a:s,b:a},backend:t});return t.disposeIntermediateTensorInfo(a),u}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${o}`)}const Tk={kernelName:zu,backendName:"webgl",kernelFunc:Pu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zl="return ceil(x);",Nk=Oe({opSnippet:zl,packedOpSnippet:zl,cpuKernelImpl:N6}),Ek={kernelName:Eh,backendName:"webgl",kernelFunc:Nk};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ik{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kk{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rk(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{clipValueMin:o,clipValueMax:a}=r;let i;j().getBool("WEBGL_PACK_CLIP")?i=new kk(s.shape):i=new Ik(s.shape);const u=[[o],[a]];return t.runWebGLProgram(i,[s],s.dtype,u)}const _k={kernelName:Ih,backendName:"webgl",kernelFunc:Rk};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ak{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gl(n,e){return{dataId:e.dataId,dtype:e.dtype,shape:n.shape}}function Ok(n){const{inputs:e,backend:t}=n,{x:r}=e,s=t.texData.get(r.dataId),o=new Ak(r.shape),a=[Gl(r,s.complexTensorInfos.real),Gl(r,s.complexTensorInfos.imag)];return t.runWebGLProgram(o,a,a[0].dtype)}const Dk={kernelName:Rh,backendName:"webgl",kernelFunc:Ok};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fk{constructor(e){this.outputShape=[],this.outputShape=Yr(e,1),this.variableNames=e.map((a,i)=>`T${i}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];const r=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){const i=t[a-1];r.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${i}));`)}const s=t.length,o=t[t.length-1];r.push(`else setOutput(getT${s}(yR, yC-${o}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${r.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pk{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Yr(e,t);const r=this.outputShape,s=r.length,o=Be(s),a=wt("coords",s),i=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map((x,y)=>`T${y}`);const u=new Array(e.length-1);u[0]=e[0][t];for(let x=1;x<u.length;x++)u[x]=u[x-1]+e[x][t];const c=i[t],l=i.slice(-2),h=i.join();let d=`if (${c} < ${u[0]}) {
        return getChannel(
            getT0(${h}), vec2(${l.join()}));
        }`;for(let x=1;x<u.length;x++){const y=u[x-1];d+=`
        if (${c} < ${u[x]}  && ${c} >= ${u[x-1]}) {
          return getChannel(
            getT${x}(${fa(i,c,y)}),
            vec2(${fa(l,c,y)}));
        }`}const p=u.length,f=u[u.length-1];d+=`
        return getChannel(
          getT${p}(${fa(i,c,f)}),
          vec2(${fa(l,c,f)}));`,this.userCode=`
      float getValue(${i.map(x=>"int "+x)}) {
        ${d}
      }

      void main() {
        ${o} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[s-1]} = ${a[s-1]} + 1;
        if (${a[s-1]} < ${r[s-1]}) {
          result.g = getValue(${a});
        }

        ${a[s-2]} = ${a[s-2]} + 1;
        if (${a[s-2]} < ${r[s-2]}) {
          result.a = getValue(${a});
        }

        ${a[s-1]} = ${a[s-1]} - 1;
        if (${a[s-2]} < ${r[s-2]} &&
            ${a[s-1]} < ${r[s-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}}function fa(n,e,t){const r=n.indexOf(e);return n.map((o,a)=>a===r?`${o} - ${t}`:o).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hi(n){const{inputs:e,backend:t}=n,{input:r}=e,s=t.texData.get(r.dataId);return Ft({inputs:{x:s.complexTensorInfos.imag},backend:t})}const Lk={kernelName:fd,backendName:"webgl",kernelFunc:hi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fo(n,e,t){const r=n[0].dtype;if(r==="complex64"){const p=n.map(S=>Bo({inputs:{input:S},backend:t})),f=n.map(S=>hi({inputs:{input:S},backend:t})),x=fo(p,e,t),y=fo(f,e,t),b=xr({inputs:{real:x,imag:y},backend:t});return p.forEach(S=>t.disposeIntermediateTensorInfo(S)),f.forEach(S=>t.disposeIntermediateTensorInfo(S)),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(y),b}let s=t.shouldExecuteOnCPU(n);if(r==="string"&&(s=!0),s){const p=n.map(k=>{const W=[-1,ne(k.shape.slice(e))];return ie({inputs:{x:k},backend:t,attrs:{shape:W}})}),f=p.map(k=>({vals:t.readSync(k.dataId),shape:k.shape})),x=Yr(p.map(k=>k.shape),1),y=p[0].shape[0]===1,b=E6(f,x,r,y),S=Yr(n.map(k=>k.shape),e),I=t.makeTensorInfo(S,r,b);return p.forEach(k=>t.disposeIntermediateTensorInfo(k)),I}const o=n.filter(p=>ne(p.shape)>0),a=j().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&o[0].shape.length>1;if(o.length===1){const p=a?new Nn(n[0].shape,rr):new or(n[0].shape,rr);return t.runWebGLProgram(p,n,r)}const i=j().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(o.length>i){const p=[];for(let x=0;x<o.length;x+=i){const y=o.slice(x,x+i);p.push(fo(y,e,t))}const f=fo(p,e,t);for(const x of p)t.disposeIntermediateTensorInfo(x);return f}if(a){const p=new Pk(o.map(f=>f.shape),e);return t.runWebGLProgram(p,o,r)}const{tensors2D:u,outShape:c}=Bk(o,e,t),l=new Fk(u.map(p=>p.shape)),h=t.runWebGLProgram(l,u,r);u.forEach(p=>t.disposeIntermediateTensorInfo(p));const d=ie({inputs:{x:h},attrs:{shape:c},backend:t});return t.disposeIntermediateTensorInfo(h),d}function Bk(n,e,t){const r=Yr(n.map(o=>o.shape),e);return{tensors2D:n.map(o=>ie({inputs:{x:o},attrs:{shape:[-1,ne(o.shape.slice(e))]},backend:t})),outShape:r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ag(n){const{inputs:e,backend:t,attrs:r}=n,{axis:s}=r,o=at(s,e[0].shape)[0],a=e.map(c=>c.shape);Bm(a,o);const i=Yr(e.map(c=>c.shape),o);if(ne(i)===0)return t.makeTensorInfo(i,e[0].dtype,[]);const u=e.filter(c=>ne(c.shape)>0);return u.length===1?Ft({inputs:{x:u[0]},backend:t}):fo(u,o,t)}const Vk={kernelName:_h,backendName:"webgl",kernelFunc:ag};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ig{constructor(e,t=!1,r=null,s=!1,o=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,u=e.strideHeight,c=e.strideWidth,l=e.dilationHeight,h=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,f=Math.floor(e.inChannels/4)*4,x=e.inChannels%4,y=e.dataFormat==="channelsLast",b=y?1:2,S=y?2:3,I=y?3:1;let k="",P="";r&&(s?k=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:o?k=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:k=`
          float activation(float x) {
            ${r}
          }
        `,P="result = activation(result);");const W=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${k}

      const ivec2 strides = ivec2(${u}, ${c});
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${I}];

        ivec2 xRCCorner =
            ivec2(coords[${b}], coords[${S}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${l};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC++) {
            int xC = xCCorner + wC * ${h};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${f}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${y}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${x===1}) {

              if (${y}) {
                dotProd +=
                    getX(batch, xR, xC, ${f}) *
                    getW(wR, wC, ${f}, d2);
              } else {
                dotProd +=
                    getX(batch, ${f}, xR, xC) *
                    getW(wR, wC, ${f}, d2);
              }

            } else if (${x===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2)
              );

              if (${y}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${x===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2),
                getW(wR, wC, ${f} + 2, d2)
              );

              if (${y}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1),
                  getX(batch, xR, xC, ${f} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC),
                  getX(batch, ${f} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${W}
        ${P}
        setOutput(result);
      }
    `}}class Mk{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,r=e.padInfo.top,s=e.padInfo.left,o=e.strideDepth,a=e.strideHeight,i=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,l=e.dilationWidth,h=e.filterDepth,d=e.filterHeight,p=e.filterWidth,f=Math.floor(e.inChannels/4)*4,x=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${o}, ${a}, ${i});
      const ivec3 pads = ivec3(${t}, ${r}, ${s});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${h}; wF++) {
          int xF = xFCorner + wF * ${u};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${c};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p}; wC++) {
              int xC = xCCorner + wC * ${l};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${f}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${x===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${f}) *
                  getW(wF, wR, wC, ${f}, d2);
              } else if (${x===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${x===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1),
                  getX(batch, xF, xR, xC, ${f} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2),
                  getW(wF, wR, wC, ${f} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ug{constructor(e,t=!1,r=null,s=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=yt(this.outputShape.length);const a=e.padInfo.left,i=e.strideWidth,u=e.dilationWidth,c=e.filterHeight,l=e.filterWidth,h=l;let d=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let y=0;y<l;y++)d+=`
           vec4 xTexelC${y*2};
           int xTexelC${y*2}Ready;
           vec4 xTexelC${y*2+1};
           int xTexelC${y*2+1}Ready;
           vec4 xC${y};`;d+=`
     for (int r = 0; r < ${c}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let y=0;y<l;y++)d+=`
           xTexelC${y*2} = vec4(0.0);
           xTexelC${y*2}Ready = 0;
           xTexelC${y*2+1} = vec4(0.0);
           xTexelC${y*2+1}Ready = 0;
           xC${y} = vec4(0.0);`;d+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let y=0;y<(h+1)/2;y++){const b=y*2;if(d+=`
           xC = xCCorner + ${b*u};
           `,i===1){if(b<l&&(a%2===1?(d+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }
               `,u===1&&b>0?d+=`
                 xC${b} = vec4(xTexelC${b-2}.zw, xTexelC${b}.xy);
                 `:d+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${b} = vec4(previous.zw, xTexelC${b}.xy);
                   } else {
                     xC${b} = vec4(0.0, 0.0, xTexelC${b}.xy);
                   }
                   `):d+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }

                 xC${b} = xTexelC${b};
                 `,b+1<l)){const S=a%2===0?Vu(u):u;u%2===0&&a%2===1||u%2!==0&&a%2!==1?(d+=`
                   xCOffset = xC + imod(pads[1], 2) + ${S};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                     xTexelC${b+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${b+1}.zw = vec2(0.0);
                     }
                     xTexelC${b+1}Ready = 1;
                   }
                   `,u>1?d+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${b+1} = vec4(previous.zw, xTexelC${b+1}.xy);
                     } else {
                      xC${b+1} = vec4(0.0, 0.0, xTexelC${b+1}.xy);
                     }
                     `:d+=`
                     xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.xy);
                     `):S===1?d+=`
                     xC${b+1} = xTexelC${b};
                     `:d+=`
                     xCOffset = xC + ${S};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                       xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${b+1}.zw = vec2(0.0);
                       }
                       xTexelC${b+1}Ready = 1;
                     }

                     xC${b+1} = xTexelC${b+1};
                     `}}else b<l&&(a%2===1?(d+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${b+1}Ready == 0) {
                   xTexelC${b+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${b+1}.zw = vec2(0.0);
                   }
                   xTexelC${b+1}Ready = 1;
                 }

                 xC${b} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
               `,b+1<l&&(d+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${b+1} = vec4(xTexelC${b+1}.xy, final.xy);
                 `)):(d+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                   xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${b+1}.zw = vec2(0.);
                   }
                   xTexelC${b+1}Ready = 1;
                 }

                 xC${b} = vec4(
                   xTexelC${b}.xy, xTexelC${b+1}.xy);
               `,b+1<l&&(d+=`
                   xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
                 `)));b<l&&(d+=`
             wTexel = getW(r, ${b}, d1, d2);
             dotProd += xC${b}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${b}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,b+1<l&&(d+=`
               wTexel = getW(r, ${b+1}, d1, d2);
               dotProd += xC${b+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${b+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}d+=`
     }
   `,d+=`
     }
   `,d+=`
     }
   `;let p="",f="";r&&(s?p=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${r}
         }`:o?p=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${r}
         }`:p=`vec4 activation(vec4 x) {
           ${r}
         }`,f="result = activation(result);");const x=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${p}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${d}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${x}
         ${f}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Uk{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=yt(this.outputShape.length);const{dataFormat:r}=t,s=$t(),o=r==="channelsLast",a=o?1:2,i=o?2:3,u=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let c="";for(let l=0;l<=1;l++)for(let h=0;h<=1;h++)c+=`
          blockIndex = rc.z + ${h};
          pos = rc.y + ${l};

          ${u}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${i}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${o}) {
                  innerDims = vec2(d1, ch);
                  result[${l*2+h}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${l*2+h}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${c}

        ${s.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ga(n,e){const t=n.length;return t>=3?e?[...n.slice(0,-3),n[t-3]*n[t-2],n[t-1]]:[...n.slice(0,-3),n[t-3],n[t-2]*n[t-1]]:!e&&t===1&&n[0]>1?[n[0],1]:null}function cg({x:n,filter:e,convInfo:t,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:i=null}){const u=n.shape,c=r.texData.get(n.dataId),l=t.inChannels,h=u[0]*u[1]*u[2],d=t.outChannels,p=t.dataFormat==="channelsLast",f=!1,x=!1;let y;const b=[];if(o!=null){const k=Ga(o.shape,p);k!=null&&(o=ie({inputs:{x:o},backend:r,attrs:{shape:k}}),b.push(o))}if(s!=null){const k=Ga(s.shape,p);k!=null&&(s=ie({inputs:{x:s},backend:r,attrs:{shape:k}}),b.push(s))}if(!((h===1||d===1)&&l>tg)&&c.isPacked&&p&&c.texture!=null&&u[2]%2!==0&&Xe(c.shape.slice(-3),u.slice(-3))){const k=u[0]*u[1]*(u[2]+1),P={dataId:n.dataId,shape:[1,k,t.inChannels],dtype:n.dtype},W=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,_(Ua(c.shape,P.shape),()=>`packed reshape ${c.shape} to ${P.shape} isn't free`);const H=ie({inputs:{x:e},backend:r,attrs:{shape:[1,t.inChannels,t.outChannels]}});b.push(H);const G=za({a:P,b:H,backend:r,transposeA:f,transposeB:x,bias:s,activation:i,preluActivationWeights:o,leakyreluAlpha:a}),B=r.texData.get(G.dataId);_(B.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=W,B.shape=t.outShape,y=Ft({inputs:{x:G},backend:r}),y.shape=t.outShape,b.push(G)}else{const k=t.outHeight*t.outWidth,P=ie({inputs:{x:n},backend:r,attrs:{shape:p?[t.batchSize,k,t.inChannels]:[t.batchSize,t.inChannels,k]}}),W=ie({inputs:{x:e},backend:r,attrs:{shape:[1,t.inChannels,t.outChannels]}}),H=za({a:p?P:W,b:p?W:P,transposeA:!p,transposeB:x,backend:r,bias:s,activation:i,preluActivationWeights:o,leakyreluAlpha:a});y=ie({inputs:{x:H},backend:r,attrs:{shape:t.outShape}}),b.push(P),b.push(W),b.push(H)}for(const k of b)r.disposeIntermediateTensorInfo(k);return y}function lg({x:n,filter:e,convInfo:t,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:i=null}){const{filterWidth:u,filterHeight:c,inChannels:l,outWidth:h,outHeight:d,dataFormat:p}=t,f=p==="channelsLast",x=u*c*l,y=d*h,b=[t.batchSize,x,y],S=!0,I=!1,k=[];if(o!=null){const $e=Ga(o.shape,f);$e!=null&&(o=ie({inputs:{x:o},backend:r,attrs:{shape:$e}}),k.push(o))}if(s!=null){const $e=Ga(s.shape,f);$e!=null&&(s=ie({inputs:{x:s},backend:r,attrs:{shape:$e}}),k.push(s))}const P=ie({inputs:{x:e},backend:r,attrs:{shape:[1,x,ne(e.shape)/x]}});k.push(P);const W=new Uk(b,t),H=[n.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],G=r.runWebGLProgram(W,[n],"float32",H),B=ie({inputs:{x:G},backend:r,attrs:{shape:b}});k.push(G),k.push(B);const V=s!=null,R=o!=null,q=i==="leakyrelu",te=i?No(i,!0):null,he=new eg(f?B.shape:P.shape,f?P.shape:B.shape,f?[t.batchSize,y,t.outChannels]:[t.batchSize,t.outChannels,y],S,I,V,te,R,q),de=f?[B,P]:[P,B];if(s&&de.push(s),R&&de.push(o),q){const $e=r.makeTensorInfo([],"float32",_s(a,"float32"));de.push($e),k.push($e)}const ge=r.runWebGLProgram(he,de,"float32"),be=ie({inputs:{x:ge},backend:r,attrs:{shape:t.outShape}});k.push(ge);for(const $e of k)r.disposeIntermediateTensorInfo($e);return be}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wk(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o}=e,{strides:a,pad:i,dataFormat:u,dilations:c,dimRoundingMode:l}=r,h=As(u),d=Ht(s.shape,o.shape,a,c,i,l,!1,h);let p;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))p=cg({x:s,filter:o,convInfo:d,backend:t});else if(d.strideWidth<=2&&h==="channelsLast"&&j().getBool("WEBGL_EXP_CONV")){const x=new ug(d),y=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=t.runWebGLProgram(x,[s,o],"float32",y)}else if(j().getBool("WEBGL_CONV_IM2COL"))p=lg({x:s,filter:o,convInfo:d,backend:t});else{const x=new ig(d);p=t.runWebGLProgram(x,[s,o],"float32")}const f=ie({inputs:{x:p},backend:t,attrs:{shape:d.outShape}});return t.disposeIntermediateTensorInfo(p),f}const zk={kernelName:Ah,backendName:"webgl",kernelFunc:Wk};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Gk{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,r=e.strideWidth,s=e.padInfo.top,o=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${o};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${a?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class jk{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,r=e.filterWidth,s=e.strideHeight,o=e.strideWidth,a=e.dataFormat==="channelsLast",i=t-1-e.padInfo.top,u=r-1-e.padInfo.left,c=a?1:2,l=a?2:3,h=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${h}];

        ivec2 dyCorner = ivec2(coords[${c}], coords[${l}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Hk{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,r=e.strideHeight,s=e.strideWidth,o=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${o};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${r} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${s} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Kk{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,r=e.filterHeight,s=e.filterWidth,o=e.strideDepth,a=e.strideHeight,i=e.strideWidth,u=t-1-e.padInfo.front,c=r-1-e.padInfo.top,l=s-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${u}, ${c}, ${l});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${o}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${r}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${r} - 1 - wR;

            for (int wC = 0; wC < ${s}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${s} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xk(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,dy:o}=e,{strides:a,pad:i,dataFormat:u,dimRoundingMode:c,filterShape:l}=r,h=As(u),d=Ht(s.shape,l,a,1,i,c,!1,h),p=new Gk(d);return t.runWebGLProgram(p,[s,o],"float32")}const qk={kernelName:Oh,backendName:"webgl",kernelFunc:Xk};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yk{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=yt(this.outputShape.length);const t=e.filterHeight,r=e.filterWidth,s=t-1-e.padInfo.top,o=r-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${s}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            int wCPerm = ${r} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qk(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,filter:o}=e,{inputShape:a,strides:i,pad:u,dataFormat:c,dimRoundingMode:l}=r,h=As(c),d=Ht(a,o.shape,i,1,u,l,!1,h);if(j().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&h==="channelsLast"){const p=[[d.strideHeight,d.strideWidth]],f=new Yk(d);return t.runWebGLProgram(f,[s,o],"float32",p)}else{const p=new jk(d);return t.runWebGLProgram(p,[s,o],"float32")}}const Zk={kernelName:Dh,backendName:"webgl",kernelFunc:Qk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jk(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o}=e,{strides:a,pad:i,dilations:u}=r,c=Ao(s.shape,o.shape,a,u,i),l=new Mk(c);return t.runWebGLProgram(l,[s,o],"float32")}const eR={kernelName:Fh,backendName:"webgl",kernelFunc:Jk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tR(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,dy:o}=e,{strides:a,pad:i,filterShape:u}=r,c=Ao(s.shape,u,a,1,i),l=new Hk(c);return t.runWebGLProgram(l,[s,o],"float32")}const nR={kernelName:Qg,backendName:"webgl",kernelFunc:tR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rR(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,filter:o}=e,{pad:a,strides:i,inputShape:u}=r,c=Ao(u,o.shape,i,1,a),l=new Kk(c);return t.runWebGLProgram(l,[s,o],"float32")}const sR={kernelName:Ph,backendName:"webgl",kernelFunc:rR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oR=Us+`
  return cos(x);
`,aR=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${ss}
  return result;
`,iR=Oe({opSnippet:oR,packedOpSnippet:aR}),uR={kernelName:Lh,backendName:"webgl",kernelFunc:iR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cR=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,lR=Oe({opSnippet:cR}),hR={kernelName:Bh,backendName:"webgl",kernelFunc:lR};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dR{constructor(e,t,r,s,o){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,u,c]=e,[l]=t,[h,d]=r;this.outputShape=[l,h,d,c];const p=s==="bilinear"?1:0,[f,x]=[`${i-1}.0`,`${u-1}.0`],[y,b,S]=h>1?[`${(i-1)/(h-1)}`,"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[I,k,P]=d>1?[`${(u-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${x} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${x}`];this.userCode=`
      const float height_ratio = float(${y});
      const float width_ratio = float(${I});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${b};
        float width_scale = ${k};

        float in_y = ${S};
        if( in_y < 0.0 || in_y > ${f} ) {
          setOutput(float(${o}));
          return;
        }
        float in_x = ${P};
        if( in_x < 0.0 || in_x > ${x} ) {
          setOutput(float(${o}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${p} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pR=n=>{const{inputs:e,backend:t,attrs:r}=n,{image:s,boxes:o,boxInd:a}=e,{cropSize:i,method:u,extrapolationValue:c}=r,l=new dR(s.shape,o.shape,i,u,c);return t.runWebGLProgram(l,[s,o,a],"float32")},fR={kernelName:Uh,backendName:"webgl",kernelFunc:pR};var Io;(function(n){n.Prod="*",n.Sum="+"})(Io||(Io={}));class jl{constructor(e,t,r,s){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const o=this.outputShape.length,a=this.op===Io.Prod?"1.0":"0.0",i=r?a:`getX(${Hl(o,"coords",this.op)})`,u=this.outputShape[this.outputShape.length-1];let c="",l="";r?(c=s?`end != ${u-1}`:"end != 0",l=s?"end + 1":"end - 1"):(c=s?`end + pow2 < ${u}`:"end >= pow2",l=s?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${Be(o)} coords = getOutputCoords();
        int end = ${Kl(o,"coords",this.op)};
        float val = ${i};
        int pow2 = int(pow(2.0, index));
        if (${c}) {
          int idx = ${l};
          ${Kl(o,"coords",this.op)} = idx;
          val ${this.op}= getX(${Hl(o,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function Hl(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.x, ${e}.y`;if(n===3)return`${e}.x, ${e}.y, ${e}.z`;if(n===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}function Kl(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.y`;if(n===3)return`${e}.z`;if(n===4)return`${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hg(n,e,t,r,s,o){const a=e.shape.length,i=on([r],a);let u=e;i!=null&&(u=vt({inputs:{x:e},backend:t,attrs:{perm:i}}));const c=an(1,a)[0];if(c!==a-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${r}`);const l=u.shape[c];let h=Ft({inputs:{x:u},backend:t});for(let d=0;d<=Math.ceil(Math.log2(l))-1;d++){const p=new jl(n,u.shape,!1,o),f=[[d]],x=h;h=t.runWebGLProgram(p,[h],h.dtype,f),t.disposeIntermediateTensorInfo(x)}if(s){const d=new jl(n,u.shape,s,o),p=h;h=t.runWebGLProgram(d,[h],h.dtype),t.disposeIntermediateTensorInfo(p)}if(i!=null){const d=Zu(i),p=vt({inputs:{x:h},backend:t,attrs:{perm:d}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(u),p}return h}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mR(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,exclusive:a,reverse:i}=r;return hg(Io.Prod,s,t,o,a,i)}const gR={kernelName:Vh,backendName:"webgl",kernelFunc:mR};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yR(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,exclusive:a,reverse:i}=r;return hg(Io.Sum,s,t,o,a,i)}const xR={kernelName:Mh,backendName:"webgl",kernelFunc:yR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bR(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,weights:o}=e,{size:a,binaryOutput:i}=r;if(s.shape.length===1){const u=t.readSync(s.dataId),c=t.readSync(o.dataId),l=j1(u,c,o.dtype,o.shape,a);return t.makeTensorInfo([a],o.dtype,l)}else if(s.shape.length===2){const u=t.bufferSync(s),c=t.bufferSync(o),l=C6(u,c,a,i);return t.makeTensorInfo(l.shape,o.dtype,l.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}const wR={kernelName:Wh,backendName:"webgl",kernelFunc:bR};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vR{constructor(e,t,r){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=r,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $R(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{blockSize:o,dataFormat:a}=r,i=s.shape[0],u=a==="NHWC"?s.shape[1]:s.shape[2],c=a==="NHWC"?s.shape[2]:s.shape[3],l=a==="NHWC"?s.shape[3]:s.shape[1],h=u*o,d=c*o,p=l/(o*o),f=a==="NHWC"?[i,h,d,p]:[i,p,h,d],x=new vR(f,o,a);return t.runWebGLProgram(x,[s],s.dtype)}const CR={kernelName:zh,backendName:"webgl",kernelFunc:$R};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dg{constructor(e,t=!1,r=null,s=!1,o=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=yt(this.outputShape.length);const a=e.filterHeight,i=e.filterWidth,u=e.outChannels/e.inChannels;let c="",l="";r&&(s?c=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:o?c=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:c=`
          float activation(float x) {
            ${r}
          }
        `,l="result = activation(result);");const h=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${c}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${u};
        int q = d2 - d1 * ${u};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${h}
        ${l}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pg{constructor(e,t=!1,r=null,s=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=yt(this.outputShape.length);const a=e.outChannels/e.inChannels,i=e.padInfo.left,u=e.strideWidth,c=e.dilationWidth,l=e.filterHeight,h=e.filterWidth,d=h;let p=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let b=0;b<h;b++)p+=`
          vec4 xTexelC${b*2};
          int xTexelC${b*2}Ready;
          vec4 xTexelC${b*2+1};
          int xTexelC${b*2+1}Ready;
          vec4 xC${b};`;p+=`
    for (int r = 0; r < ${l}; r++) {
      `;for(let b=0;b<h;b++)p+=`
          xTexelC${b*2} = vec4(0.0);
          xTexelC${b*2}Ready = 0;
          xTexelC${b*2+1} = vec4(0.0);
          xTexelC${b*2+1}Ready = 0;
          xC${b} = vec4(0.0);`;p+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let b=0;b<(d+1)/2;b++){const S=b*2;if(p+=`
          xC = xCCorner + ${S*c};
          `,u===1){if(S<h&&(i%2===1?(p+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${S}Ready == 0) {
                  xTexelC${S} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${S}.zw = vec2(0.0);
                  }
                  xTexelC${S}Ready = 1;
                }
              `,c===1&&S>0?p+=`
                xC${S} = vec4(xTexelC${S-2}.zw, xTexelC${S}.xy);
                `:p+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${S} = vec4(previous.zw, xTexelC${S}.xy);
                  } else {
                    xC${S} = vec4(0.0, 0.0, xTexelC${S}.xy);
                  }
                  `):p+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${S}Ready == 0) {
                  xTexelC${S} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${S}.zw = vec2(0.0);
                  }
                  xTexelC${S}Ready = 1;
                }

                xC${S} = xTexelC${S};
                `,S+1<h)){const I=i%2===0?Vu(c):c;c%2===0&&i%2===1||c%2!==0&&i%2!==1?(p+=`
                  xCOffset = xC + imod(pads[1], 2) + ${I};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${S+1}Ready == 0) {
                    xTexelC${S+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${S+1}.zw = vec2(0.0);
                    }
                    xTexelC${S+1}Ready = 1;
                  }
                  `,c>1?p+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${S+1} = vec4(previous.zw, xTexelC${S+1}.xy);
                    } else {
                     xC${S+1} = vec4(0.0, 0.0, xTexelC${S+1}.xy);
                    }
                    `:p+=`
                    xC${S+1} = vec4(xTexelC${S}.zw, xTexelC${S+1}.xy);
                    `):I===1?p+=`
                    xC${S+1} = xTexelC${S};
                    `:p+=`
                    xCOffset = xC + ${I};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${S+1}Ready == 0) {
                      xTexelC${S+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${S+1}.zw = vec2(0.0);
                      }
                      xTexelC${S+1}Ready = 1;
                    }

                    xC${S+1} = xTexelC${S+1};
                    `}}else S<h&&(i%2===1?(p+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${S}Ready == 0) {
                  xTexelC${S} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${S}.zw = vec2(0.0);
                  }
                  xTexelC${S}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${S+1}Ready == 0) {
                  xTexelC${S+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${S+1}.zw = vec2(0.0);
                  }
                  xTexelC${S+1}Ready = 1;
                }

                xC${S} = vec4(xTexelC${S}.zw, xTexelC${S+1}.zw);
              `,S+1<h&&(p+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${S+1} = vec4(xTexelC${S+1}.xy, final.xy);
                `)):(p+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${S}Ready == 0) {
                  xTexelC${S} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${S}.zw = vec2(0.0);
                  }
                  xTexelC${S}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${S+1}Ready == 0) {
                  xTexelC${S+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${S+1}.zw = vec2(0.);
                  }
                  xTexelC${S+1}Ready = 1;
                }

                xC${S} = vec4(
                  xTexelC${S}.xy, xTexelC${S+1}.xy);
              `,S+1<h&&(p+=`
                  xC${S+1} = vec4(xTexelC${S}.zw, xTexelC${S+1}.zw);
                `)));S<h&&(p+=`
            wTexel = getW(r, ${S}, d1, q);
            dotProd += xC${S} * vec4(wTexel.xz, wTexel.xz);
          `,S+1<h&&(p+=`
              wTexel = getW(r, ${S+1}, d1, q);
              dotProd += xC${S+1} * vec4(wTexel.xz, wTexel.xz);
            `))}p+=`
    }
  `,p+=`
      }
    `;let f="",x="";r&&(s?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:o?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:f=`vec4 activation(vec4 x) {
          ${r}
        }`,x="result = activation(result);");const y=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${f}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${p}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${y}
        ${x}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SR(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o}=e,{strides:a,pad:i,dilations:u,dimRoundingMode:c}=r;let l=u;l==null&&(l=[1,1]),_(Pt(a,l),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);const h=Ht(s.shape,o.shape,a,l,i,c,!0);let d;j().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?d=new pg(h):d=new dg(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return t.runWebGLProgram(d,[s,o],"float32",p)}const TR={kernelName:Gh,backendName:"webgl",kernelFunc:SR};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NR{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,r=e.strideWidth,s=e.padInfo.top,o=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${o};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class ER{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,r=e.filterWidth,s=e.strideHeight,o=e.strideWidth,a=t-1-e.padInfo.top,i=r-1-e.padInfo.left,u=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${u}; dm++) {
              int d2 = d1 * ${u} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IR(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,dy:o}=e,{strides:a,dilations:i,pad:u,dimRoundingMode:c,filterShape:l}=r,h=Ht(s.shape,l,a,i,u,c,!0),d=new NR(h);return t.runWebGLProgram(d,[s,o],"float32")}const kR={kernelName:jh,backendName:"webgl",kernelFunc:IR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RR(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,filter:o}=e,{strides:a,dilations:i,pad:u,dimRoundingMode:c,inputShape:l}=r,h=Ht(l,o.shape,a,i,u,c,!0),d=new ER(h);return t.runWebGLProgram(d,[s,o],"float32")}const _R={kernelName:Hh,backendName:"webgl",kernelFunc:RR};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AR{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OR(n){const{inputs:e,backend:t}=n,{x:r}=e,s=[...r.shape,...r.shape],o=ne(r.shape),a=ie({inputs:{x:r},backend:t,attrs:{shape:[o]}}),i=new AR(o),u=t.runWebGLProgram(i,[a],a.dtype),c=ie({inputs:{x:u},backend:t,attrs:{shape:s}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(u),c}const DR={kernelName:Kh,backendName:"webgl",kernelFunc:OR};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FR{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:r,padInfo:s,strideHeight:o,strideWidth:a,filterHeight:i,filterWidth:u,dilationHeight:c,dilationWidth:l}=e,{top:h,left:d}=s;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${a});
      const ivec2 pads = ivec2(${h}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${c};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${u}; w++) {
              int wIn = wBeg + w * ${l};

              if (wIn >= 0 && wIn < ${r}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PR(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o}=e,{strides:a,pad:i,dilations:u}=r,c=If(s.shape,o.shape,a,i,"NHWC",u);let l;const h=new FR(c);l=t.runWebGLProgram(h,[s,o],"float32");const d=ie({inputs:{x:l},backend:t,attrs:{shape:c.outShape}});return t.disposeIntermediateTensorInfo(l),d}const LR={kernelName:Xh,backendName:"webgl",kernelFunc:PR};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BR(n){const{inputs:e,backend:t,attrs:r}=n,{equation:s}=r,o=e,{allDims:a,summedDims:i,idDims:u}=e1(s,o.length);n1(a.length,u,o);const{path:c,steps:l}=r1(i,u),h=l.length;let d=null,p=a.length;const f=[];for(let x=0;x<h;++x){for(const y of l[x]){const{permutationIndices:b,expandDims:S}=t1(p,u[y]);let I;s1(b)?I=o[y]:(I=vt({inputs:{x:o[y]},backend:t,attrs:{perm:b}}),f.push(I));const k=I.shape.slice();for(let P=0;P<S.length;++P)k.splice(S[P],0,1);Xe(I.shape,k)||(I=ie({inputs:{x:I},backend:t,attrs:{shape:k}}),f.push(I)),d===null?d=I:(d=Sc({inputs:{a:I,b:d},backend:t}),f.push(d))}x<h-1&&(c[x]>=0&&(d=li({inputs:{x:d},backend:t,attrs:{axis:c[x]-(a.length-p),keepDims:!1}}),f.push(d)),p--)}for(const x of f)x!==d&&t.disposeIntermediateTensorInfo(x);return d}const VR={kernelName:Yh,backendName:"webgl",kernelFunc:BR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MR="return (x >= 0.0) ? x : (exp(x) - 1.0);",UR=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,WR=Oe({opSnippet:MR,packedOpSnippet:UR}),zR={kernelName:Qh,backendName:"webgl",kernelFunc:WR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GR="return (b >= 0.0) ? a : a * (b + 1.0);",jR=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,HR=n=>{const{inputs:e,backend:t}=n,{dy:r,y:s}=e,o=j().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ms(jR,r.shape,s.shape):new Zr(GR,r.shape,s.shape);return t.runWebGLProgram(o,[r,s],r.dtype)},KR={kernelName:Zg,backendName:"webgl",kernelFunc:HR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XR=`
  return vec4(equal(a, b));
`,qR="return float(a == b);",YR=pt({opSnippet:qR,packedOpSnippet:XR,dtype:"bool",cpuKernelImpl:I6}),QR={kernelName:Jh,backendName:"webgl",kernelFunc:YR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZR=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${Xm};
  float a1 = ${qm};
  float a2 = ${Ym};
  float a3 = ${Qm};
  float a4 = ${Zm};
  float a5 = ${Jm};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,JR=Oe({opSnippet:ZR}),e_={kernelName:Zh,backendName:"webgl",kernelFunc:JR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t_=Us+`
  return exp(x);
`,n_=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,fg=Oe({opSnippet:t_,packedOpSnippet:n_,cpuKernelImpl:k6,dtype:"float32"}),r_={kernelName:ed,backendName:"webgl",kernelFunc:fg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lu(n){const{inputs:e,attrs:t,backend:r}=n,{dim:s}=t,{input:o}=e,a=o.shape.length,i=o.shape.slice();let u=s;return s<0&&(_(-(a+1)<=s,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),u=a+s+1),i.splice(u,0,1),ie({inputs:{x:o},backend:r,attrs:{shape:i}})}const s_={kernelName:td,backendName:"webgl",kernelFunc:Lu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xl="return exp(x) - 1.0;",o_=Oe({opSnippet:Xl,packedOpSnippet:Xl,cpuKernelImpl:R6}),a_={kernelName:nd,backendName:"webgl",kernelFunc:o_};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ql{constructor(e,t,r){this.variableNames=["real","imag"];const s=t[1];this.outputShape=t;const o=r?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=r?`${s}.0`:"1.0";let i;if(e==="real")i="return real * expR - imag * expI;";else if(e==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${o};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${s});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${s}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mg(n,e,t){const r=t.texData.get(n.dataId),s=ne(n.shape),o=n.shape[n.shape.length-1],a=s/o,i=ie({inputs:{x:n},backend:t,attrs:{shape:[a,o]}}),u=i.shape,c=new ql("real",u,e),l=new ql("imag",u,e),h=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:u},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:u}],d=t.runWebGLProgram(c,h,"float32"),p=t.runWebGLProgram(l,h,"float32"),f=xr({inputs:{real:d,imag:p},backend:t});t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p);const x=ie({inputs:{x:f},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(f),x}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i_(n){const{inputs:e,backend:t}=n,{input:r}=e;return mg(r,!1,t)}const u_={kernelName:rd,backendName:"webgl",kernelFunc:i_};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class c_{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vo(n){const{backend:e,attrs:t}=n,{shape:r,value:s}=t;let{dtype:o}=t;if(o=o||ko(s),o==="string"){const a=ot(o,ne(r));return a.fill(s),e.makeTensorInfo(r,o,a)}else{const a=new c_(r,s),i=[[s]];return e.runWebGLProgram(a,[],o,i)}}const l_={kernelName:sd,backendName:"webgl",kernelFunc:Vo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class h_{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d_={kernelName:od,backendName:"webgl",kernelFunc:({inputs:n,backend:e})=>{const{image:t}=n,r=e,s=new h_(t.shape);return r.runWebGLProgram(s,[t],t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yl="return floor(x);",p_=Oe({opSnippet:Yl,packedOpSnippet:Yl,cpuKernelImpl:_6}),f_={kernelName:ad,backendName:"webgl",kernelFunc:p_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m_=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,g_=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,y_=pt({opSnippet:m_,packedOpSnippet:g_,dtype:"int32"}),x_={kernelName:id,backendName:"webgl",kernelFunc:y_};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class b_{constructor(e){this.variableNames=["A"];const t=$t(),[r,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${r}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class w_{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=$t(),[r,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${s}.0, ${r}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v_={kernelName:Ji,backendName:"webgl",kernelFunc:$_};let ms,Ki=j().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function $_(n){const{inputs:e,backend:t,attrs:r}=n;let{pixels:s}=e;const{numChannels:o}=r,a=typeof HTMLVideoElement<"u"&&s instanceof HTMLVideoElement,i=typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement,[u,c]=a?[s.videoWidth,s.videoHeight]:[s.width,s.height],l=[c,u],h=[c,u,o];if(i||a){const x=j().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(ms==null||x!==Ki)&&(Ki=x,ms=document.createElement("canvas").getContext("2d",{willReadFrequently:Ki})),ms.canvas.width=u,ms.canvas.height=c,ms.drawImage(s,0,0,u,c),s=ms.canvas}const d=t.makeTensorInfo(l,"int32");t.texData.get(d.dataId).usage=Wt.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(d.dataId),s);const p=j().getBool("WEBGL_PACK")?new w_(h):new b_(h),f=t.runWebGLProgram(p,[d],"int32");return t.disposeData(d.dataId),f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C_(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o,bias:a,preluActivationWeights:i}=e,{strides:u,pad:c,dataFormat:l,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r,x=As(l),y=Ht(s.shape,o.shape,u,h,c,d,!1,x);let b;const S=[],I=a!=null,k=i!=null,P=p==="leakyrelu",W=()=>{const G=[s,o],B=(V,R)=>{if(R==="NCHW"&&V.shape.length===1&&V.shape[0]!==1){const q=ie({inputs:{x:V},backend:t,attrs:{shape:[V.shape[0],1,1]}});return S.push(q),q}return V};if(I&&G.push(B(a,l)),k&&G.push(B(i,l)),P){const V=t.makeTensorInfo([],"float32",_s(f,"float32"));G.push(V),S.push(V)}return G};if(y.filterHeight===1&&y.filterWidth===1&&y.dilationHeight===1&&y.dilationWidth===1&&y.strideHeight===1&&y.strideWidth===1&&(y.padInfo.type==="SAME"||y.padInfo.type==="VALID"))b=cg({x:s,filter:o,convInfo:y,backend:t,bias:a,activation:p,preluActivationWeights:i,leakyreluAlpha:f});else if(y.strideWidth<=2&&x==="channelsLast"&&j().getBool("WEBGL_EXP_CONV")){const G=p?No(p,!0):null,B=new ug(y,I,G,k,P),V=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],R=W();b=t.runWebGLProgram(B,R,"float32",V)}else if(j().getBool("WEBGL_CONV_IM2COL"))b=lg({x:s,filter:o,convInfo:y,backend:t,bias:a,activation:p,preluActivationWeights:i,leakyreluAlpha:f});else{const G=p?No(p,!1):null,B=new ig(y,I,G,k,P),V=W();b=t.runWebGLProgram(B,V,"float32")}const H=ie({inputs:{x:b},backend:t,attrs:{shape:y.outShape}});return S.push(b),S.forEach(G=>t.disposeIntermediateTensorInfo(G)),H}const S_={kernelName:tu,backendName:"webgl",kernelFunc:C_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T_(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o,bias:a,preluActivationWeights:i}=e,{strides:u,pad:c,dilations:l,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=r,f=[];let x=l;x==null&&(x=[1,1]),_(Pt(u,x),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${x}'`);const y=Ht(s.shape,o.shape,u,x,c,h,!0),b=j().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels===1,S=d?No(d,b):null,I=[s,o],k=a!=null,P=i!=null,W=d==="leakyrelu";if(k&&I.push(a),P&&I.push(i),W){const V=t.makeTensorInfo([],"float32",_s(p,"float32"));I.push(V),f.push(V)}let H;b?H=new pg(y,k,S,P,W):H=new dg(y,k,S,P,W);const G=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],B=t.runWebGLProgram(H,I,"float32",G);return f.forEach(V=>t.disposeIntermediateTensorInfo(V)),B}const N_={kernelName:nu,backendName:"webgl",kernelFunc:T_};class E_{constructor(e,t,r,s){this.sliceDim=e,this.strides=t,this.paramsShape=s,this.variableNames=["x","indices"],this.outputShape=r;const o=Be(r.length);let a=`
    int index;`;for(let i=0;i<this.sliceDim;i++)a+=`
          index = round(getIndices(coords[0], ${i}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[i]};
          flattenIndex += index * ${this.strides[i]};`;this.userCode=`
         void main() {
          ${o} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${a}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I_(n){const{inputs:e,backend:t}=n,{params:r,indices:s}=e,o=s.shape,a=o[o.length-1],i=ne(r.shape),[u,c,l,h]=Tm(r,s),d=ie({inputs:{x:s},backend:t,attrs:{shape:[c,a]}}),p=ie({inputs:{x:r},backend:t,attrs:{shape:[ne(r.shape)/l,l]}});if(t.shouldExecuteOnCPU([r,s])||r.dtype==="string"){const b=t.readSync(s.dataId),S=t.bufferSync(r),I=A6(b,S,r.dtype,c,a,l,h,r.shape,i);return t.makeTensorInfo(u,r.dtype,I.values)}const f=new E_(a,h,[c,l],r.shape),x=t.runWebGLProgram(f,[p,d],p.dtype),y=ie({inputs:{x},backend:t,attrs:{shape:u}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(x),y}const k_={kernelName:ld,backendName:"webgl",kernelFunc:I_};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class R_{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const r=Be(this.rank),s=__(e);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${s}));
      }
    `}}function __(n,e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let s=0;s<n.length;s++)s===2?r.push("index"):r.push(`${t[s]}`);return r.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gg(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,indices:o}=e,{axis:a,batchDims:i}=r,u=at(a,s.shape)[0];if(j().get("DEBUG")){const S=t.readSync(o.dataId),I=s.shape[u];for(let k=0;k<S.length;++k){const P=S[k];_(P<=I-1&&P>=0,()=>`GatherV2: the index value ${P} is not in [0, ${I-1}]`)}}const c=b1(s,o,u,i),l=ne(o.shape),h=[],d=ie({inputs:{x:s},backend:t,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),p=ie({inputs:{x:o},backend:t,attrs:{shape:[c.batchSize,l/c.batchSize]}});h.push(d),h.push(p);const f=[c.batchSize,c.outerSize,l/c.batchSize,c.sliceSize];if(t.shouldExecuteOnCPU([s,o])||s.dtype==="string"){const S=t.bufferSync(p),I=t.bufferSync(d),k=O6(I,S,f);return h.forEach(P=>t.disposeIntermediateTensorInfo(P)),t.makeTensorInfo(c.outputShape,k.dtype,k.values)}const x=new R_(d.shape,f),y=t.runWebGLProgram(x,[d,p],d.dtype);h.push(y);const b=ie({inputs:{x:y},backend:t,attrs:{shape:c.outputShape}});return h.forEach(S=>t.disposeIntermediateTensorInfo(S)),b}const A_={kernelName:cd,backendName:"webgl",kernelFunc:gg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O_="return float(a > b);",D_=`
  return vec4(greaterThan(a, b));
`,F_=pt({opSnippet:O_,packedOpSnippet:D_,cpuKernelImpl:D6,dtype:"bool"}),P_={kernelName:hd,backendName:"webgl",kernelFunc:F_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L_="return float(a >= b);",B_=`
  return vec4(greaterThanEqual(a, b));
`,V_=pt({opSnippet:L_,packedOpSnippet:B_,dtype:"bool",cpuKernelImpl:F6}),M_={kernelName:dd,backendName:"webgl",kernelFunc:V_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U_(n){const{inputs:e,backend:t}=n,{input:r}=e;return mg(r,!0,t)}const W_={kernelName:pd,backendName:"webgl",kernelFunc:U_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z_="return float(!isnan(x) && !isinf(x));",G_=Oe({opSnippet:z_,dtype:"bool"}),j_={kernelName:md,backendName:"webgl",kernelFunc:G_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H_="return float(isinf(x));",K_=Oe({opSnippet:H_,dtype:"bool"}),X_={kernelName:gd,backendName:"webgl",kernelFunc:K_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q_="return float(isnan(x));",Y_=Oe({opSnippet:q_,dtype:"bool"}),Q_={kernelName:yd,backendName:"webgl",kernelFunc:Y_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z_="return float(a < b);",J_=`
  return vec4(lessThan(a, b));
`,e8=pt({opSnippet:Z_,packedOpSnippet:J_,cpuKernelImpl:P6,dtype:"bool"}),t8={kernelName:bd,backendName:"webgl",kernelFunc:e8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n8="return float(a <= b);",r8=`
  return vec4(lessThanEqual(a, b));
`,s8=pt({opSnippet:n8,packedOpSnippet:r8,cpuKernelImpl:L6,dtype:"bool"}),o8={kernelName:wd,backendName:"webgl",kernelFunc:s8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a8(n){const{backend:e,attrs:t}=n,{start:r,stop:s,num:o}=t,a=B6(r,s,o);return e.makeTensorInfo([a.length],"float32",a)}const i8={kernelName:vd,backendName:"webgl",kernelFunc:a8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u8=Us+`
  return x < 0.0 ? 0./0. : log(x);
`,c8=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,l8=Oe({opSnippet:u8,packedOpSnippet:c8,cpuKernelImpl:V6}),h8={kernelName:$d,backendName:"webgl",kernelFunc:l8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d8=Us+`
  return log(1.0 + x);
`,p8=Oe({opSnippet:d8}),f8={kernelName:Cd,backendName:"webgl",kernelFunc:p8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m8="return float(a >= 1.0 && b >= 1.0);",g8=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,y8=pt({opSnippet:m8,packedOpSnippet:g8,dtype:"bool"}),x8={kernelName:Sd,backendName:"webgl",kernelFunc:y8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b8="return float(!(x >= 1.0));",w8=Oe({opSnippet:b8}),v8={kernelName:Td,backendName:"webgl",kernelFunc:w8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $8="return float(a >= 1.0 || b >= 1.0);",C8=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,S8=pt({opSnippet:$8,packedOpSnippet:C8,dtype:"bool"}),T8={kernelName:Nd,backendName:"webgl",kernelFunc:S8};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class N8{constructor(e,t,r,s,o){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;this.outputShape=e;let u;const c=`float(${r}) + float(${s}) * sum`;o===.5?u=`inversesqrt(${c})`:o===1?u=`1.0/(${c})`:u=`exp(log(${c}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${u};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class E8{constructor(e,t,r,s,o){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;this.outputShape=e;let u;const c=`float(${r}) + float(${s}) * sum`;o===.5?u=`inversesqrt(${c})`:o===1?u=`1.0/(${c})`:u=`exp(log(${c}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${u};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I8=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{depthRadius:o,bias:a,alpha:i,beta:u}=r,c=j().getBool("WEBGL_PACK_NORMALIZATION")?new E8(s.shape,o,a,i,u):new N8(s.shape,o,a,i,u);return t.runWebGLProgram(c,[s],s.dtype)},k8={kernelName:Ed,backendName:"webgl",kernelFunc:I8};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class R8{constructor(e,t,r,s,o){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=r,this.alpha=s,this.beta=o,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${s}) * norm + float(${r});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${s})
                * float(${o})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${o});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _8=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s,y:o,dy:a}=e,{depthRadius:i,bias:u,alpha:c,beta:l}=r,h=new R8(s.shape,i,u,c,l);return t.runWebGLProgram(h,[s,o,a],s.dtype)},A8={kernelName:Jg,backendName:"webgl",kernelFunc:_8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O8(n,e,t,r){const s=ne(e),a=ne(n.shape)/s,i=ie({inputs:{x:n},attrs:{shape:[a,s]},backend:r}),u=os(i,n.dtype,"max",r),c=ie({inputs:{x:u},attrs:{shape:t},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(u),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yg(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{reductionIndices:o,keepDims:a}=r,i=s.shape.length,u=at(o,s.shape);let c=u;const l=on(c,i),h=l!=null,d=t.shouldExecuteOnCPU([s]);let p=s;if(h){if(d){const I=t.texData.get(p.dataId).values,k=new Array(i);for(let H=0;H<k.length;H++)k[H]=s.shape[l[H]];const P=$c(I,s.shape,s.dtype,l,k);p=t.makeTensorInfo(k,s.dtype);const W=t.texData.get(p.dataId);W.values=P}else p=ci(s,l,t);c=an(c.length,i)}wn("max",c,i);const[f,x]=Rn(p.shape,c);let y=f;a&&(y=Kt(f,u));let b;if(d){const I=t.texData.get(p.dataId).values,k=M6(I,ne(x),y,s.dtype);b=t.makeTensorInfo(y,s.dtype);const P=t.texData.get(b.dataId);P.values=k}else b=O8(p,x,y,t);return h&&t.disposeIntermediateTensorInfo(p),b}const D8={kernelName:Id,backendName:"webgl",kernelFunc:yg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F8=Cc+`
  return max(a, b);
`,P8=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+ss+`
  return result;
`,L8=pt({opSnippet:F8,packedOpSnippet:P8,cpuKernelImpl:U6}),B8={kernelName:kd,backendName:"webgl",kernelFunc:L8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V8(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e;Po(s,"maxPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:u}=r,c=1;_(Pt(a,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const l=Jr(s.shape,o,a,c,i,u);if(l.filterWidth===1&&l.filterHeight===1&&Xe(l.inShape,l.outShape))return Ft({inputs:{x:s},backend:t});const h=new Eo(l,"max",!1);return t.runWebGLProgram(h,[s],s.dtype)}const M8={kernelName:Rd,backendName:"webgl",kernelFunc:V8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U8(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{filterSize:o,strides:a,pad:i,dataFormat:u,dimRoundingMode:c}=r,l=[1,1,1],h=_o(s.shape,o,a,l,i,c,u),d=new Tc(h,"max",!1);return t.runWebGLProgram(d,[s],s.dtype)}const W8={kernelName:_d,backendName:"webgl",kernelFunc:U8};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class z8{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,r=e.strideWidth,s=e.dilationHeight,o=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=o-1-e.padInfo.top,u=a-1-e.padInfo.left,c=o*a-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
          wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${c} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class G8{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,r=e.strideHeight,s=e.strideWidth,o=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,u=e.effectiveFilterDepth,c=e.effectiveFilterHeight,l=e.effectiveFilterWidth,h=u-1-e.padInfo.front,d=c-1-e.padInfo.top,p=l-1-e.padInfo.left,f=u*c*l-1;this.userCode=`
      const ivec3 pads = ivec3(${h}, ${d}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${u};
           wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${c};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${r}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${l};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${s}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${f} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${c} * ${l} +
                  wR * ${l} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j8(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:o}=e,a=o,{filterSize:i,strides:u,pad:c,dimRoundingMode:l}=r,h=[1,1,1],d=_o(a.shape,i,u,h,c,l),p=new Tc(d,"max",!0),f=t.runWebGLProgram(p,[a],a.dtype),x=new G8(d),y=t.runWebGLProgram(x,[s,f],a.dtype);return t.disposeIntermediateTensorInfo(f),y}const H8={kernelName:t2,backendName:"webgl",kernelFunc:j8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K8(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:o,output:a}=e,i=o;Po([o,a],"maxPoolGrad");const{filterSize:u,strides:c,pad:l,dimRoundingMode:h}=r,d=Jr(i.shape,u,c,1,l,h),p=!0,f=new Eo(d,"max",p),x=t.runWebGLProgram(f,[i],i.dtype),y=new z8(d),b=t.runWebGLProgram(y,[s,x],i.dtype);return t.disposeIntermediateTensorInfo(x),b}const X8={kernelName:e2,backendName:"webgl",kernelFunc:K8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q8(n,e,t,r){let s=new Eo(t,"max",!1);const o=r.runWebGLProgram(s,[n],"float32");s=new Eo(t,"max",!0,!0,e);const a=r.runWebGLProgram(s,[n],"float32");return[o,a]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y8={kernelName:Ad,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:r}=n,{filterSize:s,strides:o,pad:a,includeBatchInIndex:i}=e,u=t;_(r.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);const c=[1,1];_(Pt(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const l=Jr(r.shape,s,o,c,a),[h,d]=q8(r,i,l,u);return[h,d]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q8(n,e,t,r){const s=ne(e),a=ne(n.shape)/s,i=ie({inputs:{x:n},attrs:{shape:[a,s]},backend:r}),u=os(i,"float32","mean",r),c=ie({inputs:{x:u},attrs:{shape:t},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(u),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z8={kernelName:Od,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:r}=n,{keepDims:s,axis:o}=e,a=t,i=r.shape.length,u=at(o,r.shape);let c=u;const l=on(c,i),h=l!=null,d=a.shouldExecuteOnCPU([r]),p=[];let f=r;if(h){if(d){const k=a.texData.get(f.dataId).values,P=new Array(i);for(let G=0;G<P.length;G++)P[G]=r.shape[l[G]];const W=$c(k,r.shape,r.dtype,l,P);f=a.makeTensorInfo(P,r.dtype);const H=a.texData.get(f.dataId);H.values=W}else f=ci(r,l,a);p.push(f),c=an(c.length,i)}wn("sum",c,i);const[x,y]=Rn(f.shape,c);let b=x;s&&(b=Kt(x,u));const S=Q8(f,y,b,a);for(const I of p)a.disposeIntermediateTensorInfo(I);return S}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J8(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:a}=r,i=s.shape.length,u=at(o,s.shape);let c=u;const l=on(c,i);let h=s;l!=null&&(h=vt({inputs:{x:s},backend:t,attrs:{perm:l}}),c=an(c.length,s.shape.length)),wn("min",c,i);const[d,p]=Rn(h.shape,c),f=ne(p),x=ie({inputs:{x:h},backend:t,attrs:{shape:[-1,f]}}),y=os(x,x.dtype,"min",t);let b;if(a){const S=Kt(d,u);b=ie({inputs:{x:y},backend:t,attrs:{shape:S}})}else b=ie({inputs:{x:y},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(y),l!=null&&t.disposeIntermediateTensorInfo(h),b}const e7={kernelName:Dd,backendName:"webgl",kernelFunc:J8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t7=Cc+`
  return min(a, b);
`,n7=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+ss+`
  return result;
`,r7=pt({opSnippet:t7,packedOpSnippet:n7,cpuKernelImpl:W6}),s7={kernelName:Fd,backendName:"webgl",kernelFunc:r7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class o7{constructor(e,t,r){this.variableNames=["x"],this.outputShape=t.map((l,h)=>l[0]+e[h]+l[1]);const s=e.length,o=Be(s),a=t.map(l=>l[0]).join(","),i=t.map((l,h)=>l[0]+e[h]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),c=r==="reflect"?0:1;if(s===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${c};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${c};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${a});
      ${o} end = ${o}(${i});

      void main() {
        ${o} outC = getOutputCoords();
        for (int i = 0; i < ${s}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${c};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${c};
          }
        }
        ${o} coords = outC - start;
        setOutput(getX(${u}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class a7{constructor(e,t,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((f,x)=>f[0]+e[x]+f[1]);const s=e.length,o=Be(s),a=t.map(f=>f[0]).join(","),i=t.map((f,x)=>f[0]+e[x]).join(","),u=wt("rc",s),c=wt("source",s),l=`${u[s-1]} < ${this.outputShape[s-1]}`,h=s===1?"source":`vec2(${c.slice(-2).join()})`,d=r==="reflect"?0:1;let p="";if(s===1){const f=`
        ${o} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;p=`
        ${o} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${c.join()}), ${h});
        ${u[s-1]} += 1;
        if(${l}) {
          ${f}
          result[1] = getChannel(getX(${c.join()}), ${h});
        }
      `}else{const f=`
        ${o} source = rc;
        ${o} lt = ${o}(lessThan(source, start));
        ${o} gte = ${o}(greaterThanEqual(source, end));
        ${o} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;p=`
        ${o} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${c.join()}), ${h});
        ${u[s-1]} += 1;
        if(${l}) {
          ${f}
          result[1] = getChannel(getX(${c.join()}), ${h});
        }
        rc = outputLoc;
        ${u[s-2]} += 1;
        if(${u[s-2]} < ${this.outputShape[s-2]}) {
          ${f}
          result[2] = getChannel(getX(${c.join()}), ${h});
          ${u[s-1]} += 1;
          if(${l}) {
            ${f}
            result[3] = getChannel(getX(${c.join()}), ${h});
          }
        }
      `}this.userCode=`
      const ${o} start = ${o}(${a});
      const ${o} end = ${o}(${i});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i7=({inputs:n,backend:e,attrs:t})=>{const{x:r}=n,{paddings:s,mode:o}=t,a=j().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new a7(r.shape,s,o):new o7(r.shape,s,o);return e.runWebGLProgram(a,[r],r.dtype)},u7={kernelName:Pd,backendName:"webgl",kernelFunc:i7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c7=`if (b == 0.0) return NAN;
  return mod(a, b);`,l7=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+ss+`
  return result;
`,h7=pt({opSnippet:c7,packedOpSnippet:l7}),d7={kernelName:Ld,backendName:"webgl",kernelFunc:h7};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class p7{constructor(e,t,r){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,r],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f7=`
if (a == b) {
  return 1.0;
};
return a / b;`,m7=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,xg=pt({opSnippet:f7,packedOpSnippet:m7,checkOutOfBounds:!0}),g7={kernelName:qh,backendName:"webgl",kernelFunc:xg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ql="return a - b;",bg=pt({opSnippet:Ql,packedOpSnippet:Ql,supportsComplex:!0,cpuKernelImpl:cI}),y7={kernelName:Vp,backendName:"webgl",kernelFunc:bg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wg(n){const{inputs:e,backend:t,attrs:r}=n,{logits:s}=e,{dim:o}=r,a=at([o],s.shape),i=yg({inputs:{x:s},backend:t,attrs:{reductionIndices:a,keepDims:!1}}),u=Kt(i.shape,a),c=ie({inputs:{x:i},backend:t,attrs:{shape:u}}),l=bg({inputs:{a:s,b:c},backend:t}),h=fg({inputs:{x:l},backend:t}),d=li({inputs:{x:h},backend:t,attrs:{axis:a,keepDims:!1}}),p=ie({inputs:{x:d},backend:t,attrs:{shape:u}}),f=xg({inputs:{a:h,b:p},backend:t});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),f}const x7={kernelName:Ep,backendName:"webgl",kernelFunc:wg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b7(n){const{inputs:e,backend:t,attrs:r}=n,{logits:s}=e,{numSamples:o,seed:a,normalized:i}=r,u=i?s:wg({inputs:{logits:s},backend:t,attrs:{dim:s.shape.length-1}}),c=u.shape[0],l=u.shape[1],h=new p7(c,l,o),d=[[a]],p=t.runWebGLProgram(h,[u],"int32",d);return i||t.disposeIntermediateTensorInfo(u),p}const w7={kernelName:Bd,backendName:"webgl",kernelFunc:b7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v7=un+`
  return -x;
`,$7=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function C7(n){const{inputs:e,backend:t}=n,{x:r}=e;if(t.shouldExecuteOnCPU([r])){const o=t.texData.get(r.dataId),[a,i]=G6(o.values,r.shape,r.dtype);return t.makeTensorInfo(i,r.dtype,a)}let s;return j().getBool("WEBGL_PACK_UNARY_OPERATIONS")?s=new or(r.shape,$7):s=new Nn(r.shape,v7),t.runWebGLProgram(s,[r],r.dtype)}const S7={kernelName:Md,backendName:"webgl",kernelFunc:C7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T7=pm;function N7(n){mn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:r}=n,{boxes:s,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u}=r,c=t.readSync(s.dataId),l=t.readSync(o.dataId),{selectedIndices:h}=T7(c,l,a,i,u);return t.makeTensorInfo([h.length],"int32",new Int32Array(h))}const E7={kernelName:Wd,backendName:"webgl",kernelFunc:N7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I7=fm;function k7(n){mn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:r}=n,{boxes:s,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:c}=r,l=t.readSync(s.dataId),h=t.readSync(o.dataId),{selectedIndices:d,validOutputs:p}=I7(l,h,a,i,u,c);return[t.makeTensorInfo([d.length],"int32",new Int32Array(d)),t.makeTensorInfo([],"int32",new Int32Array([p]))]}const R7={kernelName:zd,backendName:"webgl",kernelFunc:k7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _7=mm;function A7(n){mn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:r}=n,{boxes:s,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,softNmsSigma:c}=r,l=t.readSync(s.dataId),h=t.readSync(o.dataId),d=a,p=i,f=u,x=c,{selectedIndices:y,selectedScores:b}=_7(l,h,d,p,f,x);return[t.makeTensorInfo([y.length],"int32",new Int32Array(y)),t.makeTensorInfo([b.length],"float32",new Float32Array(b))]}const O7={kernelName:Gd,backendName:"webgl",kernelFunc:A7};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class D7{constructor(e,t,r,s){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${s}), float(${r}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F7=n=>{const{inputs:e,backend:t,attrs:r}=n,{indices:s}=e,{dtype:o,depth:a,onValue:i,offValue:u}=r,c=ne(s.shape),l=new D7(c,a,i,u),h=ie({inputs:{x:s},backend:t,attrs:{shape:[c]}}),d=t.runWebGLProgram(l,[h],o);t.disposeIntermediateTensorInfo(h);const p=[...s.shape,a],f=ie({inputs:{x:d},backend:t,attrs:{shape:p}});return t.disposeIntermediateTensorInfo(d),f},P7={kernelName:Hd,backendName:"webgl",kernelFunc:F7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ja(n){const{inputs:e,backend:t}=n,{x:r}=e;if(r.dtype==="complex64"){const s=Bo({inputs:{input:r},backend:t}),o=ja({inputs:{x:s},backend:t}),a=hi({inputs:{input:r},backend:t}),i=ja({inputs:{x:a},backend:t}),u=xr({inputs:{real:o,imag:i},backend:t});return t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),u}else return Vo({attrs:{shape:r.shape,dtype:r.dtype,value:r.dtype==="string"?"":0},backend:t})}const L7={kernelName:Kp,backendName:"webgl",kernelFunc:ja};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vg(n){const{inputs:e,backend:t}=n,{x:r}=e;if(r.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(r.dtype==="complex64"){const s=Bo({inputs:{input:r},backend:t}),o=vg({inputs:{x:s},backend:t}),a=hi({inputs:{input:r},backend:t}),i=ja({inputs:{x:a},backend:t}),u=xr({inputs:{real:o,imag:i},backend:t});return t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),u}else return Vo({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:t})}const B7={kernelName:jd,backendName:"webgl",kernelFunc:vg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V7(n){const{inputs:e,backend:t,attrs:r}=n,{axis:s}=r;if(e.length===1)return Lu({inputs:{input:e[0]},backend:t,attrs:{dim:s}});const o=e[0].shape,a=e[0].dtype;e.forEach(l=>{Gt(o,l.shape,"All tensors passed to stack must have matching shapes"),_(a===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});const i=[],u=e.map(l=>{const h=Lu({inputs:{input:l},backend:t,attrs:{dim:s}});return i.push(h),h}),c=ag({inputs:u,backend:t,attrs:{axis:s}});return i.forEach(l=>t.disposeIntermediateTensorInfo(l)),c}const M7={kernelName:Kd,backendName:"webgl",kernelFunc:V7};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class U7{constructor(e,t,r){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((c,l)=>c[0]+e[l]+c[1]);const s=e.length,o=Be(s),a=t.map(c=>c[0]).join(","),i=t.map((c,l)=>c[0]+e[l]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);if(s===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${a});
      ${o} end = ${o}(${i});

      void main() {
        ${o} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${o} coords = outC - start;
          setOutput(getX(${u}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class W7{constructor(e,t,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((x,y)=>x[0]+e[y]+x[1]);const s=e.length,o=Be(s),a=t.map(x=>x[0]).join(","),i=t.map((x,y)=>x[0]+e[y]).join(","),u=wt("rc",s),c=wt("source",s),l=`${u[s-1]} < ${this.outputShape[s-1]}`,h=s===1?"source":`vec2(${c.slice(-2).join()})`,d=[`${o} rc = outputLoc;`,`${u[s-1]} += 1;
       if(${l}) {
      `,s===1?"":`}
       rc = outputLoc;
       ${u[s-2]} += 1;
       if(${u[s-2]} < ${this.outputShape[s-2]}) {`,s===1?"":`  ${u[s-1]} += 1;
         if(${l}) {`],p=s===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let f="";for(let x=0,y=s===1?2:4;x<y;x++)f+=`
        ${d[x]}
        if (${p}) {
          result[${x}] = float(value);
        } else {
          ${o} source = rc - start;
          result[${x}] = getChannel(getX(${c.join()}), ${h});
        }
      `;f+=s===1?"} ":"}}",this.userCode=`
      const ${o} start = ${o}(${a});
      const ${o} end = ${o}(${i});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $g=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{paddings:o,constantValue:a}=r;if(ne(s.shape)===0){const c=o.map((l,h)=>l[0]+s.shape[h]+l[1]);return Vo({backend:t,attrs:{shape:c,value:a,dtype:s.dtype}})}const i=j().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new W7(s.shape,o,a):new U7(s.shape,o,a),u=[[a]];return t.runWebGLProgram(i,[s],s.dtype,u)},z7={kernelName:Xd,backendName:"webgl",kernelFunc:$g};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G7=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,j7=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+ss+`
  return result;
`,H7=pt({opSnippet:G7,packedOpSnippet:j7}),K7={kernelName:qd,backendName:"webgl",kernelFunc:H7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X7(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:a}=r,i=s.shape.length,u=[],c=at(o,s.shape);let l=c;const h=on(l,i);let d=s;h!=null&&(d=vt({inputs:{x:s},backend:t,attrs:{perm:h}}),l=an(l.length,i),u.push(d)),wn("prod",l,i);let p;if(t.shouldExecuteOnCPU([d])){const f=t.texData.get(d.dataId).values,{outVals:x,outShape:y,outDtype:b}=H6(d.shape,d.dtype,f,l);p=t.makeTensorInfo(y,b,x)}else{const[f,x]=Rn(d.shape,l),y=ne(x),b=ie({inputs:{x:d},backend:t,attrs:{shape:[-1,y]}}),S=Hu(s.dtype),I=os(b,S,"prod",t);p=ie({inputs:{x:I},backend:t,attrs:{shape:f}}),u.push(b),u.push(I)}if(a){u.push(p);const f=Kt(p.shape,c);p=ie({inputs:{x:p},backend:t,attrs:{shape:f}})}return u.forEach(f=>t.disposeIntermediateTensorInfo(f)),p}const q7={kernelName:Qd,backendName:"webgl",kernelFunc:X7};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y7(n){const{inputs:e,backend:t,attrs:r}=n,{paramsNestedSplits:s,paramsDenseValues:o,indices:a}=e,{outputRaggedRank:i}=r,u=s.map(b=>t.readSync(b.dataId)),c=s.map(b=>b.shape),l=t.readSync(o.dataId),h=t.readSync(a.dataId),[d,p,f]=K6(u,c,l,o.shape,o.dtype,h,a.shape,i),x=d.map(b=>t.makeTensorInfo([b.length],"int32",b)),y=t.makeTensorInfo(f,o.dtype,p);return x.concat([y])}const Q7={kernelName:Zd,backendName:"webgl",kernelFunc:Y7};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z7(n){const{inputs:e,backend:t}=n,{starts:r,limits:s,deltas:o}=e,a=t.readSync(r.dataId),i=t.readSync(s.dataId),u=t.readSync(o.dataId),[c,l]=X6(a,r.shape,r.dtype,i,s.shape,u,o.shape),h=t.makeTensorInfo([c.length],"int32",c),d=t.makeTensorInfo([l.length],r.dtype,l);return[h,d]}const J7={kernelName:Jd,backendName:"webgl",kernelFunc:Z7};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eA(n){const{inputs:e,backend:t,attrs:r}=n,{shape:s,values:o,defaultValue:a,rowPartitionTensors:i}=e,{rowPartitionTypes:u}=r,c=t.readSync(s.dataId),l=t.readSync(o.dataId),h=t.readSync(a.dataId),d=i.map(y=>t.readSync(y.dataId)),p=i.map(y=>y.shape),[f,x]=q6(c,s.shape,l,o.shape,o.dtype,h,a.shape,d,p,u);return t.makeTensorInfo(f,o.dtype,x)}const tA={kernelName:ep,backendName:"webgl",kernelFunc:eA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cg=n=>{const{backend:e,attrs:t}=n,{start:r,stop:s,step:o,dtype:a}=t,i=Y6(r,s,o,a);return e.makeTensorInfo([i.length],a,i)},nA={kernelName:tp,backendName:"webgl",kernelFunc:Cg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rA="return 1.0 / x;",sA=Oe({opSnippet:rA}),oA={kernelName:rp,backendName:"webgl",kernelFunc:sA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aA=un+`
  return (x < 0.0) ? 0.0 : x;
`,iA=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,uA=Oe({opSnippet:aA,packedOpSnippet:iA}),cA={kernelName:sp,backendName:"webgl",kernelFunc:uA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lA=un+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,hA=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,dA=Oe({opSnippet:lA,packedOpSnippet:hA}),pA={kernelName:up,backendName:"webgl",kernelFunc:dA};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fA{constructor(e,t,r,s,o){this.variableNames=["A"],this.outputShape=[];const[a,i,u,c]=e;this.outputShape=[a,t,r,c];const l=[s&&t>1?i-1:i,s&&r>1?u-1:u],h=[s&&t>1?t-1:t,s&&r>1?r-1:r];let d;o?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${l[0]/h[0]},
          ${l[1]/h[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mA{constructor(e,t,r,s,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,u,c]=e;this.outputShape=[a,t,r,c];const l=[s&&t>1?i-1:i,s&&r>1?u-1:u],h=[s&&t>1?t-1:t,s&&r>1?r-1:r];let d;o?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${l[0]/h[0]},
          ${l[1]/h[1]},
          ${l[1]/h[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${r-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gA(n){const{inputs:e,backend:t,attrs:r}=n,{images:s}=e,{alignCorners:o,halfPixelCenters:a,size:i}=r,[u,c]=i,l=j().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new mA(s.shape,u,c,o,a):new fA(s.shape,u,c,o,a);return t.runWebGLProgram(l,[s],"float32")}const yA={kernelName:ip,backendName:"webgl",kernelFunc:gA};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xA{constructor(e,t,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,o]=t,[,a,i]=e,u=[r&&a>1?s-1:s,r&&i>1?o-1:o],c=[r&&a>1?a-1:a,r&&i>1?i-1:i],l=u[0]/c[0],h=u[1]/c[1],d=1/l,p=1/h,f=Math.ceil(d)*2+2,x=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${l});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${x});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${o-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bA(n){const{inputs:e,backend:t,attrs:r}=n,{images:s,dy:o}=e,{alignCorners:a}=r,i=new xA(o.shape,s.shape,a);return t.runWebGLProgram(i,[o],o.dtype)}const wA={kernelName:r2,backendName:"webgl",kernelFunc:bA};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vA{constructor(e,t,r,s,o){this.variableNames=["A"],this.outputShape=[];const[a,i,u,c]=e;this.outputShape=[a,t,r,c];const l=[s&&t>1?i-1:i,s&&r>1?u-1:u],h=[s&&t>1?t-1:t,s&&r>1?r-1:r],d=s?"0.5":"0.0";let p;o?p="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${l[0]/h[0]},
          ${l[1]/h[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $A{constructor(e,t,r,s,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,u,c]=e;this.outputShape=[a,t,r,c];const l=[s&&t>1?i-1:i,s&&r>1?u-1:u],h=[s&&t>1?t-1:t,s&&r>1?r-1:r],d=s?"0.5":"0.0";let p;o?p="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${l[0]/h[0]},
          ${l[1]/h[1]},
          ${l[1]/h[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${r-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CA(n){const{inputs:e,backend:t,attrs:r}=n,{images:s}=e,{alignCorners:o,halfPixelCenters:a,size:i}=r,[u,c]=i,l=j().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new $A(s.shape,u,c,o,a):new vA(s.shape,u,c,o,a);return t.runWebGLProgram(l,[s],s.dtype)}const SA={kernelName:ap,backendName:"webgl",kernelFunc:CA};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TA{constructor(e,t,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,o]=t,[,a,i]=e,u=[r&&a>1?s-1:s,r&&i>1?o-1:o],c=[r&&a>1?a-1:a,r&&i>1?i-1:i],l=u[0]/c[0],h=u[1]/c[1],d=1/l,p=1/h,f=Math.ceil(d)*2+2,x=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${l});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${x});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${u[0]}) *
                (float(dyR) / float(${c[0]}));

            float sourceFracCol =
                float(${u[1]}) *
                  (float(dyC) / float(${c[1]}));

            int sourceNearestRow = int(min(
                float(int(${s}) - 1),
                ${r} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${o}) - 1),
                ${r} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NA(n){const{inputs:e,backend:t,attrs:r}=n,{images:s,dy:o}=e,{alignCorners:a}=r,i=new TA(o.shape,s.shape,a);return t.runWebGLProgram(i,[o],o.dtype)}const EA={kernelName:n2,backendName:"webgl",kernelFunc:NA};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class IA{constructor(e,t){this.variableNames=["x"];const r=e.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);if(this.outputShape=e,r===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}const s=i=>t.indexOf(i)!==-1&&e[i]!==1?`${e[i]} - coords[${i}] - 1`:`coords[${i}]`,o=e.map((i,u)=>s(u)).join(","),a=Be(r);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kA{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const r=e.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);this.outputShape=e;const s=wt("rc",r),o=`${s[r-1]} + 1 < ${this.outputShape[r-1]}`,a=`${s[r-2]} + 1 < ${this.outputShape[r-2]}`,i=Be(r);r===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${o}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${u(s.slice())};
          if(${o}){
            result.g = ${c(s.slice())};
          }
          if(${a}) {
            result.b = ${l(s.slice())};
            if(${o}) {
              result.a = ${h(s.slice())};
            }
          }
          setOutput(result);
        }
    `;function u(f){return d(f)}function c(f){return f[r-1]="("+f[r-1]+" + 1)",d(f)}function l(f){return f[r-2]="("+f[r-2]+" + 1)",d(f)}function h(f){return f[r-1]="("+f[r-1]+" + 1)",f[r-2]="("+f[r-2]+" + 1)",d(f)}function d(f){const x=e.map((S,I)=>p(I,f)),y=x.join(","),b=x.slice(-2).join(",");return`getChannel(getX(${y}), vec2(${b}))`}function p(f,x){return t.indexOf(f)!==-1&&e[f]!==1?`${e[f]} - ${x[f]} - 1`:`${x[f]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RA(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{dims:o}=r,a=s.shape.length,i=at(o,s.shape);if(a===0)return Ft({inputs:{x:s},backend:t});const u=j().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new kA(s.shape,i):new IA(s.shape,i);return t.runWebGLProgram(u,[s],s.dtype)}const _A={kernelName:cp,backendName:"webgl",kernelFunc:RA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AA{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const r=e[1],s=e[2];this.outputShape=e;let o="";typeof t=="number"?o=`float outputValue = ${t.toFixed(2)};`:o=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${o}
          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${r}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OA={kernelName:qp,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:r}=n,{radians:s,fillValue:o,center:a}=e,i=t,u=new AA(r.shape,o),[c,l]=zm(a,r.shape[1],r.shape[2]),h=[[c,l,Math.sin(s),Math.cos(s)]];return i.runWebGLProgram(u,[r],r.dtype,h)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DA=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,FA=Oe({opSnippet:DA}),PA={kernelName:lp,backendName:"webgl",kernelFunc:FA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LA="return inversesqrt(x);",BA=Oe({opSnippet:LA,cpuKernelImpl:Q6}),VA={kernelName:hp,backendName:"webgl",kernelFunc:BA};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nc{constructor(e,t,r,s,o,a,i=!0,u=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const c=Be(o.length),l=Be(a.length);let h="";r===1?h="i":r===2&&(h="i, j");const d=`getIndices(${h})`;let p="";s===1?p="i":s===2&&(p="i, coords[1]");const f=`getUpdates(${p})`;let x="";u&&(x="coords[0], coords[1]");const y=`getDefaultValue(${x})`,b=t>1?"strides[j]":"strides";this.userCode=`
        ${c} strides = ${c}(${o});

        void main() {
          ${l} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${d});
              flattenedIndex += index * ${b};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${f};
              found = true;
            }
          }
          setOutput(mix(${y}, sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MA{constructor(e,t,r,s,o,a,i=!0,u=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a;const c=Be(o.length),l=Be(a.length);let h="";r===1?h="i":r===2&&(h="i, j");const d=`getIndices(${h})`;let p="";s===1?p="i":s===2&&(p="i, coords[1]");const f=`getUpdates(${p})`;let x="";u&&(x="coords[0], coords[1]");const y=`getDefaultValue(${x})`,b=t>1?"strides[j]":"strides",S=t>1?"strides[j + 1]":"strides";this.userCode=`
        ${c} strides = ${c}(${o});

        void main() {
          ${l} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${t}; j+=2) {
              ivec4 index = round(${d});
              flattenedIndex += index.xz * ${b};
              if (j + 1 < ${t}) {
                flattenedIndex += index.yw * ${S};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${f};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${y}, sum, found));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UA(n){const{inputs:e,backend:t,attrs:r}=n,{indices:s,updates:o}=e,{shape:a}=r,{sliceRank:i,numUpdates:u,sliceSize:c,strides:l,outputSize:h}=ti(o,s,a),d=[h/c,c];if(h===0)return t.makeTensorInfo(a,s.dtype);const p=ie({inputs:{x:s},backend:t,attrs:{shape:[u,i]}}),f=ie({inputs:{x:o},backend:t,attrs:{shape:[u,c]}}),x=t.makeTensorInfo([],"float32",new Float32Array([0]));let y;j().getBool("WEBGL_PACK")?y=new MA(u,i,p.shape.length,f.shape.length,l,d):y=new Nc(u,i,p.shape.length,f.shape.length,l,d);const b=t.runWebGLProgram(y,[f,p,x],f.dtype),S=ie({inputs:{x:b},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(x),S}const WA={kernelName:dp,backendName:"webgl",kernelFunc:UA};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zA{constructor(e,t,r,s){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,r];const o="while (left < right) {",a=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=j().getNumber("WEBGL_VERSION")===2?o:a,u=s==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${i}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${u} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GA(n){const{inputs:e,backend:t,attrs:r}=n,{sortedSequence:s,values:o}=e,{side:a}=r,i=new zA(s.shape[0],s.shape[1],o.shape[1],a),u=[[s.shape[1]]];return t.runWebGLProgram(i,[s,o],"int32",u)}const jA={kernelName:fp,backendName:"webgl",kernelFunc:GA};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HA{constructor(e,t,r){this.variableNames=["c","a","b"],this.outputShape=t;let s,o;if(r>4)throw Error(`Where for rank ${r} is not yet supported`);if(r===1)o="resRC",s="resRC";else{const i=["resRC.x","resRC.y","resRC.z","resRC.w"],u=[],c=[];for(let l=0;l<t.length;l++)c.push(`${i[l]}`),l<e&&u.push(`${i[l]}`);s=u.join(),o=c.join()}const a=Be(r);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${s});
        if (cVal >= 1.0) {
          setOutput(getA(${o}));
        } else {
          setOutput(getB(${o}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KA(n){const{inputs:e,backend:t}=n,{condition:r,t:s,e:o}=e,a=new HA(r.shape.length,s.shape,s.shape.length);return t.runWebGLProgram(a,[r,s,o],kn(s.dtype,o.dtype))}const XA={kernelName:mp,backendName:"webgl",kernelFunc:KA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qA=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${Hm};
  float scale = ${Km};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,YA=Oe({opSnippet:qA}),QA={kernelName:gp,backendName:"webgl",kernelFunc:YA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZA=Us+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,JA=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,eO=Oe({opSnippet:ZA,packedOpSnippet:JA,cpuKernelImpl:J6}),tO={kernelName:vp,backendName:"webgl",kernelFunc:eO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nO=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,rO=Oe({opSnippet:nO}),sO={kernelName:wp,backendName:"webgl",kernelFunc:rO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oO=Us+`
  return sin(x);
`,aO=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${ss}
  return result;
`,iO=Oe({opSnippet:oO,packedOpSnippet:aO}),uO={kernelName:xp,backendName:"webgl",kernelFunc:iO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cO=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,lO=Oe({opSnippet:cO}),hO={kernelName:bp,backendName:"webgl",kernelFunc:lO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dO=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,pO=Oe({opSnippet:dO}),fO={kernelName:$p,backendName:"webgl",kernelFunc:pO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mO=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{blockShape:o,paddings:a}=r;_(s.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const i=o.reduce((b,S)=>b*S),u=[[0,0]];u.push(...a);for(let b=1+o.length;b<s.shape.length;++b)u.push([0,0]);const c=[],l=$g({inputs:{x:s},backend:t,attrs:{paddings:u,constantValue:0}}),h=fc(l.shape,o,i,!1),d=mc(h.length,o.length,!1),p=gc(l.shape,o,i,!1),f=ie({inputs:{x:l},backend:t,attrs:{shape:h}}),x=vt({inputs:{x:f},backend:t,attrs:{perm:d}}),y=ie({inputs:{x},backend:t,attrs:{shape:p}});return c.push(l),c.push(f),c.push(x),c.forEach(b=>t.disposeIntermediateTensorInfo(b)),y},gO={kernelName:Tp,backendName:"webgl",kernelFunc:mO};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yO(n){const{inputs:e,backend:t}=n,{indices:r,values:s,denseShape:o,defaultValue:a}=e;if(o.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${o.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${r.shape}`);if(s.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${s.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);const i=t.readSync(r.dataId),u=t.readSync(s.dataId),c=t.readSync(o.dataId),l=t.readSync(a.dataId)[0],[h,d,p,f,x]=tI(i,r.shape,r.dtype,u,s.dtype,c,l);return[t.makeTensorInfo(d,r.dtype,h),t.makeTensorInfo([d[0]],s.dtype,p),t.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(y=>Number(y)))),t.makeTensorInfo([x.length],r.dtype,new Int32Array(x))]}const xO={kernelName:Ip,backendName:"webgl",kernelFunc:yO};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bO(n){const{inputs:e,backend:t}=n,{inputIndices:r,inputShape:s,newShape:o}=e;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(s.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(o.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const a=Array.from(t.readSync(s.dataId)),i=t.readSync(r.dataId),u=Array.from(t.readSync(o.dataId)),[c,l,h]=nI(i,r.shape,r.dtype,a,u);return[t.makeTensorInfo(l,r.dtype,c),t.makeTensorInfo([h.length],o.dtype,new Int32Array(h))]}const wO={kernelName:kp,backendName:"webgl",kernelFunc:bO};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vO(n){const{inputs:e,backend:t}=n,{data:r,indices:s,segmentIds:o}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${s.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${o.shape}`);const a=t.readSync(r.dataId),i=t.readSync(s.dataId),u=t.readSync(o.dataId),[c,l]=K1(a,r.shape,r.dtype,i,u,!0);return t.makeTensorInfo(l,r.dtype,c)}const $O={kernelName:Rp,backendName:"webgl",kernelFunc:vO};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CO(n){const{inputs:e,backend:t}=n,{data:r,indices:s,segmentIds:o}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${s.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${o.shape}`);const a=t.readSync(r.dataId),i=t.readSync(s.dataId),u=t.readSync(o.dataId),[c,l]=K1(a,r.shape,r.dtype,i,u);return t.makeTensorInfo(l,r.dtype,c)}const SO={kernelName:_p,backendName:"webgl",kernelFunc:CO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TO(n){const{inputs:e,backend:t,attrs:r}=n,{sparseIndices:s,sparseValues:o,defaultValue:a}=e,{outputShape:i}=r,{sliceRank:u,numUpdates:c,sliceSize:l,strides:h,outputSize:d}=ti(o,s,i),p=!1;if(o.dtype==="string"){const b=t.bufferSync(s),S=t.bufferSync(o),I=Ss(t.readSync(a.dataId)[0]),k=Z6(b,S,i,d,l,c,u,h,I,p);return t.makeTensorInfo(i,k.dtype,k.values)}const f=new Nc(c,u,s.shape.length,o.shape.length,h,[d,1],p),x=t.runWebGLProgram(f,[o,s,a],o.dtype),y=ie({inputs:{x},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(x),y}const NO={kernelName:Ap,backendName:"webgl",kernelFunc:TO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EO(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{numOrSizeSplits:o,axis:a}=r,i=at(a,s.shape)[0],u=o1(s,o,i),c=s.shape.length,l=new Array(c).fill(0),h=s.shape.slice();return u.map(d=>{const p=[...h];p[i]=d;const f=Ws({inputs:{x:s},backend:t,attrs:{begin:l,size:p}});return l[i]+=d,f})}const IO={kernelName:Np,backendName:"webgl",kernelFunc:EO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zl="return sqrt(x);",kO=Oe({opSnippet:Zl,packedOpSnippet:Zl,cpuKernelImpl:rI}),RO={kernelName:Cp,backendName:"webgl",kernelFunc:kO};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _O="return x * x;",AO=Oe({opSnippet:_O}),OO={kernelName:s2,backendName:"webgl",kernelFunc:AO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jl="return (a - b) * (a - b);",DO=pt({opSnippet:Jl,packedOpSnippet:Jl}),FO={kernelName:Op,backendName:"webgl",kernelFunc:DO};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PO(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");const o=t.readSync(s.dataId),a=Es(o),i=sI(a,"string",r);return t.makeTensorInfo(s.shape,"string",i)}const LO={kernelName:Dp,backendName:"webgl",kernelFunc:PO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BO({inputs:n,attrs:e,backend:t}){const{x:r}=n,s=un+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,o=new Nn(r.shape,s);return t.runWebGLProgram(o,[r],r.dtype)}const VO={kernelName:Xp,backendName:"webgl",kernelFunc:BO};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MO{constructor(e,t,r){this.variableNames=["x"],this.outputShape=r;const s=r.length,o=Be(r.length),a=Be(r.length);let i="";if(s===1)i="coords * strides + begin";else{let u=0;i=r.map((c,l)=>(u++,r.length===1?`coords * strides[${l}] + begin[${l}]`:`coords[${u-1}] * strides[${l}] + begin[${l}]`)).join(",")}this.userCode=`
      ${o} begin = ${o}(${e});
      ${o} strides = ${o}(${t});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UO(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{begin:o,end:a,strides:i,beginMask:u,endMask:c,ellipsisMask:l,newAxisMask:h,shrinkAxisMask:d}=r,{finalShapeSparse:p,finalShape:f,isIdentity:x,sliceDim0:y,isSimpleSlice:b,begin:S,end:I,strides:k}=Lm(s.shape,o,a,i,u,c,l,h,d);let P;if(x)P=ie({inputs:{x:s},backend:t,attrs:{shape:f}});else if(y||b){_(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);const H=Em(S,I,k),G=Ws({inputs:{x:s},backend:t,attrs:{begin:S,size:H}});P=ie({inputs:{x:G},backend:t,attrs:{shape:f}}),t.disposeIntermediateTensorInfo(G)}else if(t.shouldExecuteOnCPU([s])){const G=t.readSync(s.dataId),B=qe(s.shape,s.dtype,G),V=oI(p,B,k,S);P=t.makeTensorInfo(f,s.dtype,V.values)}else{const G=new MO(S,k,p);P=t.runWebGLProgram(G,[s],s.dtype)}const W=ie({inputs:{x:P},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(P),W}const WO={kernelName:Fp,backendName:"webgl",kernelFunc:UO};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zO(n){const{inputs:e,backend:t,attrs:r}=n,{separator:s,nGramWidths:o,leftPad:a,rightPad:i,padWidth:u,preserveShortSequences:c}=r,{data:l,dataSplits:h}=e,d=t.readSync(l.dataId),p=t.readSync(h.dataId),[f,x]=aI(d,p,s,o,a,i,u,c);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(h.shape,"int32",x)]}const GO={kernelName:Pp,backendName:"webgl",kernelFunc:zO};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jO(n){const{inputs:e,backend:t,attrs:r}=n,{skipEmpty:s}=r,{input:o,delimiter:a}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(o.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const i=t.readSync(o.dataId),u=t.readSync(a.dataId)[0],[c,l,h]=iI(i,u,s),d=l.length;return[t.makeTensorInfo([d,2],"int32",c),t.makeTensorInfo([d],"string",l),t.makeTensorInfo([2],"int32",new Int32Array(h))]}const HO={kernelName:Lp,backendName:"webgl",kernelFunc:jO};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KO(n){const{inputs:e,backend:t,attrs:r}=n,{numBuckets:s}=r,{input:o}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const a=t.readSync(o.dataId),i=uI(a,s);return t.makeTensorInfo(o.shape,"int32",i)}const XO={kernelName:Bp,backendName:"webgl",kernelFunc:KO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qO="return tan(x);",YO=Oe({opSnippet:qO}),QO={kernelName:Mp,backendName:"webgl",kernelFunc:YO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZO=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,JO=Oe({opSnippet:ZO}),e9={kernelName:Up,backendName:"webgl",kernelFunc:JO};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t9(n){const{inputs:e,backend:t,attrs:r}=n,{tensor:s,indices:o,updates:a}=e,{sliceRank:i,numUpdates:u,sliceSize:c,strides:l,outputSize:h}=ti(a,o,s.shape),d=[h/c,c];if(h===0)return t.makeTensorInfo(s.shape,o.dtype);const p=ie({inputs:{x:o},backend:t,attrs:{shape:[u,i]}}),f=ie({inputs:{x:a},backend:t,attrs:{shape:[u,c]}}),x=ie({inputs:{x:s},backend:t,attrs:{shape:d}}),y=new Nc(u,i,p.shape.length,f.shape.length,l,d,!1,!0),b=t.runWebGLProgram(y,[f,p,x],x.dtype),S=ie({inputs:{x:b},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(b),S}const n9={kernelName:pp,backendName:"webgl",kernelFunc:t9};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class r9{constructor(e,t){this.variableNames=["A"];const r=new Array(e.length);for(let a=0;a<r.length;a++)r[a]=e[a]*t[a];this.outputShape=r,this.rank=r.length;const s=Be(this.rank),o=s9(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        setOutput(getA(${o}));
      }
    `}}function s9(n){const e=n.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${n[0]})`;const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let s=0;s<n.length;s++)r.push(`imod(${t[s]}, ${n[s]})`);return r.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sg(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{reps:o}=r;if(s.dtype==="string"||s.shape.length>5){const u=t.readSync(s.dataId),c=s.dtype==="string"?u.map(d=>Ss(d)):u,l=qe(s.shape,s.dtype,c),h=lI(l,o);return t.makeTensorInfo(h.shape,h.dtype,h.values)}const a=new r9(s.shape,o);return t.runWebGLProgram(a,[s],s.dtype)}const o9={kernelName:ju,backendName:"webgl",kernelFunc:Sg};class a9{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class i9{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _r(n,e){e!==null&&n.disposeIntermediateTensorInfo(e)}function eh(n){let e=1;for(;e<n;)e*=2;return e}function u9(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{k:o,sorted:a}=r,i=j().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=j().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=s.shape,l=c[c.length-1];if(t.shouldExecuteOnCPU([s])||l<i||o>u){const V=t.readSync(s.dataId),[R,q]=hI(V,c,s.dtype,o,a);return[t.makeTensorInfo(R.shape,R.dtype,R.values),t.makeTensorInfo(q.shape,q.dtype,q.values)]}if(o===0)return c[c.length-1]=0,[t.makeTensorInfo(c,s.dtype,[]),t.makeTensorInfo(c,"int32",[])];if(l===1)return[s,Vo({attrs:{shape:c,dtype:"int32",value:0},backend:t})];const h=t.texData.get(s.dataId),d=h!==null&&h.isPacked,p=d?t.unpackTensor(s):s,x=ne(c)/l,y=ie({inputs:{x:p},attrs:{shape:[x,l]},backend:t});d&&_r(t,p);const b=eh(o),S=eh(l);let I=null;const k=()=>I===null?[y,y]:[y,I],P=(V,R,q)=>{const te=k(),he=new a9(q),ge=[[l],[I===null?1:0],[Number.NEGATIVE_INFINITY],[V],[R]],be=I;I=t.runWebGLProgram(he,te,"int32",ge),_r(t,be)};for(let V=1;V<b;V*=2){const R=V*2;for(let q=V;q>=1;q/=2)P(R,q,[x,S])}for(let V=S;V>b;V/=2){const R=k(),q=new i9([x,V/2]),he=[[l],[I===null?1:0],[b]],de=I;I=t.runWebGLProgram(q,R,"int32",he),_r(t,de);const ge=b/2,be=ge*2;for(let $e=ge;$e>=1;$e/=2)P(be,$e,I.shape)}let W=I;I=Ws({inputs:{x:I},backend:t,attrs:{begin:0,size:[x,o]}}),_r(t,W);let H=gg({inputs:{x:y,indices:I},backend:t,attrs:{axis:1,batchDims:1}});_r(t,y);const G=c.slice(0,-1);G.push(o),W=I,I=ie({inputs:{x:I},attrs:{shape:G},backend:t}),_r(t,W);const B=H;return H=ie({inputs:{x:H},attrs:{shape:G},backend:t}),_r(t,B),[H,I]}const c9={kernelName:Wp,backendName:"webgl",kernelFunc:u9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class l9{constructor(e,t,r,s,o,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i=r==="nearest"?1:2;let u;switch(s){case"constant":u=1;break;case"reflect":u=2;break;case"wrap":u=3;break;case"nearest":u=4;break;default:u=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${u} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${o});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${o});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${i} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h9(n){const{inputs:e,backend:t,attrs:r}=n,{image:s,transforms:o}=e,{interpolation:a,fillMode:i,fillValue:u,outputShape:c}=r,[l,h,d,p]=s.shape,[f,x]=c??[h,d],y=[l,f,x,p],b=new l9(h,d,a,i,u,y);return t.runWebGLProgram(b,[s,o],"float32")}const d9={kernelName:zp,backendName:"webgl",kernelFunc:h9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p9(n){const{inputs:e,attrs:t,backend:r}=n,{axis:s}=t,{x:o}=e;Po(o,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const a=r.readSync(o.dataId),{outputValues:i,outputShape:u,indices:c}=dI(a,s,o.shape,o.dtype);return[r.makeTensorInfo(u,o.dtype,i),r.makeTensorInfo([c.length],"int32",c)]}const f9={kernelName:Gp,backendName:"webgl",kernelFunc:p9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m9(n){const{inputs:e,backend:t,attrs:r}=n,{value:s}=e;let{axis:o}=r;o<0&&(o+=s.shape.length);const a=s,i=a.shape.length,u=s.shape[o],c=new Array(i-1);let l=0;for(let x=0;x<i;x++)x!==o&&(c[l++]=a.shape[x]);const h=[],d=new Array(i).fill(0),p=a.shape.slice();p[o]=1;const f=new Array(u);for(let x=0;x<f.length;x++){d[o]=x;const y=Ws({inputs:{x:a},backend:t,attrs:{begin:d,size:p}}),b=ie({inputs:{x:y},backend:t,attrs:{shape:c}});f[x]=b,h.push(y)}return h.forEach(x=>t.disposeIntermediateTensorInfo(x)),f}const g9={kernelName:jp,backendName:"webgl",kernelFunc:m9};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class y9{constructor(e,t){this.variableNames=["x","segmentIds"];const r=e.windowSize,s=e.batchSize,o=e.inSize,a=e.numSegments,i=a*Math.ceil(o/r);this.outputShape=[s,i];const u="0.0",c="sumValue",l=Math.floor(r/4)*4,h=r%4,d=`
        sumValue += dot(values, segFilter);
    `;let p="";o%r>0&&(p=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `);let f="";o%r>0&&(f=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${u};

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${f}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${r}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${l};
        if (${h===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${h===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${h===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x9(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,segmentIds:o}=e,{numSegments:a}=r,i=s.shape.length,u=[];let c=0;const l=on([c],i);let h=s;l!=null&&(h=vt({inputs:{x:s},backend:t,attrs:{perm:l}}),u.push(h),c=an(1,i)[0]);const d=x1(h.shape,c,a),p=ne([h.shape[c]]),f=ie({inputs:{x:h},backend:t,attrs:{shape:[-1,p]}});u.push(f);const x=Hu(s.dtype),y=(k,P,W,H,G)=>{const B=k.shape[0],V=k.shape[1],R=y1(V,G),q={windowSize:R,inSize:V,batchSize:B,numSegments:G},te=new y9(q,P),he=t.compileAndRun(te,[k,W],H);if(u.push(he),he.shape[1]===G)return he;const de=Cg({backend:t,attrs:{start:0,stop:G,step:1,dtype:"float32"}}),ge=Sg({inputs:{x:de},backend:t,attrs:{reps:[V/R]}});return u.push(de),u.push(ge),y(he,P,ge,H,G)},b=y(f,"unsortedSegmentSum",o,x,a),S=ie({inputs:{x:b},backend:t,attrs:{shape:d}});let I=S;if(l!=null){u.push(S);const k=Zu(l);I=vt({inputs:{x:I},backend:t,attrs:{perm:k}})}return u.forEach(k=>t.disposeIntermediateTensorInfo(k)),I}const b9={kernelName:Hp,backendName:"webgl",kernelFunc:x9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w9=[r5,o5,u5,h5,p5,g5,x5,w5,S5,N5,k5,A5,F5,V5,W5,G5,H5,Y5,Z5,ek,sk,hk,pk,yk,bk,Tk,Ek,_k,MI,Dk,Vk,zk,qk,Zk,eR,nR,sR,uR,hR,fR,gR,xR,wR,CR,TR,kR,_R,DR,LR,VR,zR,KR,QR,e_,r_,s_,a_,u_,l_,d_,f_,x_,v_,S_,N_,k_,A_,P_,M_,VI,W_,Lk,j_,X_,Q_,WI,t8,o8,i8,h8,f8,x8,v8,T8,k8,A8,D8,B8,M8,W8,H8,X8,Y8,Z8,e7,s7,u7,d7,w7,jI,S7,E7,R7,O7,vk,P7,B7,M7,z7,K7,GI,q7,Q7,J7,tA,nA,$k,g7,oA,cA,pA,KI,yA,wA,SA,EA,_A,OA,PA,VA,WA,jA,XA,QA,tO,sO,uO,hO,ck,x7,fO,gO,xO,wO,$O,SO,NO,IO,RO,OO,FO,LO,VO,WO,GO,HO,XO,y7,e5,QO,e9,n9,o9,c9,d9,t5,f9,g9,b9,L7];for(const n of w9)i2(n);const v9=[10,109,67,103,54,21,162,127,234,93,132,58,172,136,150,149,176,148,152,377,400,378,379,365,397,288,361,323,454,356,389,251,284,332,297,338],Bu={x:0,y:0},$9=async()=>{const n=Tg(),e=n.getContext("2d");if(!e)return;e.translate(n.width,0),e.scale(-1,1),document.body.appendChild(n);const t=await C9();return document.addEventListener("mousemove",r=>{Bu.x=r.clientX,Bu.y=r.clientY}),new Promise(r=>{t.addEventListener("loadeddata",async()=>{const s=await S9();r({detector:s,canvas:n,video:t})},{once:!0})})},Tg=()=>{const n=document.createElement("canvas");return n.className="ignore-effects",n.style.position="fixed",n.style.top="0px",n.style.left="0px",n.style.zIndex="999",n.width=640,n.height=480,n.style.pointerEvents="none",n},C9=async()=>{const n=await navigator.mediaDevices.getUserMedia({video:!0}),e=document.createElement("video");return e.srcObject=n,e.play(),e.width=640,e.height=480,e},S9=async()=>{const n=Ma.MediaPipeFaceMesh;return await NT(n,{runtime:"mediapipe",solutionPath:"https://cdn.jsdelivr.net/npm/@mediapipe/face_mesh",refineLandmarks:!1})},T9=async n=>{const{detector:e,canvas:t,video:r}=n,s={flipHorizontal:!0},o=await e.estimateFaces(r,s);if(!o[0])return;const a=v9.map(x=>o[0].keypoints[x]),i=t.getContext("2d"),u=Tg(),c=u.getContext("2d");if(!(i&&c))return;c.fillStyle="rgba(0, 0, 0, 0)",c.fillRect(0,0,u.width,u.height),c.beginPath(),c.moveTo(a[0].x,a[0].y);const l=a.length;for(let x=1;x<l-2;x++){const y=(a[x].x+a[x+1].x)/2,b=(a[x].y+a[x+1].y)/2;c.quadraticCurveTo(a[x].x,a[x].y,y,b)}c.quadraticCurveTo(a[l-2].x,a[l-2].y,a[l-1].x,a[l-1].y),c.closePath(),c.fillStyle="rgba(0, 0, 0, 255)",c.fill(),i.clearRect(0,0,t.width,t.height),i.drawImage(r,0,0,t.width,t.height);const h=i.getImageData(0,0,t.width,t.height),d=c.getImageData(0,0,u.width,u.height);for(let x=0;x<h.data.length;x+=4)h.data[x+3]=d.data[x+3];i.clearRect(0,0,t.width,t.height),i.putImageData(h,0,0);const{x:p,y:f}=Bu;t.style.transform=`translateX(${p-t.width/2}px) translateY(${f-t.height/2}px)`},th={create:$9,analyze:T9},N9=async()=>{const n=await th.create();if(!n)return;const e=async()=>{var r;const{canvas:t}=n;(r=t.getContext("2d"))==null||r.clearRect(0,0,t.width,t.height),await th.analyze(n),requestAnimationFrame(e)};e()};N9();
